(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        //Allow using this built library as an AMD module
        //in another project. That other project will only
        //see this AMD call, not the internal modules in
        //the closure below.
        define(factory);
    } else {
        //Browser globals case. Just assign the
        //result to a property on the global.
        root.sword = factory();
    }
}(this, function () {
    //console.log = function() {};
    //almond, and your modules will be inlined here
/**
 * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*jslint sloppy: true */
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req, makeMap, handlers,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        hasOwn = Object.prototype.hasOwnProperty,
        aps = [].slice;

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap,
            foundI, foundStarMap, starI, i, j, part,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name && name.charAt(0) === ".") {
            //If have a base name, try to normalize against it,
            //otherwise, assume it is a top-level require that will
            //be relative to baseUrl in the end.
            if (baseName) {
                //Convert baseName to array, and lop off the last part,
                //so that . matches that "directory" and not name of the baseName's
                //module. For instance, baseName of "one/two/three", maps to
                //"one/two/three.js", but we want the directory, "one/two" for
                //this normalization.
                baseParts = baseParts.slice(0, baseParts.length - 1);

                name = baseParts.concat(name.split("/"));

                //start trimDots
                for (i = 0; i < name.length; i += 1) {
                    part = name[i];
                    if (part === ".") {
                        name.splice(i, 1);
                        i -= 1;
                    } else if (part === "..") {
                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                            //End of the line. Keep at least one non-dot
                            //path segment at the front so it can be mapped
                            //correctly to disk. Otherwise, there is likely
                            //no path mapping for a path starting with '..'.
                            //This can still fail, but catches the most reasonable
                            //uses of ..
                            break;
                        } else if (i > 0) {
                            name.splice(i - 1, 2);
                            i -= 2;
                        }
                    }
                }
                //end trimDots

                name = name.join("/");
            } else if (name.indexOf('./') === 0) {
                // No baseName, so this is ID is resolved relative
                // to baseUrl, pull off the leading dot.
                name = name.substring(2);
            }
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (hasProp(waiting, name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!hasProp(defined, name) && !hasProp(defining, name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    //Turns a plugin!resource to [plugin, resource]
    //with the plugin being undefined if the name
    //did not have a plugin prefix.
    function splitPrefix(name) {
        var prefix,
            index = name ? name.indexOf('!') : -1;
        if (index > -1) {
            prefix = name.substring(0, index);
            name = name.substring(index + 1, name.length);
        }
        return [prefix, name];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    makeMap = function (name, relName) {
        var plugin,
            parts = splitPrefix(name),
            prefix = parts[0];

        name = parts[1];

        if (prefix) {
            prefix = normalize(prefix, relName);
            plugin = callDep(prefix);
        }

        //Normalize according
        if (prefix) {
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relName));
            } else {
                name = normalize(name, relName);
            }
        } else {
            name = normalize(name, relName);
            parts = splitPrefix(name);
            prefix = parts[0];
            name = parts[1];
            if (prefix) {
                plugin = callDep(prefix);
            }
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            pr: prefix,
            p: plugin
        };
    };

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    handlers = {
        require: function (name) {
            return makeRequire(name);
        },
        exports: function (name) {
            var e = defined[name];
            if (typeof e !== 'undefined') {
                return e;
            } else {
                return (defined[name] = {});
            }
        },
        module: function (name) {
            return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
            };
        }
    };

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i,
            args = [],
            usingExports;

        //Use name if no relName
        relName = relName || name;

        //Call the callback to define the module, if necessary.
        if (typeof callback === 'function') {

            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relName);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = handlers.require(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) ||
                           hasProp(waiting, depName) ||
                           hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback.apply(defined[name], args);

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            if (handlers[deps]) {
                //callback in this case is really relName
                return handlers[deps](callback);
            }
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, callback).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            //Using a non-zero value because of concern for what old browsers
            //do, and latest browsers "upgrade" to 4 if lower value is used:
            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
            //If want a value immediately, use require('id') instead -- something
            //that works in almond on the global level, but not guaranteed and
            //unlikely to work in other AMD implementations.
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 4);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        config = cfg;
        if (config.deps) {
            req(config.deps, config.callback);
        }
        return req;
    };

    define = function (name, deps, callback) {

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
            waiting[name] = [name, deps, callback];
        }
    };

    define.amd = {
        jQuery: true
    };
}());

define("almond", function(){});

/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {function m(a){throw a;}var p=void 0,t,aa=this;function v(a,b){var c=a.split("."),d=aa;!(c[0]in d)&&d.execScript&&d.execScript("var "+c[0]);for(var g;c.length&&(g=c.shift());)!c.length&&b!==p?d[g]=b:d=d[g]?d[g]:d[g]={}};var w="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Uint32Array;new (w?Uint8Array:Array)(256);var x;for(x=0;256>x;++x)for(var y=x,ba=7,y=y>>>1;y;y>>>=1)--ba;var z=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,
2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,
2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,
2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,
3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,
936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],A=w?new Uint32Array(z):z;function B(a){var b=a.length,c=0,d=Number.POSITIVE_INFINITY,g,f,h,e,k,l,q,s,r;for(s=0;s<b;++s)a[s]>c&&(c=a[s]),a[s]<d&&(d=a[s]);g=1<<c;f=new (w?Uint32Array:Array)(g);h=1;e=0;for(k=2;h<=c;){for(s=0;s<b;++s)if(a[s]===h){l=0;q=e;for(r=0;r<h;++r)l=l<<1|q&1,q>>=1;for(r=l;r<g;r+=k)f[r]=h<<16|s;++e}++h;e<<=1;k<<=1}return[f,c,d]};var C=[],D;for(D=0;288>D;D++)switch(!0){case 143>=D:C.push([D+48,8]);break;case 255>=D:C.push([D-144+400,9]);break;case 279>=D:C.push([D-256+0,7]);break;case 287>=D:C.push([D-280+192,8]);break;default:m("invalid literal: "+D)}
var ca=function(){function a(a){switch(!0){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,
a-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:m("invalid length: "+a)}}var b=[],c,d;for(c=3;258>=c;c++)d=a(c),b[c]=d[2]<<24|d[1]<<
16|d[0];return b}();w&&new Uint32Array(ca);function E(a,b){this.l=[];this.m=32768;this.d=this.f=this.c=this.t=0;this.input=w?new Uint8Array(a):a;this.u=!1;this.n=F;this.K=!1;if(b||!(b={}))b.index&&(this.c=b.index),b.bufferSize&&(this.m=b.bufferSize),b.bufferType&&(this.n=b.bufferType),b.resize&&(this.K=b.resize);switch(this.n){case G:this.a=32768;this.b=new (w?Uint8Array:Array)(32768+this.m+258);break;case F:this.a=0;this.b=new (w?Uint8Array:Array)(this.m);this.e=this.W;this.B=this.R;this.q=this.V;break;default:m(Error("invalid inflate mode"))}}
var G=0,F=1;
E.prototype.r=function(){for(;!this.u;){var a=H(this,3);a&1&&(this.u=!0);a>>>=1;switch(a){case 0:var b=this.input,c=this.c,d=this.b,g=this.a,f=p,h=p,e=p,k=d.length,l=p;this.d=this.f=0;f=b[c++];f===p&&m(Error("invalid uncompressed block header: LEN (first byte)"));h=f;f=b[c++];f===p&&m(Error("invalid uncompressed block header: LEN (second byte)"));h|=f<<8;f=b[c++];f===p&&m(Error("invalid uncompressed block header: NLEN (first byte)"));e=f;f=b[c++];f===p&&m(Error("invalid uncompressed block header: NLEN (second byte)"));e|=
f<<8;h===~e&&m(Error("invalid uncompressed block header: length verify"));c+h>b.length&&m(Error("input buffer is broken"));switch(this.n){case G:for(;g+h>d.length;){l=k-g;h-=l;if(w)d.set(b.subarray(c,c+l),g),g+=l,c+=l;else for(;l--;)d[g++]=b[c++];this.a=g;d=this.e();g=this.a}break;case F:for(;g+h>d.length;)d=this.e({H:2});break;default:m(Error("invalid inflate mode"))}if(w)d.set(b.subarray(c,c+h),g),g+=h,c+=h;else for(;h--;)d[g++]=b[c++];this.c=c;this.a=g;this.b=d;break;case 1:this.q(da,ea);break;
case 2:fa(this);break;default:m(Error("unknown BTYPE: "+a))}}return this.B()};
var I=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],J=w?new Uint16Array(I):I,K=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],L=w?new Uint16Array(K):K,ga=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],O=w?new Uint8Array(ga):ga,ha=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ia=w?new Uint16Array(ha):ha,ja=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,
12,12,13,13],P=w?new Uint8Array(ja):ja,Q=new (w?Uint8Array:Array)(288),R,la;R=0;for(la=Q.length;R<la;++R)Q[R]=143>=R?8:255>=R?9:279>=R?7:8;var da=B(Q),S=new (w?Uint8Array:Array)(30),T,ma;T=0;for(ma=S.length;T<ma;++T)S[T]=5;var ea=B(S);function H(a,b){for(var c=a.f,d=a.d,g=a.input,f=a.c,h;d<b;)h=g[f++],h===p&&m(Error("input buffer is broken")),c|=h<<d,d+=8;h=c&(1<<b)-1;a.f=c>>>b;a.d=d-b;a.c=f;return h}
function U(a,b){for(var c=a.f,d=a.d,g=a.input,f=a.c,h=b[0],e=b[1],k,l,q;d<e;){k=g[f++];if(k===p)break;c|=k<<d;d+=8}l=h[c&(1<<e)-1];q=l>>>16;a.f=c>>q;a.d=d-q;a.c=f;return l&65535}
function fa(a){function b(a,b,c){var d,e,f,g;for(g=0;g<a;)switch(d=U(this,b),d){case 16:for(f=3+H(this,2);f--;)c[g++]=e;break;case 17:for(f=3+H(this,3);f--;)c[g++]=0;e=0;break;case 18:for(f=11+H(this,7);f--;)c[g++]=0;e=0;break;default:e=c[g++]=d}return c}var c=H(a,5)+257,d=H(a,5)+1,g=H(a,4)+4,f=new (w?Uint8Array:Array)(J.length),h,e,k,l;for(l=0;l<g;++l)f[J[l]]=H(a,3);h=B(f);e=new (w?Uint8Array:Array)(c);k=new (w?Uint8Array:Array)(d);a.q(B(b.call(a,c,h,e)),B(b.call(a,d,h,k)))}t=E.prototype;
t.q=function(a,b){var c=this.b,d=this.a;this.C=a;for(var g=c.length-258,f,h,e,k;256!==(f=U(this,a));)if(256>f)d>=g&&(this.a=d,c=this.e(),d=this.a),c[d++]=f;else{h=f-257;k=L[h];0<O[h]&&(k+=H(this,O[h]));f=U(this,b);e=ia[f];0<P[f]&&(e+=H(this,P[f]));d>=g&&(this.a=d,c=this.e(),d=this.a);for(;k--;)c[d]=c[d++-e]}for(;8<=this.d;)this.d-=8,this.c--;this.a=d};
t.V=function(a,b){var c=this.b,d=this.a;this.C=a;for(var g=c.length,f,h,e,k;256!==(f=U(this,a));)if(256>f)d>=g&&(c=this.e(),g=c.length),c[d++]=f;else{h=f-257;k=L[h];0<O[h]&&(k+=H(this,O[h]));f=U(this,b);e=ia[f];0<P[f]&&(e+=H(this,P[f]));d+k>g&&(c=this.e(),g=c.length);for(;k--;)c[d]=c[d++-e]}for(;8<=this.d;)this.d-=8,this.c--;this.a=d};
t.e=function(){var a=new (w?Uint8Array:Array)(this.a-32768),b=this.a-32768,c,d,g=this.b;if(w)a.set(g.subarray(32768,a.length));else{c=0;for(d=a.length;c<d;++c)a[c]=g[c+32768]}this.l.push(a);this.t+=a.length;if(w)g.set(g.subarray(b,b+32768));else for(c=0;32768>c;++c)g[c]=g[b+c];this.a=32768;return g};
t.W=function(a){var b,c=this.input.length/this.c+1|0,d,g,f,h=this.input,e=this.b;a&&("number"===typeof a.H&&(c=a.H),"number"===typeof a.P&&(c+=a.P));2>c?(d=(h.length-this.c)/this.C[2],f=258*(d/2)|0,g=f<e.length?e.length+f:e.length<<1):g=e.length*c;w?(b=new Uint8Array(g),b.set(e)):b=e;return this.b=b};
t.B=function(){var a=0,b=this.b,c=this.l,d,g=new (w?Uint8Array:Array)(this.t+(this.a-32768)),f,h,e,k;if(0===c.length)return w?this.b.subarray(32768,this.a):this.b.slice(32768,this.a);f=0;for(h=c.length;f<h;++f){d=c[f];e=0;for(k=d.length;e<k;++e)g[a++]=d[e]}f=32768;for(h=this.a;f<h;++f)g[a++]=b[f];this.l=[];return this.buffer=g};
t.R=function(){var a,b=this.a;w?this.K?(a=new Uint8Array(b),a.set(this.b.subarray(0,b))):a=this.b.subarray(0,b):(this.b.length>b&&(this.b.length=b),a=this.b);return this.buffer=a};function V(a){a=a||{};this.files=[];this.v=a.comment}V.prototype.L=function(a){this.j=a};V.prototype.s=function(a){var b=a[2]&65535|2;return b*(b^1)>>8&255};V.prototype.k=function(a,b){a[0]=(A[(a[0]^b)&255]^a[0]>>>8)>>>0;a[1]=(6681*(20173*(a[1]+(a[0]&255))>>>0)>>>0)+1>>>0;a[2]=(A[(a[2]^a[1]>>>24)&255]^a[2]>>>8)>>>0};V.prototype.T=function(a){var b=[305419896,591751049,878082192],c,d;w&&(b=new Uint32Array(b));c=0;for(d=a.length;c<d;++c)this.k(b,a[c]&255);return b};function W(a,b){b=b||{};this.input=w&&a instanceof Array?new Uint8Array(a):a;this.c=0;this.ba=b.verify||!1;this.j=b.password}var na={O:0,M:8},X=[80,75,1,2],Y=[80,75,3,4],Z=[80,75,5,6];function oa(a,b){this.input=a;this.offset=b}
oa.prototype.parse=function(){var a=this.input,b=this.offset;(a[b++]!==X[0]||a[b++]!==X[1]||a[b++]!==X[2]||a[b++]!==X[3])&&m(Error("invalid file header signature"));this.version=a[b++];this.ia=a[b++];this.Z=a[b++]|a[b++]<<8;this.I=a[b++]|a[b++]<<8;this.A=a[b++]|a[b++]<<8;this.time=a[b++]|a[b++]<<8;this.U=a[b++]|a[b++]<<8;this.p=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.z=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.J=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.h=a[b++]|a[b++]<<
8;this.g=a[b++]|a[b++]<<8;this.F=a[b++]|a[b++]<<8;this.ea=a[b++]|a[b++]<<8;this.ga=a[b++]|a[b++]<<8;this.fa=a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24;this.$=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.filename=String.fromCharCode.apply(null,w?a.subarray(b,b+=this.h):a.slice(b,b+=this.h));this.X=w?a.subarray(b,b+=this.g):a.slice(b,b+=this.g);this.v=w?a.subarray(b,b+this.F):a.slice(b,b+this.F);this.length=b-this.offset};function pa(a,b){this.input=a;this.offset=b}var qa={N:1,ca:8,da:2048};
pa.prototype.parse=function(){var a=this.input,b=this.offset;(a[b++]!==Y[0]||a[b++]!==Y[1]||a[b++]!==Y[2]||a[b++]!==Y[3])&&m(Error("invalid local file header signature"));this.Z=a[b++]|a[b++]<<8;this.I=a[b++]|a[b++]<<8;this.A=a[b++]|a[b++]<<8;this.time=a[b++]|a[b++]<<8;this.U=a[b++]|a[b++]<<8;this.p=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.z=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.J=(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0;this.h=a[b++]|a[b++]<<8;this.g=a[b++]|a[b++]<<8;this.filename=
String.fromCharCode.apply(null,w?a.subarray(b,b+=this.h):a.slice(b,b+=this.h));this.X=w?a.subarray(b,b+=this.g):a.slice(b,b+=this.g);this.length=b-this.offset};
function $(a){var b=[],c={},d,g,f,h;if(!a.i){if(a.o===p){var e=a.input,k;if(!a.D)a:{var l=a.input,q;for(q=l.length-12;0<q;--q)if(l[q]===Z[0]&&l[q+1]===Z[1]&&l[q+2]===Z[2]&&l[q+3]===Z[3]){a.D=q;break a}m(Error("End of Central Directory Record not found"))}k=a.D;(e[k++]!==Z[0]||e[k++]!==Z[1]||e[k++]!==Z[2]||e[k++]!==Z[3])&&m(Error("invalid signature"));a.ha=e[k++]|e[k++]<<8;a.ja=e[k++]|e[k++]<<8;a.ka=e[k++]|e[k++]<<8;a.aa=e[k++]|e[k++]<<8;a.Q=(e[k++]|e[k++]<<8|e[k++]<<16|e[k++]<<24)>>>0;a.o=(e[k++]|
e[k++]<<8|e[k++]<<16|e[k++]<<24)>>>0;a.w=e[k++]|e[k++]<<8;a.v=w?e.subarray(k,k+a.w):e.slice(k,k+a.w)}d=a.o;f=0;for(h=a.aa;f<h;++f)g=new oa(a.input,d),g.parse(),d+=g.length,b[f]=g,c[g.filename]=f;a.Q<d-a.o&&m(Error("invalid file header size"));a.i=b;a.G=c}}t=W.prototype;t.Y=function(){var a=[],b,c,d;this.i||$(this);d=this.i;b=0;for(c=d.length;b<c;++b)a[b]=d[b].filename;return a};
t.r=function(a,b){var c;this.G||$(this);c=this.G[a];c===p&&m(Error(a+" not found"));var d;d=b||{};var g=this.input,f=this.i,h,e,k,l,q,s,r,M;f||$(this);f[c]===p&&m(Error("wrong index"));e=f[c].$;h=new pa(this.input,e);h.parse();e+=h.length;k=h.z;if(0!==(h.I&qa.N)){!d.password&&!this.j&&m(Error("please set password"));s=this.S(d.password||this.j);r=e;for(M=e+12;r<M;++r)ra(this,s,g[r]);e+=12;k-=12;r=e;for(M=e+k;r<M;++r)g[r]=ra(this,s,g[r])}switch(h.A){case na.O:l=w?this.input.subarray(e,e+k):this.input.slice(e,
e+k);break;case na.M:l=(new E(this.input,{index:e,bufferSize:h.J})).r();break;default:m(Error("unknown compression type"))}if(this.ba){var u=p,n,N="number"===typeof u?u:u=0,ka=l.length;n=-1;for(N=ka&7;N--;++u)n=n>>>8^A[(n^l[u])&255];for(N=ka>>3;N--;u+=8)n=n>>>8^A[(n^l[u])&255],n=n>>>8^A[(n^l[u+1])&255],n=n>>>8^A[(n^l[u+2])&255],n=n>>>8^A[(n^l[u+3])&255],n=n>>>8^A[(n^l[u+4])&255],n=n>>>8^A[(n^l[u+5])&255],n=n>>>8^A[(n^l[u+6])&255],n=n>>>8^A[(n^l[u+7])&255];q=(n^4294967295)>>>0;h.p!==q&&m(Error("wrong crc: file=0x"+
h.p.toString(16)+", data=0x"+q.toString(16)))}return l};t.L=function(a){this.j=a};function ra(a,b,c){c^=a.s(b);a.k(b,c);return c}t.k=V.prototype.k;t.S=V.prototype.T;t.s=V.prototype.s;v("Zlib.Unzip",W);v("Zlib.Unzip.prototype.decompress",W.prototype.r);v("Zlib.Unzip.prototype.getFilenames",W.prototype.Y);v("Zlib.Unzip.prototype.setPassword",W.prototype.L);}).call(this); //@ sourceMappingURL=unzip.min.js.map
;
define("unzip", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Zlib;
    };
}(this)));

/*global setImmediate: false, setTimeout: false, console: false */
(function () {

    var async = {};

    // global on the server, window in the browser
    var root, previous_async;

    root = this;
    if (root != null) {
      previous_async = root.async;
    }

    async.noConflict = function () {
        root.async = previous_async;
        return async;
    };

    function only_once(fn) {
        var called = false;
        return function() {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }
    }

    //// cross-browser compatiblity functions ////

    var _each = function (arr, iterator) {
        if (arr.forEach) {
            return arr.forEach(iterator);
        }
        for (var i = 0; i < arr.length; i += 1) {
            iterator(arr[i], i, arr);
        }
    };

    var _map = function (arr, iterator) {
        if (arr.map) {
            return arr.map(iterator);
        }
        var results = [];
        _each(arr, function (x, i, a) {
            results.push(iterator(x, i, a));
        });
        return results;
    };

    var _reduce = function (arr, iterator, memo) {
        if (arr.reduce) {
            return arr.reduce(iterator, memo);
        }
        _each(arr, function (x, i, a) {
            memo = iterator(memo, x, i, a);
        });
        return memo;
    };

    var _keys = function (obj) {
        if (Object.keys) {
            return Object.keys(obj);
        }
        var keys = [];
        for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
                keys.push(k);
            }
        }
        return keys;
    };

    //// exported async module functions ////

    //// nextTick implementation with browser-compatible fallback ////
    if (typeof process === 'undefined' || !(process.nextTick)) {
        if (typeof setImmediate === 'function') {
            async.nextTick = function (fn) {
                // not a direct alias for IE10 compatibility
                setImmediate(fn);
            };
            async.setImmediate = async.nextTick;
        }
        else {
            async.nextTick = function (fn) {
                setTimeout(fn, 0);
            };
            async.setImmediate = async.nextTick;
        }
    }
    else {
        async.nextTick = process.nextTick;
        if (typeof setImmediate !== 'undefined') {
            async.setImmediate = setImmediate;
        }
        else {
            async.setImmediate = async.nextTick;
        }
    }

    async.each = function (arr, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length) {
            return callback();
        }
        var completed = 0;
        _each(arr, function (x) {
            iterator(x, only_once(function (err) {
                if (err) {
                    callback(err);
                    callback = function () {};
                }
                else {
                    completed += 1;
                    if (completed >= arr.length) {
                        callback(null);
                    }
                }
            }));
        });
    };
    async.forEach = async.each;

    async.eachSeries = function (arr, iterator, callback) {
        callback = callback || function () {};
        if (!arr.length) {
            return callback();
        }
        var completed = 0;
        var iterate = function () {
            iterator(arr[completed], function (err) {
                if (err) {
                    callback(err);
                    callback = function () {};
                }
                else {
                    completed += 1;
                    if (completed >= arr.length) {
                        callback(null);
                    }
                    else {
                        iterate();
                    }
                }
            });
        };
        iterate();
    };
    async.forEachSeries = async.eachSeries;

    async.eachLimit = function (arr, limit, iterator, callback) {
        var fn = _eachLimit(limit);
        fn.apply(null, [arr, iterator, callback]);
    };
    async.forEachLimit = async.eachLimit;

    var _eachLimit = function (limit) {

        return function (arr, iterator, callback) {
            callback = callback || function () {};
            if (!arr.length || limit <= 0) {
                return callback();
            }
            var completed = 0;
            var started = 0;
            var running = 0;

            (function replenish () {
                if (completed >= arr.length) {
                    return callback();
                }

                while (running < limit && started < arr.length) {
                    started += 1;
                    running += 1;
                    iterator(arr[started - 1], function (err) {
                        if (err) {
                            callback(err);
                            callback = function () {};
                        }
                        else {
                            completed += 1;
                            running -= 1;
                            if (completed >= arr.length) {
                                callback();
                            }
                            else {
                                replenish();
                            }
                        }
                    });
                }
            })();
        };
    };


    var doParallel = function (fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [async.each].concat(args));
        };
    };
    var doParallelLimit = function(limit, fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [_eachLimit(limit)].concat(args));
        };
    };
    var doSeries = function (fn) {
        return function () {
            var args = Array.prototype.slice.call(arguments);
            return fn.apply(null, [async.eachSeries].concat(args));
        };
    };


    var _asyncMap = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (err, v) {
                results[x.index] = v;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    };
    async.map = doParallel(_asyncMap);
    async.mapSeries = doSeries(_asyncMap);
    async.mapLimit = function (arr, limit, iterator, callback) {
        return _mapLimit(limit)(arr, iterator, callback);
    };

    var _mapLimit = function(limit) {
        return doParallelLimit(limit, _asyncMap);
    };

    // reduce only has a series version, as doing reduce in parallel won't
    // work in many situations.
    async.reduce = function (arr, memo, iterator, callback) {
        async.eachSeries(arr, function (x, callback) {
            iterator(memo, x, function (err, v) {
                memo = v;
                callback(err);
            });
        }, function (err) {
            callback(err, memo);
        });
    };
    // inject alias
    async.inject = async.reduce;
    // foldl alias
    async.foldl = async.reduce;

    async.reduceRight = function (arr, memo, iterator, callback) {
        var reversed = _map(arr, function (x) {
            return x;
        }).reverse();
        async.reduce(reversed, memo, iterator, callback);
    };
    // foldr alias
    async.foldr = async.reduceRight;

    var _filter = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (v) {
                if (v) {
                    results.push(x);
                }
                callback();
            });
        }, function (err) {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    };
    async.filter = doParallel(_filter);
    async.filterSeries = doSeries(_filter);
    // select alias
    async.select = async.filter;
    async.selectSeries = async.filterSeries;

    var _reject = function (eachfn, arr, iterator, callback) {
        var results = [];
        arr = _map(arr, function (x, i) {
            return {index: i, value: x};
        });
        eachfn(arr, function (x, callback) {
            iterator(x.value, function (v) {
                if (!v) {
                    results.push(x);
                }
                callback();
            });
        }, function (err) {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    };
    async.reject = doParallel(_reject);
    async.rejectSeries = doSeries(_reject);

    var _detect = function (eachfn, arr, iterator, main_callback) {
        eachfn(arr, function (x, callback) {
            iterator(x, function (result) {
                if (result) {
                    main_callback(x);
                    main_callback = function () {};
                }
                else {
                    callback();
                }
            });
        }, function (err) {
            main_callback();
        });
    };
    async.detect = doParallel(_detect);
    async.detectSeries = doSeries(_detect);

    async.some = function (arr, iterator, main_callback) {
        async.each(arr, function (x, callback) {
            iterator(x, function (v) {
                if (v) {
                    main_callback(true);
                    main_callback = function () {};
                }
                callback();
            });
        }, function (err) {
            main_callback(false);
        });
    };
    // any alias
    async.any = async.some;

    async.every = function (arr, iterator, main_callback) {
        async.each(arr, function (x, callback) {
            iterator(x, function (v) {
                if (!v) {
                    main_callback(false);
                    main_callback = function () {};
                }
                callback();
            });
        }, function (err) {
            main_callback(true);
        });
    };
    // all alias
    async.all = async.every;

    async.sortBy = function (arr, iterator, callback) {
        async.map(arr, function (x, callback) {
            iterator(x, function (err, criteria) {
                if (err) {
                    callback(err);
                }
                else {
                    callback(null, {value: x, criteria: criteria});
                }
            });
        }, function (err, results) {
            if (err) {
                return callback(err);
            }
            else {
                var fn = function (left, right) {
                    var a = left.criteria, b = right.criteria;
                    return a < b ? -1 : a > b ? 1 : 0;
                };
                callback(null, _map(results.sort(fn), function (x) {
                    return x.value;
                }));
            }
        });
    };

    async.auto = function (tasks, callback) {
        callback = callback || function () {};
        var keys = _keys(tasks);
        if (!keys.length) {
            return callback(null);
        }

        var results = {};

        var listeners = [];
        var addListener = function (fn) {
            listeners.unshift(fn);
        };
        var removeListener = function (fn) {
            for (var i = 0; i < listeners.length; i += 1) {
                if (listeners[i] === fn) {
                    listeners.splice(i, 1);
                    return;
                }
            }
        };
        var taskComplete = function () {
            _each(listeners.slice(0), function (fn) {
                fn();
            });
        };

        addListener(function () {
            if (_keys(results).length === keys.length) {
                callback(null, results);
                callback = function () {};
            }
        });

        _each(keys, function (k) {
            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];
            var taskCallback = function (err) {
                var args = Array.prototype.slice.call(arguments, 1);
                if (args.length <= 1) {
                    args = args[0];
                }
                if (err) {
                    var safeResults = {};
                    _each(_keys(results), function(rkey) {
                        safeResults[rkey] = results[rkey];
                    });
                    safeResults[k] = args;
                    callback(err, safeResults);
                    // stop subsequent errors hitting callback multiple times
                    callback = function () {};
                }
                else {
                    results[k] = args;
                    async.setImmediate(taskComplete);
                }
            };
            var requires = task.slice(0, Math.abs(task.length - 1)) || [];
            var ready = function () {
                return _reduce(requires, function (a, x) {
                    return (a && results.hasOwnProperty(x));
                }, true) && !results.hasOwnProperty(k);
            };
            if (ready()) {
                task[task.length - 1](taskCallback, results);
            }
            else {
                var listener = function () {
                    if (ready()) {
                        removeListener(listener);
                        task[task.length - 1](taskCallback, results);
                    }
                };
                addListener(listener);
            }
        });
    };

    async.waterfall = function (tasks, callback) {
        callback = callback || function () {};
        if (tasks.constructor !== Array) {
          var err = new Error('First argument to waterfall must be an array of functions');
          return callback(err);
        }
        if (!tasks.length) {
            return callback();
        }
        var wrapIterator = function (iterator) {
            return function (err) {
                if (err) {
                    callback.apply(null, arguments);
                    callback = function () {};
                }
                else {
                    var args = Array.prototype.slice.call(arguments, 1);
                    var next = iterator.next();
                    if (next) {
                        args.push(wrapIterator(next));
                    }
                    else {
                        args.push(callback);
                    }
                    async.setImmediate(function () {
                        iterator.apply(null, args);
                    });
                }
            };
        };
        wrapIterator(async.iterator(tasks))();
    };

    var _parallel = function(eachfn, tasks, callback) {
        callback = callback || function () {};
        if (tasks.constructor === Array) {
            eachfn.map(tasks, function (fn, callback) {
                if (fn) {
                    fn(function (err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        if (args.length <= 1) {
                            args = args[0];
                        }
                        callback.call(null, err, args);
                    });
                }
            }, callback);
        }
        else {
            var results = {};
            eachfn.each(_keys(tasks), function (k, callback) {
                tasks[k](function (err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1) {
                        args = args[0];
                    }
                    results[k] = args;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };

    async.parallel = function (tasks, callback) {
        _parallel({ map: async.map, each: async.each }, tasks, callback);
    };

    async.parallelLimit = function(tasks, limit, callback) {
        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);
    };

    async.series = function (tasks, callback) {
        callback = callback || function () {};
        if (tasks.constructor === Array) {
            async.mapSeries(tasks, function (fn, callback) {
                if (fn) {
                    fn(function (err) {
                        var args = Array.prototype.slice.call(arguments, 1);
                        if (args.length <= 1) {
                            args = args[0];
                        }
                        callback.call(null, err, args);
                    });
                }
            }, callback);
        }
        else {
            var results = {};
            async.eachSeries(_keys(tasks), function (k, callback) {
                tasks[k](function (err) {
                    var args = Array.prototype.slice.call(arguments, 1);
                    if (args.length <= 1) {
                        args = args[0];
                    }
                    results[k] = args;
                    callback(err);
                });
            }, function (err) {
                callback(err, results);
            });
        }
    };

    async.iterator = function (tasks) {
        var makeCallback = function (index) {
            var fn = function () {
                if (tasks.length) {
                    tasks[index].apply(null, arguments);
                }
                return fn.next();
            };
            fn.next = function () {
                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
            };
            return fn;
        };
        return makeCallback(0);
    };

    async.apply = function (fn) {
        var args = Array.prototype.slice.call(arguments, 1);
        return function () {
            return fn.apply(
                null, args.concat(Array.prototype.slice.call(arguments))
            );
        };
    };

    var _concat = function (eachfn, arr, fn, callback) {
        var r = [];
        eachfn(arr, function (x, cb) {
            fn(x, function (err, y) {
                r = r.concat(y || []);
                cb(err);
            });
        }, function (err) {
            callback(err, r);
        });
    };
    async.concat = doParallel(_concat);
    async.concatSeries = doSeries(_concat);

    async.whilst = function (test, iterator, callback) {
        if (test()) {
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                async.whilst(test, iterator, callback);
            });
        }
        else {
            callback();
        }
    };

    async.doWhilst = function (iterator, test, callback) {
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            if (test()) {
                async.doWhilst(iterator, test, callback);
            }
            else {
                callback();
            }
        });
    };

    async.until = function (test, iterator, callback) {
        if (!test()) {
            iterator(function (err) {
                if (err) {
                    return callback(err);
                }
                async.until(test, iterator, callback);
            });
        }
        else {
            callback();
        }
    };

    async.doUntil = function (iterator, test, callback) {
        iterator(function (err) {
            if (err) {
                return callback(err);
            }
            if (!test()) {
                async.doUntil(iterator, test, callback);
            }
            else {
                callback();
            }
        });
    };

    async.queue = function (worker, concurrency) {
        if (concurrency === undefined) {
            concurrency = 1;
        }
        function _insert(q, data, pos, callback) {
          if(data.constructor !== Array) {
              data = [data];
          }
          _each(data, function(task) {
              var item = {
                  data: task,
                  callback: typeof callback === 'function' ? callback : null
              };

              if (pos) {
                q.tasks.unshift(item);
              } else {
                q.tasks.push(item);
              }

              if (q.saturated && q.tasks.length === concurrency) {
                  q.saturated();
              }
              async.setImmediate(q.process);
          });
        }

        var workers = 0;
        var q = {
            tasks: [],
            concurrency: concurrency,
            saturated: null,
            empty: null,
            drain: null,
            push: function (data, callback) {
              _insert(q, data, false, callback);
            },
            unshift: function (data, callback) {
              _insert(q, data, true, callback);
            },
            process: function () {
                if (workers < q.concurrency && q.tasks.length) {
                    var task = q.tasks.shift();
                    if (q.empty && q.tasks.length === 0) {
                        q.empty();
                    }
                    workers += 1;
                    var next = function () {
                        workers -= 1;
                        if (task.callback) {
                            task.callback.apply(task, arguments);
                        }
                        if (q.drain && q.tasks.length + workers === 0) {
                            q.drain();
                        }
                        q.process();
                    };
                    var cb = only_once(next);
                    worker(task.data, cb);
                }
            },
            length: function () {
                return q.tasks.length;
            },
            running: function () {
                return workers;
            }
        };
        return q;
    };

    async.cargo = function (worker, payload) {
        var working     = false,
            tasks       = [];

        var cargo = {
            tasks: tasks,
            payload: payload,
            saturated: null,
            empty: null,
            drain: null,
            push: function (data, callback) {
                if(data.constructor !== Array) {
                    data = [data];
                }
                _each(data, function(task) {
                    tasks.push({
                        data: task,
                        callback: typeof callback === 'function' ? callback : null
                    });
                    if (cargo.saturated && tasks.length === payload) {
                        cargo.saturated();
                    }
                });
                async.setImmediate(cargo.process);
            },
            process: function process() {
                if (working) return;
                if (tasks.length === 0) {
                    if(cargo.drain) cargo.drain();
                    return;
                }

                var ts = typeof payload === 'number'
                            ? tasks.splice(0, payload)
                            : tasks.splice(0);

                var ds = _map(ts, function (task) {
                    return task.data;
                });

                if(cargo.empty) cargo.empty();
                working = true;
                worker(ds, function () {
                    working = false;

                    var args = arguments;
                    _each(ts, function (data) {
                        if (data.callback) {
                            data.callback.apply(null, args);
                        }
                    });

                    process();
                });
            },
            length: function () {
                return tasks.length;
            },
            running: function () {
                return working;
            }
        };
        return cargo;
    };

    var _console_fn = function (name) {
        return function (fn) {
            var args = Array.prototype.slice.call(arguments, 1);
            fn.apply(null, args.concat([function (err) {
                var args = Array.prototype.slice.call(arguments, 1);
                if (typeof console !== 'undefined') {
                    if (err) {
                        if (console.error) {
                            console.error(err);
                        }
                    }
                    else if (console[name]) {
                        _each(args, function (x) {
                            console[name](x);
                        });
                    }
                }
            }]));
        };
    };
    async.log = _console_fn('log');
    async.dir = _console_fn('dir');
    /*async.info = _console_fn('info');
    async.warn = _console_fn('warn');
    async.error = _console_fn('error');*/

    async.memoize = function (fn, hasher) {
        var memo = {};
        var queues = {};
        hasher = hasher || function (x) {
            return x;
        };
        var memoized = function () {
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            var key = hasher.apply(null, args);
            if (key in memo) {
                callback.apply(null, memo[key]);
            }
            else if (key in queues) {
                queues[key].push(callback);
            }
            else {
                queues[key] = [callback];
                fn.apply(null, args.concat([function () {
                    memo[key] = arguments;
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) {
                      q[i].apply(null, arguments);
                    }
                }]));
            }
        };
        memoized.memo = memo;
        memoized.unmemoized = fn;
        return memoized;
    };

    async.unmemoize = function (fn) {
      return function () {
        return (fn.unmemoized || fn).apply(null, arguments);
      };
    };

    async.times = function (count, iterator, callback) {
        var counter = [];
        for (var i = 0; i < count; i++) {
            counter.push(i);
        }
        return async.map(counter, iterator, callback);
    };

    async.timesSeries = function (count, iterator, callback) {
        var counter = [];
        for (var i = 0; i < count; i++) {
            counter.push(i);
        }
        return async.mapSeries(counter, iterator, callback);
    };

    async.compose = function (/* functions... */) {
        var fns = Array.prototype.reverse.call(arguments);
        return function () {
            var that = this;
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            async.reduce(fns, args, function (newargs, fn, cb) {
                fn.apply(that, newargs.concat([function () {
                    var err = arguments[0];
                    var nextargs = Array.prototype.slice.call(arguments, 1);
                    cb(err, nextargs);
                }]))
            },
            function (err, results) {
                callback.apply(that, [err].concat(results));
            });
        };
    };

    var _applyEach = function (eachfn, fns /*args...*/) {
        var go = function () {
            var that = this;
            var args = Array.prototype.slice.call(arguments);
            var callback = args.pop();
            return eachfn(fns, function (fn, cb) {
                fn.apply(that, args.concat([cb]));
            },
            callback);
        };
        if (arguments.length > 2) {
            var args = Array.prototype.slice.call(arguments, 2);
            return go.apply(this, args);
        }
        else {
            return go;
        }
    };
    async.applyEach = doParallel(_applyEach);
    async.applyEachSeries = doSeries(_applyEach);

    async.forever = function (fn, callback) {
        function next(err) {
            if (err) {
                if (callback) {
                    return callback(err);
                }
                throw err;
            }
            fn(next);
        }
        next();
    };

    // AMD / RequireJS
    if (typeof define !== 'undefined' && define.amd) {
        define('async',[], function () {
            return async;
        });
    }
    // Node.js
    else if (typeof module !== 'undefined' && module.exports) {
        module.exports = async;
    }
    // included directly via <script> tag
    else {
        root.async = async;
    }

}());

define('tools',[], function () {
    //Read a modules conf file a return it as Object
    function readConf(inConfString) {
        var lines = inConfString.split(/[\r\n]+/g),
            configData = {},
            splittedLine = null;

        configData["GlobalOptionFilter"] = [];
        configData["Feature"] = [];

        lines.forEach(function(line, index) {
            splittedLine = line.split(/=(.+)/);
            if (splittedLine[0] !== "")
                if (splittedLine[0].search(/\[.*\]/) !== -1)
                    configData["moduleKey"] = splittedLine[0].replace("[", "").replace("]", "");
                else
                    if (splittedLine[0] === "GlobalOptionFilter")
                        configData[splittedLine[0]].push(splittedLine[1]);
                    else if (splittedLine[0] === "Feature")
                        configData[splittedLine[0]].push(splittedLine[1]);
                    else if (splittedLine[0] === "Versification")
                        configData[splittedLine[0]] = splittedLine[1].toLowerCase();
                    else
                        configData[splittedLine[0]] = splittedLine[1];
        });

        return configData;
    }

    function dynamicSort(property) {
        return function (obj1,obj2) {
            return obj1[property] > obj2[property] ? 1
                : obj1[property] < obj2[property] ? -1 : 0;
        };
    }

    function dynamicSortMultiple() {
        /*
         * save the arguments object as it will be overwritten
         * note that arguments object is an array-like object
         * consisting of the names of the properties to sort by
         */
        var props = arguments;
        return function (obj1, obj2) {
            var i = 0, result = 0, numberOfProperties = props.length;
            /* try getting a different result from 0 (equal)
             * as long as we have extra properties to compare
             */
            while(result === 0 && i < numberOfProperties) {
                result = dynamicSort(props[i])(obj1, obj2);
                i++;
            }
            return result;
        };
    }

    function cleanArray(actual){
        var newArray = [];
        for(var i = 0; i<actual.length; i++){
            if (actual[i]){
                newArray.push(actual[i]);
            }
        }
        return newArray;
    }

    return {
        readConf: readConf,
        dynamicSort: dynamicSort,
        dynamicSortMultiple: dynamicSortMultiple,
        cleanArray: cleanArray
    };
});
/*
 IDBWrapper - A cross-browser wrapper for IndexedDB
 Copyright (c) 2011 - 2013 Jens Arps
 http://jensarps.de/

 Licensed under the MIT (X11) license
*/
(function(h,j,i){"function"===typeof define?define('idb',j):"undefined"!==typeof module&&module.exports?module.exports=j():i[h]=j()})("IDBStore",function(){var h=function(a){throw a;},j={storeName:"Store",storePrefix:"IDBWrapper-",dbVersion:1,keyPath:"id",autoIncrement:!0,onStoreReady:function(){},onError:h,indexes:[]},i=function(a,c){"undefined"==typeof c&&"function"==typeof a&&(c=a);"[object Object]"!=Object.prototype.toString.call(a)&&(a={});for(var b in j)this[b]="undefined"!=typeof a[b]?a[b]:j[b];
this.dbName=this.storePrefix+this.storeName;this.dbVersion=parseInt(this.dbVersion,10)||1;c&&(this.onStoreReady=c);b="object"==typeof window?window:self;this.idb=b.indexedDB||b.webkitIndexedDB||b.mozIndexedDB;this.keyRange=b.IDBKeyRange||b.webkitIDBKeyRange||b.mozIDBKeyRange;this.features={hasAutoIncrement:!b.mozIndexedDB};this.consts={READ_ONLY:"readonly",READ_WRITE:"readwrite",VERSION_CHANGE:"versionchange",NEXT:"next",NEXT_NO_DUPLICATE:"nextunique",PREV:"prev",PREV_NO_DUPLICATE:"prevunique"};this.openDB()};
i.prototype={constructor:i,version:"1.4.0",db:null,dbName:null,dbVersion:null,store:null,storeName:null,keyPath:null,autoIncrement:null,indexes:null,features:null,onStoreReady:null,onError:null,_insertIdCount:0,openDB:function(){var a=this.idb.open(this.dbName,this.dbVersion),c=!1;a.onerror=function(a){var c=!1;"error"in a.target?c="VersionError"==a.target.error.name:"errorCode"in a.target&&(c=12==a.target.errorCode);if(c)this.onError(Error("The version number provided is lower than the existing one."));
else this.onError(a)}.bind(this);a.onsuccess=function(a){if(!c)if(this.db)this.onStoreReady();else if(this.db=a.target.result,"string"==typeof this.db.version)this.onError(Error("The IndexedDB implementation in this browser is outdated. Please upgrade your browser."));else if(this.db.objectStoreNames.contains(this.storeName))this.store=this.db.transaction([this.storeName],this.consts.READ_ONLY).objectStore(this.storeName),this.indexes.forEach(function(a){var b=a.name;b?(this.normalizeIndexData(a),
this.hasIndex(b)?this.indexComplies(this.store.index(b),a)||(c=!0,this.onError(Error('Cannot modify index "'+b+'" for current version. Please bump version number to '+(this.dbVersion+1)+"."))):(c=!0,this.onError(Error('Cannot create new index "'+b+'" for current version. Please bump version number to '+(this.dbVersion+1)+".")))):(c=!0,this.onError(Error("Cannot create index: No index name given.")))},this),c||this.onStoreReady();else this.onError(Error("Something is wrong with the IndexedDB implementation in this browser. Please upgrade your browser."))}.bind(this);
a.onupgradeneeded=function(a){this.db=a.target.result;this.store=this.db.objectStoreNames.contains(this.storeName)?a.target.transaction.objectStore(this.storeName):this.db.createObjectStore(this.storeName,{keyPath:this.keyPath,autoIncrement:this.autoIncrement});this.indexes.forEach(function(a){var b=a.name;b||(c=!0,this.onError(Error("Cannot create index: No index name given.")));this.normalizeIndexData(a);this.hasIndex(b)?this.indexComplies(this.store.index(b),a)||(this.store.deleteIndex(b),this.store.createIndex(b,
a.keyPath,{unique:a.unique,multiEntry:a.multiEntry})):this.store.createIndex(b,a.keyPath,{unique:a.unique,multiEntry:a.multiEntry})},this)}.bind(this)},deleteDatabase:function(){this.idb.deleteDatabase&&this.idb.deleteDatabase(this.dbName)},put:function(a,c,b,d){null!==this.keyPath&&(d=b,b=c,c=a);d||(d=h);b||(b=k);var e=!1,f=null,g=this.db.transaction([this.storeName],this.consts.READ_WRITE);g.oncomplete=function(){(e?b:d)(f)};g.onabort=d;g.onerror=d;null!==this.keyPath?(this._addIdPropertyIfNeeded(c),
a=g.objectStore(this.storeName).put(c)):a=g.objectStore(this.storeName).put(c,a);a.onsuccess=function(a){e=!0;f=a.target.result};a.onerror=d;return g},get:function(a,c,b){b||(b=h);c||(c=k);var d=!1,e=null,f=this.db.transaction([this.storeName],this.consts.READ_ONLY);f.oncomplete=function(){(d?c:b)(e)};f.onabort=b;f.onerror=b;a=f.objectStore(this.storeName).get(a);a.onsuccess=function(a){d=!0;e=a.target.result};a.onerror=b;return f},remove:function(a,c,b){b||(b=h);c||(c=k);var d=!1,e=null,f=this.db.transaction([this.storeName],
this.consts.READ_WRITE);f.oncomplete=function(){(d?c:b)(e)};f.onabort=b;f.onerror=b;a=f.objectStore(this.storeName)["delete"](a);a.onsuccess=function(a){d=!0;e=a.target.result};a.onerror=b;return f},batch:function(a,c,b){b||(b=h);c||(c=k);"[object Array]"!=Object.prototype.toString.call(a)&&b(Error("dataArray argument must be of type Array."));var d=this.db.transaction([this.storeName],this.consts.READ_WRITE);d.oncomplete=function(){(g?c:b)(g)};d.onabort=b;d.onerror=b;var e=a.length,f=!1,g=!1,l=function(){e--;
0===e&&!f&&(g=f=!0)};a.forEach(function(a){var c=a.type,e=a.key,g=a.value,a=function(a){d.abort();f||(f=!0,b(a,c,e))};if("remove"==c)g=d.objectStore(this.storeName)["delete"](e),g.onsuccess=l,g.onerror=a;else if("put"==c)null!==this.keyPath?(this._addIdPropertyIfNeeded(g),g=d.objectStore(this.storeName).put(g)):g=d.objectStore(this.storeName).put(g,e),g.onsuccess=l,g.onerror=a},this);return d},putBatch:function(a,c,b){return this.batch(a.map(function(a){return{type:"put",value:a}}),c,b)},removeBatch:function(a,
c,b){return this.batch(a.map(function(a){return{type:"remove",key:a}}),c,b)},getBatch:function(a,c,b,d){b||(b=h);c||(c=k);d||(d="sparse");"[object Array]"!=Object.prototype.toString.call(a)&&b(Error("keyArray argument must be of type Array."));var e=this.db.transaction([this.storeName],this.consts.READ_ONLY);e.oncomplete=function(){(l?c:b)(i)};e.onabort=b;e.onerror=b;var f=[],g=a.length,l=!1,i=null,j=function(a){a.target.result||"dense"==d?f.push(a.target.result):"sparse"==d&&f.length++;g--;0===g&&
(l=!0,i=f)};a.forEach(function(a){a=e.objectStore(this.storeName).get(a);a.onsuccess=j;a.onerror=function(a){i=a;b(a);e.abort()}},this);return e},getAll:function(a,c){c||(c=h);a||(a=k);var b=this.db.transaction([this.storeName],this.consts.READ_ONLY),d=b.objectStore(this.storeName);d.getAll?this._getAllNative(b,d,a,c):this._getAllCursor(b,d,a,c);return b},_getAllNative:function(a,c,b,d){var e=!1,f=null;a.oncomplete=function(){(e?b:d)(f)};a.onabort=d;a.onerror=d;a=c.getAll();a.onsuccess=function(a){e=
!0;f=a.target.result};a.onerror=d},_getAllCursor:function(a,c,b,d){var e=[],f=!1,g=null;a.oncomplete=function(){(f?b:d)(g)};a.onabort=d;a.onerror=d;a=c.openCursor();a.onsuccess=function(a){(a=a.target.result)?(e.push(a.value),a["continue"]()):(f=!0,g=e)};a.onError=d},clear:function(a,c){c||(c=h);a||(a=k);var b=!1,d=null,e=this.db.transaction([this.storeName],this.consts.READ_WRITE);e.oncomplete=function(){(b?a:c)(d)};e.onabort=c;e.onerror=c;var f=e.objectStore(this.storeName).clear();f.onsuccess=
function(a){b=!0;d=a.target.result};f.onerror=c;return e},_addIdPropertyIfNeeded:function(a){!this.features.hasAutoIncrement&&"undefined"==typeof a[this.keyPath]&&(a[this.keyPath]=this._insertIdCount++ +Date.now())},getIndexList:function(){return this.store.indexNames},hasIndex:function(a){return this.store.indexNames.contains(a)},normalizeIndexData:function(a){a.keyPath=a.keyPath||a.name;a.unique=!!a.unique;a.multiEntry=!!a.multiEntry},indexComplies:function(a,c){return["keyPath","unique","multiEntry"].every(function(b){return"multiEntry"==
b&&void 0===a[b]&&!1===c[b]?!0:c[b]==a[b]})},iterate:function(a,c){var c=m({index:null,order:"ASC",autoContinue:!0,filterDuplicates:!1,keyRange:null,writeAccess:!1,onEnd:null,onError:h},c||{}),b="desc"==c.order.toLowerCase()?"PREV":"NEXT";c.filterDuplicates&&(b+="_NO_DUPLICATE");var d=!1,e=this.db.transaction([this.storeName],this.consts[c.writeAccess?"READ_WRITE":"READ_ONLY"]),f=e.objectStore(this.storeName);c.index&&(f=f.index(c.index));e.oncomplete=function(){if(d)if(c.onEnd)c.onEnd();else a(null);
else c.onError(null)};e.onabort=c.onError;e.onerror=c.onError;b=f.openCursor(c.keyRange,this.consts[b]);b.onerror=c.onError;b.onsuccess=function(b){if(b=b.target.result){if(a(b.value,b,e),c.autoContinue)b["continue"]()}else d=!0};return e},query:function(a,c){var b=[],c=c||{};c.onEnd=function(){a(b)};return this.iterate(function(a){b.push(a)},c)},count:function(a,c){var c=m({index:null,keyRange:null},c||{}),b=c.onError||h,d=!1,e=null,f=this.db.transaction([this.storeName],this.consts.READ_ONLY);f.oncomplete=
function(){(d?a:b)(e)};f.onabort=b;f.onerror=b;var g=f.objectStore(this.storeName);c.index&&(g=g.index(c.index));g=g.count(c.keyRange);g.onsuccess=function(a){d=!0;e=a.target.result};g.onError=b;return f},makeKeyRange:function(a){var c="undefined"!=typeof a.lower,b="undefined"!=typeof a.upper,d="undefined"!=typeof a.only;switch(!0){case d:a=this.keyRange.only(a.only);break;case c&&b:a=this.keyRange.bound(a.lower,a.upper,a.excludeLower,a.excludeUpper);break;case c:a=this.keyRange.lowerBound(a.lower,
a.excludeLower);break;case b:a=this.keyRange.upperBound(a.upper,a.excludeUpper);break;default:throw Error('Cannot create KeyRange. Provide one or both of "lower" or "upper" value, or an "only" value.');}return a}};var k=function(){},n={},m=function(a,c){var b,d;for(b in c)d=c[b],d!==n[b]&&d!==a[b]&&(a[b]=d);return a};i.version=i.prototype.version;return i},this);

/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('idbPluginWrapper',["idb"], function (IDB) {
    var isInitialized = false,
        db = null;

    function getDB (inCallback) {
        if (isInitialized) {
            inCallback(null, db);
        } else {
            db = new IDB({
                storeName: "swordjs",
                dbVersion: 4,
                indexes: [
                    {name: "modules", keyPath: "moduleKey", unique: true}
                ],
                onStoreReady: function() {
                    isInitialized = true;
                    inCallback(null, db);
                },
                onError: function(inError) {
                    isInitialized = false;
                    inCallback(inError);
                },
            });
        }
    }

    function getIDBWrapper () {
        return IDB;
    }

    return {
        getDB: getDB,
        getIDBWrapper: getIDBWrapper
    };
});
/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('dataMgr',["async", "tools", "idbPluginWrapper"], function (async, tools, IDB) {
    var dataMgr = {};

    //get some data by id
    function get(inId, inCallback) {
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.get(inId,
                    function (inResponse) {
                        inCallback(null, inResponse);
                    },
                    function (inError) {inCallback(inError);}
                );
            else inCallback(inError);
        });
    }

    //Read a module's config file and save it as an Object
    function saveConfig(inConfBlob, inCallback) {
        var confReader = new FileReader();
        confReader.readAsText(inConfBlob);
        confReader.onload = function(e) {
            var configData = tools.readConf(e.target.result);

            //Save config data to the database and continue to build the index
            IDB.getDB(function (inError, db) {
                if(!inError)
                    db.put(configData,
                        function (inId) {
                            inCallback(null, {id: inId, modKey: configData.moduleKey, v11n: configData.Versification});
                        },
                        function (inError) {inCallback(inError);}
                    );
                else inCallback(inError);
            });
        };
    }

    //Save the binary module files like *.bzz
    function saveModule(inFiles, inDoc, inCallback) {
        //console.log("saveModule", inFiles, inDoc);
        var z = inFiles.length,
            args = {},
            path = null,
            driver = null;

        args.docId = inDoc.id;

        async.eachSeries(inFiles, function (file, ittCallback) {
            var path = file.name.split("/"),
                driver = path[path.length-3];
            IDB.getDB(function (inError, db) {
                if(!inError)
                    db.put({fileName: path[path.length-1], modKey: inDoc.modKey, driver: driver, blob: file.blob},
                        function (inId) {
                            args[path[path.length-1].split(".")[0]] = inId;
                            ittCallback(null);
                        },
                        function (inError) {ittCallback(inError);}
                    );
                else inCallback(inError);
            });
        }, function (inError) {
            if(!inError) updateBinaryIds(args, inCallback);
            else inCallback(inError);
        });
    }

    function updateBinaryIds(inIds, inCallback) {
        //console.log("updateBinaryIds", inIds, inCallback);
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.get(inIds.docId,
                    function (inModule) {
                        inModule.nt = inIds.nt;
                        inModule.ot = inIds.ot;
                        db.put(inModule, function(inResponse) {
                                inCallback(null);
                            },
                            function (inError) {inCallback(inError);}
                        );
                    },
                    function (inError) {inCallback(inError);}
                );
            else inCallback(inError);
        });
    }

    function getBlob(inId, inCallback) {
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.get(inId,
                    function (inBlob) {inCallback(null, inBlob.blob);},
                    function (inError) {inCallback(inError);}
                );
            else inCallback(inError);
        });
    }

    function saveBCVPos(inOT, inNT, inDoc, inCallback) {
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.put({modKey: inDoc.modKey, ot: inOT, nt: inNT},
                    function (inPosResId) {
                        db.get(inDoc.id,
                            function (inModule) {
                                inModule["bcvPosID"] = inPosResId;
                                db.put(inModule,
                                    function(inId) {
                                        inCallback(null);
                                    },
                                    function (inError) {inCallback(inError);}
                                );
                            },
                            function (inError) {inCallback(inError);}
                        );
                    },
                    function (inError) {inCallback(inError);}
                );
            else inCallback(inError);
        });
    }

    function getModules(inCallback) {
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.query(function (inResults) {
                    inCallback(null, inResults);
                },
                {
                    onError: function (inError) {inCallback(inError);},
                    index: "modules"
                });
            else inCallback(inError);
        });
    }

    function remove(inId, inCallback) {
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.remove(inId,
                    inCallback(null),
                    function (inError) { inCallback(inError);}
                );
            else inCallback(inError);
        });
    }

    function clearDatabase() {
        IDB.getDB(function (inError, db) {
            if(!inError)
                db.clear(
                    function () {
                        //console.log("cleared database");
                    },
                    function (inError) { console.log(inError);}
                );
            else inCallback(inError);
        });
    }

    function getIDBWrapper () {
        return IDB.getIDBWrapper();
    }

    function errorHandler(inError, inCallback) {
        console.log(inError, inCallback);
    }

    return {
        clearDatabase: clearDatabase,
        saveConfig: saveConfig,
        saveModule: saveModule,
        saveBCVPos: saveBCVPos,
        getBlob: getBlob,
        get: get,
        remove: remove,
        getModules: getModules,
        getIDBWrapper: getIDBWrapper
    };
});
/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {var m=void 0,p=!0,s=this;function t(a,d){var b=a.split("."),c=s;!(b[0]in c)&&c.execScript&&c.execScript("var "+b[0]);for(var e;b.length&&(e=b.shift());)!b.length&&d!==m?c[e]=d:c=c[e]?c[e]:c[e]={}};var u="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Uint32Array;function v(a){var d=a.length,b=0,c=Number.POSITIVE_INFINITY,e,f,g,h,l,k,n,q,r;for(q=0;q<d;++q)a[q]>b&&(b=a[q]),a[q]<c&&(c=a[q]);e=1<<b;f=new (u?Uint32Array:Array)(e);g=1;h=0;for(l=2;g<=b;){for(q=0;q<d;++q)if(a[q]===g){k=0;n=h;for(r=0;r<g;++r)k=k<<1|n&1,n>>=1;for(r=k;r<e;r+=l)f[r]=g<<16|q;++h}++g;h<<=1;l<<=1}return[f,b,c]};function x(a,d,b){this.t=[];this.q=b?b:32768;this.u=0;this.a=d===m?0:d;this.d=this.e=0;this.input=u?new Uint8Array(a):a;this.c=new (u?Uint8Array:Array)(this.q);this.b=0;this.s=this.l=!1;this.f=0;this.status=z}var z=0;
x.prototype.i=function(a,d){var b=!1;a!==m&&(this.input=a);d!==m&&(this.a=d);for(;!b;)switch(this.status){case z:case 1:var c;var e=m;this.status=1;B(this);if(0>(e=C(this,3)))D(this),c=-1;else{e&1&&(this.l=p);e>>>=1;switch(e){case 0:this.g=0;break;case 1:this.g=1;break;case 2:this.g=2;break;default:throw Error("unknown BTYPE: "+e);}this.status=2;c=m}0>c&&(b=p);break;case 2:case 3:switch(this.g){case 0:var f;var g=m,h=m,l=this.input,k=this.a;this.status=3;if(k+4>=l.length)f=-1;else{g=l[k++]|l[k++]<<
8;h=l[k++]|l[k++]<<8;if(g===~h)throw Error("invalid uncompressed block header: length verify");this.d=this.e=0;this.a=k;this.m=g;this.status=4;f=m}0>f&&(b=p);break;case 1:this.status=3;this.k=E;this.n=F;this.status=4;break;case 2:0>I(this)&&(b=p)}break;case 4:case 5:switch(this.g){case 0:var n;a:{var q=this.input,r=this.a,G=this.c,A=this.b,H=this.m;for(this.status=5;H--;){A===G.length&&(G=J(this));if(r>=q.length){this.a=r;this.b=A;this.m=H+1;n=-1;break a}G[A++]=q[r++]}0>H&&(this.status=6);this.a=
r;this.b=A;n=0}0>n&&(b=p);break;case 1:case 2:0>K(this)&&(b=p)}break;case 6:this.l?b=p:this.status=z}var y,w=this.b;this.s?u?(y=new Uint8Array(w),y.set(this.c.subarray(this.f,w))):y=this.c.slice(this.f,w):y=u?this.c.subarray(this.f,w):this.c.slice(this.f,w);this.buffer=y;this.f=w;return this.buffer};
var L=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],M=u?new Uint16Array(L):L,N=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],aa=u?new Uint16Array(N):N,O=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],P=u?new Uint8Array(O):O,Q=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ba=u?new Uint16Array(Q):Q,R=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,
13,13],S=u?new Uint8Array(R):R,T=new (u?Uint8Array:Array)(288),U,V;U=0;for(V=T.length;U<V;++U)T[U]=143>=U?8:255>=U?9:279>=U?7:8;var E=v(T),W=new (u?Uint8Array:Array)(30),X,Y;X=0;for(Y=W.length;X<Y;++X)W[X]=5;var F=v(W);function C(a,d){for(var b=a.e,c=a.d,e=a.input,f=a.a,g;c<d;){if(e.length<=f)return-1;g=e[f++];b|=g<<c;c+=8}g=b&(1<<d)-1;a.e=b>>>d;a.d=c-d;a.a=f;return g}
function Z(a,d){for(var b=a.e,c=a.d,e=a.input,f=a.a,g=d[0],h=d[1],l,k,n;c<h;){if(e.length<=f)return-1;l=e[f++];b|=l<<c;c+=8}k=g[b&(1<<h)-1];n=k>>>16;a.e=b>>n;a.d=c-n;a.a=f;return k&65535}function B(a){a.r=a.a;a.p=a.d;a.o=a.e}function D(a){a.a=a.r;a.d=a.p;a.e=a.o}
function I(a){function d(){function a(b,c,d){for(var e,g,f,h=0,k,h=0;h<b;){e=Z(this,c);if(0>e)throw Error("not enough input");switch(e){case 16:if(0>(k=C(this,2)))throw Error("not enough input");for(f=3+k;f--;)d[h++]=g;break;case 17:if(0>(k=C(this,3)))throw Error("not enough input");for(f=3+k;f--;)d[h++]=0;g=0;break;case 18:if(0>(k=C(this,7)))throw Error("not enough input");for(f=11+k;f--;)d[h++]=0;g=0;break;default:g=d[h++]=e}}return d}var d;for(k=0;k<e;++k){if(0>(d=C(this,3)))throw Error("not enough input");
f[M[k]]=d}g=v(f);h=new (u?Uint8Array:Array)(b);l=new (u?Uint8Array:Array)(c);this.k=v(a.call(this,b,g,h));this.n=v(a.call(this,c,g,l))}var b,c,e,f=new (u?Uint8Array:Array)(M.length),g,h,l,k=0;a.status=3;B(a);b=C(a,5)+257;c=C(a,5)+1;e=C(a,4)+4;if(0>b||0>c||0>e)return D(a),-1;try{d.call(a)}catch(n){return D(a),-1}a.status=4;return 0}
function K(a){var d=a.c,b=a.b,c,e,f,g,h=a.k,l=a.n,k=d.length,n;for(a.status=5;;){B(a);c=Z(a,h);if(0>c)return a.b=b,D(a),-1;if(256===c)break;if(256>c)b===k&&(d=J(a),k=d.length),d[b++]=c;else{e=c-257;g=aa[e];if(0<P[e]){n=C(a,P[e]);if(0>n)return a.b=b,D(a),-1;g+=n}c=Z(a,l);if(0>c)return a.b=b,D(a),-1;f=ba[c];if(0<S[c]){n=C(a,S[c]);if(0>n)return a.b=b,D(a),-1;f+=n}b+g>=k&&(d=J(a),k=d.length);for(;g--;)d[b]=d[b++-f];if(a.a===a.input.length)return a.b=b,-1}}for(;8<=a.d;)a.d-=8,a.a--;a.b=b;a.status=6}
function J(a){var d,b=a.input.length/a.a+1|0,c,e,f,g=a.input,h=a.c;2>b?(c=(g.length-a.a)/a.k[2],f=258*(c/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*b;u?(d=new Uint8Array(e),d.set(h)):d=h;a.c=d;return a.c}x.prototype.j=function(){return u?this.c.subarray(0,this.b):this.c.slice(0,this.b)};function $(a){this.input=a===m?new (u?Uint8Array:Array):a;this.a=0;this.h=new x(this.input,this.a);this.c=this.h.c}
$.prototype.i=function(a){var d;if(a!==m)if(u){var b=new Uint8Array(this.input.length+a.length);b.set(this.input,0);b.set(a,this.input.length);this.input=b}else this.input=this.input.concat(a);var c;if(c=this.method===m){var e;var f=this.a,g=this.input,h=g[f++],l=g[f++];if(h===m||l===m)e=-1;else{switch(h&15){case 8:this.method=8;break;default:throw Error("unsupported compression method");}if(0!==((h<<8)+l)%31)throw Error("invalid fcheck flag:"+((h<<8)+l)%31);if(l&32)throw Error("fdict flag is not supported");
this.a=f;e=m}c=0>e}if(c)return new (u?Uint8Array:Array);d=this.h.i(this.input,this.a);this.a=this.h.a;return d};$.prototype.j=function(){return this.h.j()};t("Zlib.InflateStream",$);t("Zlib.InflateStream.prototype.decompress",$.prototype.i);t("Zlib.InflateStream.prototype.getBytes",$.prototype.j);}).call(this); //@ sourceMappingURL=inflate_stream.min.js.map
;
define("inflateStream", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.Zlib;
    };
}(this)));

/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('zText',["inflateStream", "async"], function (Zlib, async) {
    var zText = {},
        zlibReader = new FileReader(),
        textReader = new FileReader();


    zText.getRawEntry = function (inBlob, inPos, inVList, inEcoding, inCallback) {
        //console.log(inPos, inVList, inEcoding);
        if (!inPos[inVList[0].chapter-1]) {
            inCallback({message: "Wrong passage. The requested chapter is not available in this module."});
        } else {
            var bookStartPos = inPos[inVList[0].chapter-1].bookStartPos,
                startPos = inPos[inVList[0].chapter-1].startPos,
                length = inPos[inVList[0].chapter-1].length,
                chapterStartPos = bookStartPos + startPos,
                chapterEndPos = chapterStartPos + length,
                blob = inBlob.slice(bookStartPos, chapterEndPos);

            /*if(!isNaN(inVList[0].verse)) {
                startPos = startPos + inPos[inVList[0].chapter-1].verses[inVList[0].verse-1].startPos;
                length = inPos[inVList[0].chapter-1].verses[inVList[0].verse-1].length;
            }*/

            //console.log(bookStartPos, startPos, length, chapterStartPos, chapterEndPos, blob);

            zlibReader.readAsArrayBuffer(blob);
            zlibReader.onload = function (evt) {
                var view = new Uint8Array(evt.target.result);
                //We need to initialize a new InflateStream on every request
                var inflator = new Zlib.InflateStream();
                var infBlob = new Blob([inflator.decompress(view)]);

                //Read raw text entry
                var rawText = [],
                    verseStart = 0,
                    verseEnd = 0,
                    z = 0;
                async.whilst(
                    function () {return z < inVList.length;},
                    function (cb) {
                        verseStart = startPos + inPos[inVList[z].chapter-1].verses[inVList[z].verse-1].startPos;
                        verseEnd = verseStart + inPos[inVList[z].chapter-1].verses[inVList[z].verse-1].length;
                        if (!inEcoding)
                            textReader.readAsText(infBlob.slice(verseStart, verseEnd), "CP1252");
                        else
                            textReader.readAsText(infBlob.slice(verseStart, verseEnd), inEcoding);
                        textReader.onload = function(e) {
                            rawText.push({text: e.target.result, osis: inVList[z].osis, verse: inVList[z].verse});
                            z++;
                            cb();
                        };
                    },
                    function (inError) {
                        //console.log(rawText);
                        inCallback(inError, rawText);
                    }
                );

            };
        }

    };

    return zText;
});
/**
 * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */
/*jslint regexp: true */
/*global require, XMLHttpRequest, ActiveXObject,
  define, window, process, Packages,
  java, location, Components, FileUtils */

define('text',['module'], function (module) {
    

    var text, fs, Cc, Ci, xpcIsWindows,
        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],
        xmlRegExp = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        bodyRegExp = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        hasLocation = typeof location !== 'undefined' && location.href,
        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\:/, ''),
        defaultHostName = hasLocation && location.hostname,
        defaultPort = hasLocation && (location.port || undefined),
        buildMap = {},
        masterConfig = (module.config && module.config()) || {};

    text = {
        version: '2.0.10',

        strip: function (content) {
            //Strips <?xml ...?> declarations so that external SVG and XML
            //documents can be added to a document without worry. Also, if the string
            //is an HTML document, only the part inside the body tag is returned.
            if (content) {
                content = content.replace(xmlRegExp, "");
                var matches = content.match(bodyRegExp);
                if (matches) {
                    content = matches[1];
                }
            } else {
                content = "";
            }
            return content;
        },

        jsEscape: function (content) {
            return content.replace(/(['\\])/g, '\\$1')
                .replace(/[\f]/g, "\\f")
                .replace(/[\b]/g, "\\b")
                .replace(/[\n]/g, "\\n")
                .replace(/[\t]/g, "\\t")
                .replace(/[\r]/g, "\\r")
                .replace(/[\u2028]/g, "\\u2028")
                .replace(/[\u2029]/g, "\\u2029");
        },

        createXhr: masterConfig.createXhr || function () {
            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.
            var xhr, i, progId;
            if (typeof XMLHttpRequest !== "undefined") {
                return new XMLHttpRequest();
            } else if (typeof ActiveXObject !== "undefined") {
                for (i = 0; i < 3; i += 1) {
                    progId = progIds[i];
                    try {
                        xhr = new ActiveXObject(progId);
                    } catch (e) {}

                    if (xhr) {
                        progIds = [progId];  // so faster next time
                        break;
                    }
                }
            }

            return xhr;
        },

        /**
         * Parses a resource name into its component parts. Resource names
         * look like: module/name.ext!strip, where the !strip part is
         * optional.
         * @param {String} name the resource name
         * @returns {Object} with properties "moduleName", "ext" and "strip"
         * where strip is a boolean.
         */
        parseName: function (name) {
            var modName, ext, temp,
                strip = false,
                index = name.indexOf("."),
                isRelative = name.indexOf('./') === 0 ||
                             name.indexOf('../') === 0;

            if (index !== -1 && (!isRelative || index > 1)) {
                modName = name.substring(0, index);
                ext = name.substring(index + 1, name.length);
            } else {
                modName = name;
            }

            temp = ext || modName;
            index = temp.indexOf("!");
            if (index !== -1) {
                //Pull off the strip arg.
                strip = temp.substring(index + 1) === "strip";
                temp = temp.substring(0, index);
                if (ext) {
                    ext = temp;
                } else {
                    modName = temp;
                }
            }

            return {
                moduleName: modName,
                ext: ext,
                strip: strip
            };
        },

        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,

        /**
         * Is an URL on another domain. Only works for browser use, returns
         * false in non-browser environments. Only used to know if an
         * optimized .js version of a text resource should be loaded
         * instead.
         * @param {String} url
         * @returns Boolean
         */
        useXhr: function (url, protocol, hostname, port) {
            var uProtocol, uHostName, uPort,
                match = text.xdRegExp.exec(url);
            if (!match) {
                return true;
            }
            uProtocol = match[2];
            uHostName = match[3];

            uHostName = uHostName.split(':');
            uPort = uHostName[1];
            uHostName = uHostName[0];

            return (!uProtocol || uProtocol === protocol) &&
                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&
                   ((!uPort && !uHostName) || uPort === port);
        },

        finishLoad: function (name, strip, content, onLoad) {
            content = strip ? text.strip(content) : content;
            if (masterConfig.isBuild) {
                buildMap[name] = content;
            }
            onLoad(content);
        },

        load: function (name, req, onLoad, config) {
            //Name has format: some.module.filext!strip
            //The strip part is optional.
            //if strip is present, then that means only get the string contents
            //inside a body tag in an HTML string. For XML/SVG content it means
            //removing the <?xml ...?> declarations so the content can be inserted
            //into the current doc without problems.

            // Do not bother with the work if a build and text will
            // not be inlined.
            if (config.isBuild && !config.inlineText) {
                onLoad();
                return;
            }

            masterConfig.isBuild = config.isBuild;

            var parsed = text.parseName(name),
                nonStripName = parsed.moduleName +
                    (parsed.ext ? '.' + parsed.ext : ''),
                url = req.toUrl(nonStripName),
                useXhr = (masterConfig.useXhr) ||
                         text.useXhr;

            // Do not load if it is an empty: url
            if (url.indexOf('empty:') === 0) {
                onLoad();
                return;
            }

            //Load the text. Use XHR if possible and in a browser.
            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {
                text.get(url, function (content) {
                    text.finishLoad(name, parsed.strip, content, onLoad);
                }, function (err) {
                    if (onLoad.error) {
                        onLoad.error(err);
                    }
                });
            } else {
                //Need to fetch the resource across domains. Assume
                //the resource has been optimized into a JS module. Fetch
                //by the module name + extension, but do not include the
                //!strip part to avoid file system issues.
                req([nonStripName], function (content) {
                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,
                                    parsed.strip, content, onLoad);
                });
            }
        },

        write: function (pluginName, moduleName, write, config) {
            if (buildMap.hasOwnProperty(moduleName)) {
                var content = text.jsEscape(buildMap[moduleName]);
                write.asModule(pluginName + "!" + moduleName,
                               "define(function () { return '" +
                                   content +
                               "';});\n");
            }
        },

        writeFile: function (pluginName, moduleName, req, write, config) {
            var parsed = text.parseName(moduleName),
                extPart = parsed.ext ? '.' + parsed.ext : '',
                nonStripName = parsed.moduleName + extPart,
                //Use a '.js' file name so that it indicates it is a
                //script that can be loaded across domains.
                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';

            //Leverage own load() method to load plugin value, but only
            //write out values that do not have the strip argument,
            //to avoid any potential issues with ! in file names.
            text.load(nonStripName, req, function (value) {
                //Use own write() method to construct full module value.
                //But need to create shell that translates writeFile's
                //write() to the right interface.
                var textWrite = function (contents) {
                    return write(fileName, contents);
                };
                textWrite.asModule = function (moduleName, contents) {
                    return write.asModule(moduleName, fileName, contents);
                };

                text.write(pluginName, nonStripName, textWrite, config);
            }, config);
        }
    };

    if (masterConfig.env === 'node' || (!masterConfig.env &&
            typeof process !== "undefined" &&
            process.versions &&
            !!process.versions.node &&
            !process.versions['node-webkit'])) {
        //Using special require.nodeRequire, something added by r.js.
        fs = require.nodeRequire('fs');

        text.get = function (url, callback, errback) {
            try {
                var file = fs.readFileSync(url, 'utf8');
                //Remove BOM (Byte Mark Order) from utf8 files if it is there.
                if (file.indexOf('\uFEFF') === 0) {
                    file = file.substring(1);
                }
                callback(file);
            } catch (e) {
                errback(e);
            }
        };
    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&
            text.createXhr())) {
        text.get = function (url, callback, errback, headers) {
            var xhr = text.createXhr(), header;
            xhr.open('GET', url, true);

            //Allow plugins direct access to xhr headers
            if (headers) {
                for (header in headers) {
                    if (headers.hasOwnProperty(header)) {
                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);
                    }
                }
            }

            //Allow overrides specified in config
            if (masterConfig.onXhr) {
                masterConfig.onXhr(xhr, url);
            }

            xhr.onreadystatechange = function (evt) {
                var status, err;
                //Do not explicitly handle errors, those should be
                //visible via console output in the browser.
                if (xhr.readyState === 4) {
                    status = xhr.status;
                    if (status > 399 && status < 600) {
                        //An http 4xx or 5xx error. Signal an error.
                        err = new Error(url + ' HTTP status: ' + status);
                        err.xhr = xhr;
                        errback(err);
                    } else {
                        callback(xhr.responseText);
                    }

                    if (masterConfig.onXhrComplete) {
                        masterConfig.onXhrComplete(xhr, url);
                    }
                }
            };
            xhr.send(null);
        };
    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&
            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {
        //Why Java, why is this so awkward?
        text.get = function (url, callback) {
            var stringBuffer, line,
                encoding = "utf-8",
                file = new java.io.File(url),
                lineSeparator = java.lang.System.getProperty("line.separator"),
                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),
                content = '';
            try {
                stringBuffer = new java.lang.StringBuffer();
                line = input.readLine();

                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324
                // http://www.unicode.org/faq/utf_bom.html

                // Note that when we use utf-8, the BOM should appear as "EF BB BF", but it doesn't due to this bug in the JDK:
                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058
                if (line && line.length() && line.charAt(0) === 0xfeff) {
                    // Eat the BOM, since we've already found the encoding on this file,
                    // and we plan to concatenating this buffer with others; the BOM should
                    // only appear at the top of a file.
                    line = line.substring(1);
                }

                if (line !== null) {
                    stringBuffer.append(line);
                }

                while ((line = input.readLine()) !== null) {
                    stringBuffer.append(lineSeparator);
                    stringBuffer.append(line);
                }
                //Make sure we return a JavaScript string and not a Java string.
                content = String(stringBuffer.toString()); //String
            } finally {
                input.close();
            }
            callback(content);
        };
    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&
            typeof Components !== 'undefined' && Components.classes &&
            Components.interfaces)) {
        //Avert your gaze!
        Cc = Components.classes,
        Ci = Components.interfaces;
        Components.utils['import']('resource://gre/modules/FileUtils.jsm');
        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);

        text.get = function (url, callback) {
            var inStream, convertStream, fileObj,
                readData = {};

            if (xpcIsWindows) {
                url = url.replace(/\//g, '\\');
            }

            fileObj = new FileUtils.File(url);

            //XPCOM, you so crazy
            try {
                inStream = Cc['@mozilla.org/network/file-input-stream;1']
                           .createInstance(Ci.nsIFileInputStream);
                inStream.init(fileObj, 1, 0, false);

                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']
                                .createInstance(Ci.nsIConverterInputStream);
                convertStream.init(inStream, "utf-8", inStream.available(),
                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);

                convertStream.readString(inStream.available(), readData);
                convertStream.close();
                inStream.close();
                callback(readData.value);
            } catch (e) {
                throw new Error((fileObj && fileObj.path || '') + ': ' + e);
            }
        };
    }
    return text;
});

/** @license
 * RequireJS plugin for loading JSON files
 * - depends on Text plugin and it was HEAVILY "inspired" by it as well.
 * Author: Miller Medeiros
 * Version: 0.3.2 (2013/08/17)
 * Released under the MIT license
 */
define('json',['text'], function(text){

    var CACHE_BUST_QUERY_PARAM = 'bust',
        CACHE_BUST_FLAG = '!bust',
        jsonParse = (typeof JSON !== 'undefined' && typeof JSON.parse === 'function')? JSON.parse : function(val){
            return eval('('+ val +')'); //quick and dirty
        },
        buildMap = {};

    function cacheBust(url){
        url = url.replace(CACHE_BUST_FLAG, '');
        url += (url.indexOf('?') < 0)? '?' : '&';
        return url + CACHE_BUST_QUERY_PARAM +'='+ Math.round(2147483647 * Math.random());
    }

    //API
    return {

        load : function(name, req, onLoad, config) {
            if ( config.isBuild && (config.inlineJSON === false || name.indexOf(CACHE_BUST_QUERY_PARAM +'=') !== -1) ) {
                //avoid inlining cache busted JSON or if inlineJSON:false
                onLoad(null);
            } else {
                text.get(req.toUrl(name), function(data){
                    if (config.isBuild) {
                        buildMap[name] = data;
                        onLoad(data);
                    } else {
                        onLoad(jsonParse(data));
                    }
                },
                    onLoad.error, {
                        accept: 'application/json'
                    }
                );
            }
        },

        normalize : function (name, normalize) {
            // used normalize to avoid caching references to a "cache busted" request
            if (name.indexOf(CACHE_BUST_FLAG) !== -1) {
                name = cacheBust(name);
            }
            // resolve any relative paths
            return normalize(name);
        },

        //write method based on RequireJS official text plugin by James Burke
        //https://github.com/jrburke/requirejs/blob/master/text.js
        write : function(pluginName, moduleName, write){
            if(moduleName in buildMap){
                var content = buildMap[moduleName];
                write('define("'+ pluginName +'!'+ moduleName +'", function(){ return '+ content +';});\n');
            }
        }

    };
});

define("json!../data/kjv.json", function(){ return {
"ot": [
    {"name": "Genesis", "abbrev": "Gen", "maxChapter": 50},
    {"name": "Exodus", "abbrev": "Exod", "maxChapter": 40},
    {"name": "Leviticus", "abbrev": "Lev", "maxChapter": 27},
    {"name": "Numbers", "abbrev": "Num", "maxChapter": 36},
    {"name": "Deuteronomy", "abbrev": "Deut", "maxChapter": 34},
    {"name": "Joshua", "abbrev": "Josh", "maxChapter": 24},
    {"name": "Judges", "abbrev": "Judg", "maxChapter": 21},
    {"name": "Ruth", "abbrev": "Ruth", "maxChapter": 4},
    {"name": "I Samuel", "abbrev": "1Sam", "maxChapter": 31},
    {"name": "II Samuel", "abbrev": "2Sam", "maxChapter": 24},
    {"name": "I Kings", "abbrev": "1Kgs", "maxChapter": 22},
    {"name": "II Kings", "abbrev": "2Kgs", "maxChapter": 25},
    {"name": "I Chronicles", "abbrev": "1Chr", "maxChapter": 29},
    {"name": "II Chronicles", "abbrev": "2Chr", "maxChapter": 36},
    {"name": "Ezra", "abbrev": "Ezra", "maxChapter": 10},
    {"name": "Nehemiah", "abbrev": "Neh", "maxChapter": 13},
    {"name": "Esther", "abbrev": "Esth", "maxChapter": 10},
    {"name": "Job", "abbrev": "Job", "maxChapter": 42},
    {"name": "Psalms", "abbrev": "Ps", "maxChapter": 150},
    {"name": "Proverbs", "abbrev": "Prov", "maxChapter": 31},
    {"name": "Ecclesiastes", "abbrev": "Eccl", "maxChapter": 12},
    {"name": "Song of Solomon", "abbrev": "Song", "maxChapter": 8},
    {"name": "Isaiah", "abbrev": "Isa", "maxChapter": 66},
    {"name": "Jeremiah", "abbrev": "Jer", "maxChapter": 52},
    {"name": "Lamentations", "abbrev": "Lam", "maxChapter": 5},
    {"name": "Ezekiel", "abbrev": "Ezek", "maxChapter": 48},
    {"name": "Daniel", "abbrev": "Dan", "maxChapter": 12},
    {"name": "Hosea", "abbrev": "Hos", "maxChapter": 14},
    {"name": "Joel", "abbrev": "Joel", "maxChapter": 3},
    {"name": "Amos", "abbrev": "Amos", "maxChapter": 9},
    {"name": "Obadiah", "abbrev": "Obad", "maxChapter": 1},
    {"name": "Jonah", "abbrev": "Jonah", "maxChapter": 4},
    {"name": "Micah", "abbrev": "Mic", "maxChapter": 7},
    {"name": "Nahum", "abbrev": "Nah", "maxChapter": 3},
    {"name": "Habakkuk", "abbrev": "Hab", "maxChapter": 3},
    {"name": "Zephaniah", "abbrev": "Zeph", "maxChapter": 3},
    {"name": "Haggai", "abbrev": "Hag", "maxChapter": 2},
    {"name": "Zechariah", "abbrev": "Zech", "maxChapter": 14},
    {"name": "Malachi", "abbrev": "Mal", "maxChapter": 4}
],
"nt": [
    {"name": "Matthew", "abbrev": "Matt", "maxChapter": 28},
    {"name": "Mark", "abbrev": "Mark", "maxChapter": 16},
    {"name": "Luke", "abbrev": "Luke", "maxChapter": 24},
    {"name": "John", "abbrev": "John", "maxChapter": 21},
    {"name": "Acts", "abbrev": "Acts", "maxChapter": 28},
    {"name": "Romans", "abbrev": "Rom", "maxChapter": 16},
    {"name": "I Corinthians", "abbrev": "1Cor", "maxChapter": 16},
    {"name": "II Corinthians", "abbrev": "2Cor", "maxChapter": 13},
    {"name": "Galatians", "abbrev": "Gal", "maxChapter": 6},
    {"name": "Ephesians", "abbrev": "Eph", "maxChapter": 6},
    {"name": "Philippians", "abbrev": "Phil", "maxChapter": 4},
    {"name": "Colossians", "abbrev": "Col", "maxChapter": 4},
    {"name": "I Thessalonians", "abbrev": "1Thess", "maxChapter": 5},
    {"name": "II Thessalonians", "abbrev": "2Thess", "maxChapter": 3},
    {"name": "I Timothy", "abbrev": "1Tim", "maxChapter": 6},
    {"name": "II Timothy", "abbrev": "2Tim", "maxChapter": 4},
    {"name": "Titus", "abbrev": "Titus", "maxChapter": 3},
    {"name": "Philemon", "abbrev": "Phlm", "maxChapter": 1},
    {"name": "Hebrews", "abbrev": "Heb", "maxChapter": 13},
    {"name": "James", "abbrev": "Jas", "maxChapter": 5},
    {"name": "I Peter", "abbrev": "1Pet", "maxChapter": 5},
    {"name": "II Peter", "abbrev": "2Pet", "maxChapter": 3},
    {"name": "I John", "abbrev": "1John", "maxChapter": 5},
    {"name": "II John", "abbrev": "2John", "maxChapter": 1},
    {"name": "III John", "abbrev": "3John", "maxChapter": 1},
    {"name": "Jude", "abbrev": "Jude", "maxChapter": 1},
    {"name": "Revelation of John", "abbrev": "Rev", "maxChapter": 22}
],
"osisToBookNum": {
    "Gen"   : 0,
    "Exod"  : 1,
    "Lev"   : 2,
    "Num"   : 3,
    "Deut"  : 4,
    "Josh"  : 5,
    "Judg"  : 6,
    "Ruth"  : 7,
    "1Sam"  : 8,
    "2Sam"  : 9,
    "1Kgs"  : 10,
    "2Kgs"  : 11,
    "1Chr"  : 12,
    "2Chr"  : 13,
    "Ezra"  : 14,
    "Neh"   : 15,
    "Esth"  : 16,
    "Job"   : 17,
    "Ps"    : 18,
    "Prov"  : 19,
    "Eccl"  : 20,
    "Song"  : 21,
    "Isa"   : 22,
    "Jer"   : 23,
    "Lam"   : 24,
    "Ezek"  : 25,
    "Dan"   : 26,
    "Hos"   : 27,
    "Joel"  : 28,
    "Amos"  : 29,
    "Obad"  : 30,
    "Jonah" : 31,
    "Mic"   : 32,
    "Nah"   : 33,
    "Hab"   : 34,
    "Zeph"  : 35,
    "Hag"   : 36,
    "Zech"  : 37,
    "Mal"   : 38,
    "Matt"  : 39,
    "Mark"  : 40,
    "Luke"  : 41,
    "John"  : 42,
    "Acts"  : 43,
    "Rom"   : 44,
    "1Cor"  : 45,
    "2Cor"  : 46,
    "Gal"   : 47,
    "Eph"   : 48,
    "Phil"  : 49,
    "Col"   : 50,
    "1Thess"    : 51,
    "2Thess"    : 52,
    "1Tim"  : 53,
    "2Tim"  : 54,
    "Titus" : 55,
    "Phlm"  : 56,
    "Heb"   : 57,
    "Jas"   : 58,
    "1Pet"  : 59,
    "2Pet"  : 60,
    "1John" : 61,
    "2John" : 62,
    "3John" : 63,
    "Jude"  : 64,
    "Rev"   : 65
},
"versesInChapter": [
    [31, 25, 24, 26, 32, 22, 24, 22, 29, 32, 32, 20, 18, 24, 21, 16, 27, 33, 38,
    18, 34, 24, 20, 67, 34, 35, 46, 22, 35, 43, 55, 32, 20, 31, 29, 43, 36,
    30, 23, 23, 57, 38, 34, 34, 28, 34, 31, 22, 33, 26],

    [22, 25, 22, 31, 23, 30, 25, 32, 35, 29, 10, 51, 22, 31, 27, 36, 16, 27, 25,
    26, 36, 31, 33, 18, 40, 37, 21, 43, 46, 38, 18, 35, 23, 35, 35, 38, 29,
    31, 43, 38],

    [17, 16, 17, 35, 19, 30, 38, 36, 24, 20, 47, 8, 59, 57, 33, 34, 16, 30, 37,
    27, 24, 33, 44, 23, 55, 46, 34],

    [54, 34, 51, 49, 31, 27, 89, 26, 23, 36, 35, 16, 33, 45, 41, 50, 13, 32, 22,
    29, 35, 41, 30, 25, 18, 65, 23, 31, 40, 16, 54, 42, 56, 29, 34, 13],

    [46, 37, 29, 49, 33, 25, 26, 20, 29, 22, 32, 32, 18, 29, 23, 22, 20, 22, 21,
    20, 23, 30, 25, 22, 19, 19, 26, 68, 29, 20, 30, 52, 29, 12],

    [18, 24, 17, 24, 15, 27, 26, 35, 27, 43, 23, 24, 33, 15, 63, 10, 18, 28, 51,
    9, 45, 34, 16, 33],

    [36, 23, 31, 24, 31, 40, 25, 35, 57, 18, 40, 15, 25, 20, 20, 31, 13, 31, 30,
    48, 25],

    [22, 23, 18, 22],

    [28, 36, 21, 22, 12, 21, 17, 22, 27, 27, 15, 25, 23, 52, 35, 23, 58, 30, 24,
    42, 15, 23, 29, 22, 44, 25, 12, 25, 11, 31, 13],

    [27, 32, 39, 12, 25, 23, 29, 18, 13, 19, 27, 31, 39, 33, 37, 23, 29, 33, 43,
    26, 22, 51, 39, 25],

    [53, 46, 28, 34, 18, 38, 51, 66, 28, 29, 43, 33, 34, 31, 34, 34, 24, 46, 21,
    43, 29, 53],

    [18, 25, 27, 44, 27, 33, 20, 29, 37, 36, 21, 21, 25, 29, 38, 20, 41, 37, 37,
    21, 26, 20, 37, 20, 30],

    [54, 55, 24, 43, 26, 81, 40, 40, 44, 14, 47, 40, 14, 17, 29, 43, 27, 17, 19,
    8, 30, 19, 32, 31, 31, 32, 34, 21, 30],

    [17, 18, 17, 22, 14, 42, 22, 18, 31, 19, 23, 16, 22, 15, 19, 14, 19, 34, 11,
    37, 20, 12, 21, 27, 28, 23, 9, 27, 36, 27, 21, 33, 25, 33, 27, 23],

    [11, 70, 13, 24, 17, 22, 28, 36, 15, 44],

    [11, 20, 32, 23, 19, 19, 73, 18, 38, 39, 36, 47, 31],

    [22, 23, 15, 17, 14, 14, 10, 17, 32, 3],

    [22, 13, 26, 21, 27, 30, 21, 22, 35, 22, 20, 25, 28, 22, 35, 22, 16, 21, 29,
    29, 34, 30, 17, 25, 6, 14, 23, 28, 25, 31, 40, 22, 33, 37, 16, 33, 24, 41,
    30, 24, 34, 17],

    [6, 12, 8, 8, 12, 10, 17, 9, 20, 18, 7, 8, 6, 7, 5, 11, 15, 50, 14, 9, 13,
    31, 6, 10, 22, 12, 14, 9, 11, 12, 24, 11, 22, 22, 28, 12, 40, 22, 13, 17,
    13, 11, 5, 26, 17, 11, 9, 14, 20, 23, 19, 9, 6, 7, 23, 13, 11, 11, 17, 12,
    8, 12, 11, 10, 13, 20, 7, 35, 36, 5, 24, 20, 28, 23, 10, 12, 20, 72, 13,
    19, 16, 8, 18, 12, 13, 17, 7, 18, 52, 17, 16, 15, 5, 23, 11, 13, 12, 9, 9,
    5, 8, 28, 22, 35, 45, 48, 43, 13, 31, 7, 10, 10, 9, 8, 18, 19, 2, 29, 176,
    7, 8, 9, 4, 8, 5, 6, 5, 6, 8, 8, 3, 18, 3, 3, 21, 26, 9, 8, 24, 13, 10, 7,
    12, 15, 21, 10, 20, 14, 9, 6],

    [33, 22, 35, 27, 23, 35, 27, 36, 18, 32, 31, 28, 25, 35, 33, 33, 28, 24, 29,
    30, 31, 29, 35, 34, 28, 28, 27, 28, 27, 33, 31],

    [18, 26, 22, 16, 20, 12, 29, 17, 18, 20, 10, 14],

    [17, 17, 11, 16, 16, 13, 13, 14],

    [31, 22, 26, 6, 30, 13, 25, 22, 21, 34, 16, 6, 22, 32, 9, 14, 14, 7, 25, 6,
    17, 25, 18, 23, 12, 21, 13, 29, 24, 33, 9, 20, 24, 17, 10, 22, 38, 22, 8,
    31, 29, 25, 28, 28, 25, 13, 15, 22, 26, 11, 23, 15, 12, 17, 13, 12, 21,
    14, 21, 22, 11, 12, 19, 12, 25, 24],

    [19, 37, 25, 31, 31, 30, 34, 22, 26, 25, 23, 17, 27, 22, 21, 21, 27, 23, 15,
    18, 14, 30, 40, 10, 38, 24, 22, 17, 32, 24, 40, 44, 26, 22, 19, 32, 21,
    28, 18, 16, 18, 22, 13, 30, 5, 28, 7, 47, 39, 46, 64, 34],

    [22, 22, 66, 22, 22],

    [28, 10, 27, 17, 17, 14, 27, 18, 11, 22, 25, 28, 23, 23, 8, 63, 24, 32, 14,
    49, 32, 31, 49, 27, 17, 21, 36, 26, 21, 26, 18, 32, 33, 31, 15, 38, 28,
    23, 29, 49, 26, 20, 27, 31, 25, 24, 23, 35],

    [21, 49, 30, 37, 31, 28, 28, 27, 27, 21, 45, 13],

    [11, 23, 5, 19, 15, 11, 16, 14, 17, 15, 12, 14, 16, 9],

    [20, 32, 21],

    [15, 16, 15, 13, 27, 14, 17, 14, 15],

    [21],

    [17, 10, 10, 11],

    [16, 13, 12, 13, 15, 16, 20],

    [15, 13, 19],

    [17, 20, 19],

    [18, 15, 20],

    [15, 23],

    [21, 13, 10, 14, 11, 15, 14, 23, 17, 12, 17, 14, 9, 21],

    [14, 17, 18, 6],

    [25, 23, 17, 25, 48, 34, 29, 34, 38, 42, 30, 50, 58, 36, 39, 28, 27, 35, 30,
    34, 46, 46, 39, 51, 46, 75, 66, 20],

    [45, 28, 35, 41, 43, 56, 37, 38, 50, 52, 33, 44, 37, 72, 47, 20],

    [80, 52, 38, 44, 39, 49, 50, 56, 62, 42, 54, 59, 35, 35, 32, 31, 37, 43, 48,
    47, 38, 71, 56, 53],

    [51, 25, 36, 54, 47, 71, 53, 59, 41, 42, 57, 50, 38, 31, 27, 33, 26, 40, 42,
    31, 25],

    [26, 47, 26, 37, 42, 15, 60, 40, 43, 48, 30, 25, 52, 28, 41, 40, 34, 28, 41,
    38, 40, 30, 35, 27, 27, 32, 44, 31],

    [32, 29, 31, 25, 21, 23, 25, 39, 33, 21, 36, 21, 14, 23, 33, 27],

    [31, 16, 23, 21, 13, 20, 40, 13, 27, 33, 34, 31, 13, 40, 58, 24],

    [24, 17, 18, 18, 21, 18, 16, 24, 15, 18, 33, 21, 14],

    [24, 21, 29, 31, 26, 18],

    [23, 22, 21, 32, 33, 24],

    [30, 30, 21, 23],

    [29, 23, 25, 18],

    [10, 20, 13, 18, 28],

    [12, 17, 18],

    [20, 15, 16, 16, 25, 21],

    [18, 26, 17, 22],

    [16, 15, 15],

    [25],

    [14, 18, 19, 16, 14, 20, 28, 13, 28, 39, 40, 29, 25],

    [27, 26, 18, 17, 20],

    [25, 25, 22, 19, 14],

    [21, 22, 18],

    [10, 29, 24, 21, 21],

    [13],

    [14],

    [25],

    [20, 29, 22, 11, 14, 17, 17, 13, 21, 11, 19, 17, 18, 20, 8, 21, 18, 24, 21,
    15, 27, 21]
]
};});

define("json!../data/german.json", function(){ return {
"ot": [
    {"name": "Genesis", "abbrev": "Gen", "maxChapter": 50},
    {"name": "Exodus", "abbrev": "Exod", "maxChapter": 40},
    {"name": "Leviticus", "abbrev": "Lev", "maxChapter": 27},
    {"name": "Numbers", "abbrev": "Num", "maxChapter": 36},
    {"name": "Deuteronomy", "abbrev": "Deut", "maxChapter": 34},
    {"name": "Joshua", "abbrev": "Josh", "maxChapter": 24},
    {"name": "Judges", "abbrev": "Judg", "maxChapter": 21},
    {"name": "Ruth", "abbrev": "Ruth", "maxChapter": 4},
    {"name": "I Samuel", "abbrev": "1Sam", "maxChapter": 31},
    {"name": "II Samuel", "abbrev": "2Sam", "maxChapter": 24},
    {"name": "I Kings", "abbrev": "1Kgs", "maxChapter": 22},
    {"name": "II Kings", "abbrev": "2Kgs", "maxChapter": 25},
    {"name": "I Chronicles", "abbrev": "1Chr", "maxChapter": 29},
    {"name": "II Chronicles", "abbrev": "2Chr", "maxChapter": 36},
    {"name": "Ezra", "abbrev": "Ezra", "maxChapter": 10},
    {"name": "Nehemiah", "abbrev": "Neh", "maxChapter": 13},
    {"name": "Esther", "abbrev": "Esth", "maxChapter": 10},
    {"name": "Job", "abbrev": "Job", "maxChapter": 42},
    {"name": "Psalms", "abbrev": "Ps", "maxChapter": 150},
    {"name": "Proverbs", "abbrev": "Prov", "maxChapter": 31},
    {"name": "Ecclesiastes", "abbrev": "Eccl", "maxChapter": 12},
    {"name": "Song of Solomon", "abbrev": "Song", "maxChapter": 8},
    {"name": "Isaiah", "abbrev": "Isa", "maxChapter": 66},
    {"name": "Jeremiah", "abbrev": "Jer", "maxChapter": 52},
    {"name": "Lamentations", "abbrev": "Lam", "maxChapter": 5},
    {"name": "Ezekiel", "abbrev": "Ezek", "maxChapter": 48},
    {"name": "Daniel", "abbrev": "Dan", "maxChapter": 12},
    {"name": "Hosea", "abbrev": "Hos", "maxChapter": 14},
    {"name": "Joel", "abbrev": "Joel", "maxChapter": 4},
    {"name": "Amos", "abbrev": "Amos", "maxChapter": 9},
    {"name": "Obadiah", "abbrev": "Obad", "maxChapter": 1},
    {"name": "Jonah", "abbrev": "Jonah", "maxChapter": 4},
    {"name": "Micah", "abbrev": "Mic", "maxChapter": 7},
    {"name": "Nahum", "abbrev": "Nah", "maxChapter": 3},
    {"name": "Habakkuk", "abbrev": "Hab", "maxChapter": 3},
    {"name": "Zephaniah", "abbrev": "Zeph", "maxChapter": 3},
    {"name": "Haggai", "abbrev": "Hag", "maxChapter": 2},
    {"name": "Zechariah", "abbrev": "Zech", "maxChapter": 14},
    {"name": "Malachi", "abbrev": "Mal", "maxChapter": 3}
],
"versesInChapter": [
    [31, 25, 24, 26, 32, 22, 24, 22, 29, 32, 32, 20, 18, 24, 21, 16, 27, 33, 38, 18, 34, 24, 20, 67, 34, 35, 46, 22, 35, 43, 54, 33, 20, 31, 29, 43, 36, 30, 23, 23, 57, 38, 34, 34, 28, 34, 31, 22, 33, 26],

    [22, 25, 22, 31, 23, 30, 29, 28, 35, 29, 10, 51, 22, 31, 27, 36, 16, 27, 25, 26, 37, 30, 33, 18, 40, 37, 21, 43, 46, 38, 18, 35, 23, 35, 35, 38, 29, 31, 43, 38],

    [17, 16, 17, 35, 26, 23, 38, 36, 24, 20, 47, 8, 59, 57, 33, 34, 16, 30, 37, 27, 24, 33, 44, 23, 55, 46, 34],

    [54, 34, 51, 49, 31, 27, 89, 26, 23, 36, 35, 16, 33, 45, 41, 35, 28, 32, 22, 29, 35, 41, 30, 25, 19, 65, 23, 31, 39, 17, 54, 42, 56, 29, 34, 13],

    [46, 37, 29, 49, 33, 25, 26, 20, 29, 22, 32, 31, 19, 29, 23, 22, 20, 22, 21, 20, 23, 29, 26, 22, 19, 19, 26, 69, 28, 20, 30, 52, 29, 12],

    [18, 24, 17, 24, 15, 27, 26, 35, 27, 43, 23, 24, 33, 15, 63, 10, 18, 28, 51, 9, 45, 34, 16, 33],

    [36, 23, 31, 24, 31, 40, 25, 35, 57, 18, 40, 15, 25, 20, 20, 31, 13, 31, 30, 48, 25],

    [22, 23, 18, 22],

    [28, 36, 21, 22, 12, 21, 17, 22, 27, 27, 15, 25, 23, 52, 35, 23, 58, 30, 24, 42, 16, 23, 28, 23, 44, 25, 12, 25, 11, 31, 13],

    [27, 32, 39, 12, 25, 23, 29, 18, 13, 19, 27, 31, 39, 33, 37, 23, 29, 32, 44, 26, 22, 51, 39, 25],

    [53, 46, 28, 20, 32, 38, 51, 66, 28, 29, 43, 33, 34, 31, 34, 34, 24, 46, 21, 43, 29, 54],

    [18, 25, 27, 44, 27, 33, 20, 29, 37, 36, 20, 22, 25, 29, 39, 20, 41, 37, 37, 21, 26, 20, 37, 20, 30],

    [54, 55, 24, 43, 41, 66, 40, 40, 44, 14, 47, 41, 14, 17, 29, 43, 27, 17, 19, 8, 30, 19, 32, 31, 31, 32, 34, 21, 30],

    [18, 17, 17, 22, 14, 42, 22, 18, 31, 19, 23, 16, 23, 14, 19, 14, 19, 34, 11, 37, 20, 12, 21, 27, 28, 23, 9, 27, 36, 27, 21, 33, 25, 33, 27, 23],

    [11, 70, 13, 24, 17, 22, 28, 36, 15, 44],

    [11, 20, 38, 17, 19, 19, 73, 18, 37, 40, 36, 47, 31],

    [22, 23, 15, 17, 14, 14, 10, 17, 32, 3],

    [22, 13, 26, 21, 27, 30, 21, 22, 35, 22, 20, 25, 28, 22, 35, 22, 16, 21, 29, 29, 34, 30, 17, 25, 6, 14, 23, 28, 25, 31, 40, 22, 33, 37, 16, 33, 24, 41, 30, 32, 26, 17],

    [6, 12, 9, 9, 13, 11, 18, 10, 21, 18, 7, 9, 6, 7, 5, 11, 15, 51, 15, 10, 14, 32, 6, 10, 22, 12, 14, 9, 11, 13, 25, 11, 22, 23, 28, 13, 40, 23, 14, 18, 14, 12, 5, 27, 18, 12, 10, 15, 21, 23, 21, 11, 7, 9, 24, 14, 12, 12, 18, 14, 9, 13, 12, 11, 14, 20, 8, 36, 37, 6, 24, 20, 28, 23, 11, 13, 21, 72, 13, 20, 17, 8, 19, 13, 14, 17, 7, 19, 53, 17, 16, 16, 5, 23, 11, 13, 12, 9, 9, 5, 8, 29, 22, 35, 45, 48, 43, 14, 31, 7, 10, 10, 9, 8, 18, 19, 2, 29, 176, 7, 8, 9, 4, 8, 5, 6, 5, 6, 8, 8, 3, 18, 3, 3, 21, 26, 9, 8, 24, 14, 10, 8, 12, 15, 21, 10, 20, 14, 9, 6],

    [33, 22, 35, 27, 23, 35, 27, 36, 18, 32, 31, 28, 25, 35, 33, 33, 28, 24, 29, 30, 31, 29, 35, 34, 28, 28, 27, 28, 27, 33, 31],

    [18, 26, 22, 17, 19, 12, 29, 17, 18, 20, 10, 14],

    [17, 17, 11, 16, 16, 12, 14, 14],

    [31, 22, 26, 6, 30, 13, 25, 23, 20, 34, 16, 6, 22, 32, 9, 14, 14, 7, 25, 6, 17, 25, 18, 23, 12, 21, 13, 29, 24, 33, 9, 20, 24, 17, 10, 22, 38, 22, 8, 31, 29, 25, 28, 28, 25, 13, 15, 22, 26, 11, 23, 15, 12, 17, 13, 12, 21, 14, 21, 22, 11, 12, 19, 11, 25, 24],

    [19, 37, 25, 31, 31, 30, 34, 23, 25, 25, 23, 17, 27, 22, 21, 21, 27, 23, 15, 18, 14, 30, 40, 10, 38, 24, 22, 17, 32, 24, 40, 44, 26, 22, 19, 32, 21, 28, 18, 16, 18, 22, 13, 30, 5, 28, 7, 47, 39, 46, 64, 34],

    [22, 22, 66, 22, 22],

    [28, 10, 27, 17, 17, 14, 27, 18, 11, 22, 25, 28, 23, 23, 8, 63, 24, 32, 14, 44, 37, 31, 49, 27, 17, 21, 36, 26, 21, 26, 18, 32, 33, 31, 15, 38, 28, 23, 29, 49, 26, 20, 27, 31, 25, 24, 23, 35],

    [21, 49, 33, 34, 30, 29, 28, 27, 27, 21, 45, 13],

    [9, 25, 5, 19, 15, 11, 16, 14, 17, 15, 11, 15, 15, 10],

    [20, 27, 5, 21],

    [15, 16, 15, 13, 27, 14, 17, 14, 15],

    [21],

    [16, 11, 10, 11],

    [16, 13, 12, 14, 14, 16, 20],

    [14, 14, 19],

    [17, 20, 19],

    [18, 15, 20],

    [15, 23],

    [17, 17, 10, 14, 11, 15, 14, 23, 17, 12, 17, 14, 9, 21],

    [14, 17, 24],

    [25, 23, 17, 25, 48, 34, 29, 34, 38, 42, 30, 50, 58, 36, 39, 28, 27, 35, 30, 34, 46, 46, 39, 51, 46, 75, 66, 20],

    [45, 28, 35, 41, 43, 56, 37, 38, 50, 52, 33, 44, 37, 72, 47, 20],

    [80, 52, 38, 44, 39, 49, 50, 56, 62, 42, 54, 59, 35, 35, 32, 31, 37, 43, 48, 47, 38, 71, 56, 53],

    [51, 25, 36, 54, 47, 71, 53, 59, 41, 42, 57, 50, 38, 31, 27, 33, 26, 40, 42, 31, 25],

    [26, 47, 26, 37, 42, 15, 60, 40, 43, 48, 30, 25, 52, 28, 41, 40, 34, 28, 40, 38, 40, 30, 35, 27, 27, 32, 44, 31],

    [32, 29, 31, 25, 21, 23, 25, 39, 33, 21, 36, 21, 14, 23, 33, 27],

    [31, 16, 23, 21, 13, 20, 40, 13, 27, 33, 34, 31, 13, 40, 58, 24],

    [24, 17, 18, 18, 21, 18, 16, 24, 15, 18, 33, 21, 13],

    [24, 21, 29, 31, 26, 18],

    [23, 22, 21, 32, 33, 24],

    [30, 30, 21, 23],

    [29, 23, 25, 18],

    [10, 20, 13, 18, 28],

    [12, 17, 18],

    [20, 15, 16, 16, 25, 21],

    [18, 26, 17, 22],

    [16, 15, 15],

    [25],

    [14, 18, 19, 16, 14, 20, 28, 13, 28, 39, 40, 29, 25],

    [27, 26, 18, 17, 20],

    [25, 25, 22, 19, 14],

    [21, 22, 18],

    [10, 29, 24, 21, 21],

    [13],

    [15],

    [25],

    [20, 29, 22, 11, 14, 17, 17, 13, 21, 11, 19, 18, 18, 20, 8, 21, 18, 24, 21, 15, 27, 21]
]
}
;});

/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('versificationMgr',["json!../data/kjv.json", "json!../data/german.json"], function (kjv, german) {
    var versificationMgr = {};

    versificationMgr.kjv = kjv;
    german["nt"] = kjv.nt;
    german["osisToBookNum"] = kjv.osisToBookNum;
    versificationMgr.german = german;

    function getBooksInOT (v11n) {
        if (v11n !== undefined && versificationMgr[v11n])
            return versificationMgr[v11n].ot.length;
        else
            return versificationMgr.kjv.ot.length;
    }

    function getBooksInNT (v11n) {
        if (v11n !== undefined && versificationMgr[v11n])
            return versificationMgr[v11n].nt.length;
        else
            return versificationMgr.kjv.nt.length;
    }

    function getChapterMax (inBookNum, v11n) {
        inBookNum = (inBookNum < 0) ? 0 : inBookNum;
        var booksOT = getBooksInOT(v11n);
        var testament = (inBookNum < booksOT) ? "ot" : "nt";
        inBookNum = (inBookNum < booksOT) ? inBookNum : inBookNum - booksOT;
        if (v11n !== undefined && versificationMgr[v11n])
            return versificationMgr[v11n][testament][inBookNum].maxChapter;
        else
            return versificationMgr.kjv[testament][inBookNum].maxChapter;
    }

    function getVersesInChapter (inBookNum, inChapter, v11n) {
        if (v11n !== undefined && versificationMgr[v11n])
            return versificationMgr[v11n].versesInChapter[inBookNum][parseInt(inChapter, 10)-1];
        else
            return versificationMgr.kjv.versesInChapter[inBookNum][parseInt(inChapter, 10)-1];
    }

    function getBook(inBookNum, v11n) {
        inBookNum = (inBookNum < 0) ? 0 : inBookNum;
        var booksOT = getBooksInOT(v11n);
        var testament = (inBookNum < booksOT) ? "ot" : "nt";
        inBookNum = (inBookNum < booksOT) ? inBookNum : inBookNum - booksOT;
        if (v11n !== undefined && versificationMgr[v11n])
            return versificationMgr[v11n][testament][inBookNum];
        else
            return versificationMgr.kjv[testament][inBookNum];
    }

    function getBookNum(inOsis, v11n) {
        //console.log(inOsis, v11n, versificationMgr.kjv.osisToBookNum[inOsis]);
        if (v11n !== undefined && versificationMgr[v11n])
            return versificationMgr[v11n].osisToBookNum[inOsis];
        else
            return versificationMgr.kjv.osisToBookNum[inOsis];
    }

    function getAllBooks(v11n) {
        var books = [];
        if (v11n !== undefined && versificationMgr[v11n])
            return books.concat(versificationMgr[v11n].ot,versificationMgr[v11n].nt);
        else
            return books.concat(versificationMgr.kjv.ot,versificationMgr.kjv.nt);
    }

    return {
        getBooksInOT: getBooksInOT,
        getBooksInNT: getBooksInNT,
        getChapterMax: getChapterMax,
        getVersesInChapter: getVersesInChapter,
        getBook: getBook,
        getBookNum: getBookNum,
        getAllBooks: getAllBooks
    };
});

/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('installMgr',["unzip", "dataMgr", "zText", "versificationMgr", "async", "tools"], function (Zlib, dataMgr, zText, versificationMgr, async, tools) {
    var start = 0,
        buf = null,
        isEnd = false;

    //Get a list of all available repos/sources from CrossWire's masterRepoList.conf
    function getRepositories(inCallback) {
        download("http://crosswire.org/ftpmirror/pub/sword/masterRepoList.conf", "text", function (inError, inResponse) {
            if (inResponse === "" && !inError) {
                inCallback("Couldn't download master repo list!");
            } else if (!inError) {
                var repos = [],
                    split = null,
                    type = "",
                    repoName = "";
                inResponse.split(/[\r\n]+/g).forEach(function (repo) {
                    split = repo.split("|");
                    if(split.length > 1 && split[0].search("CrossWire") !== -1) {
                        repoName = split[0].split("=")[2];
                        switch (repoName) {
                            case "CrossWire":
                                type = "main";
                            break;
                            case "CrossWire Beta":
                                type = "beta";
                            break;
                            case "CrossWire av11n":
                                type = "av";
                            break;
                            case "CrossWire Attic":
                                type = "attic";
                            break;
                            case "CrossWire Wycliffe":
                                type = "wycliffe";
                            break;
                            case "CrossWire av11n Attic":
                                type = "avattic";
                            break;
                        }
                        repos.push({
                            name: repoName,
                            type: type,
                            url: "http://crosswire.org/ftpmirror" + split[2].replace("raw", "packages") + "/rawzip/",
                            confUrl: "http://crosswire.org/ftpmirror" + split[2] + "/mods.d"
                        });
                    }
                });
                //console.log("REPOS", repos);
                inCallback(inError, repos);
            } else {
                inCallback(inError);
            }
        });
    }

    //dirty hack to get a list of modules that is available in a repository.
    //FIXME: unpack mods.d.tar.gz in Javascript (untar is the problem) or ask CrossWire to compress it as zip/gzip
    function getModules(inRepo, inCallback) {
        download(inRepo.confUrl, "document", function (inError, inResponse) {
            if (!inError) {
                var tasks = [],
                    url = "",
                    a = inResponse.getElementsByTagName("a");
                for(var i=0;i<a.length;i++) {
                    if (a[i].href.search(".conf") !== -1) {
                        url = a[i].baseURI + "/" + a[i].textContent;
                        tasks.push((function (url) {
                            return function (cb) {
                                download(url, "text", function (inError, inConf) {
                                    var configData = tools.readConf(inConf);
                                    if (configData.ModDrv === "zText") {
                                        //configData["url"] = inRepo.url + configData.moduleKey + ".zip";
                                        configData["url"] = "http://www.crosswire.org/sword/servlet/SwordMod.Verify?modName=" + configData.moduleKey + "&" + inRepo.type + "=true&pkgType=raw";
                                        cb(inError, configData);
                                    } else {
                                        cb(inError);
                                    }
                                });
                            };
                        })(url));
                    }
                }
                async.parallel(tasks, function (inError, inModules) {
                    inCallback(inError, tools.cleanArray(inModules).sort(tools.dynamicSortMultiple("Lang", "moduleKey")));
                });
            } else {
                inCallback(inError);
            }

        });
    }

    function download(url, reponseType, inCallback, inProgressCallback) {
        var xhr = new XMLHttpRequest({mozSystem: true, mozAnon: true});
        xhr.open('GET', url, true);
        //xhr.setRequestHeader("Accept-Encoding", "gzip, deflate");
        xhr.responseType = reponseType; //"blob";
        xhr.onreadystatechange = function (evt) {
            //console.log(xhr.readyState, evt, xhr.status);
            if (xhr.readyState == 4) {
                if(xhr.status === 200)
                    inCallback(null, xhr.response);
                else
                    inCallback({message: "Couldn't download module.", error: xhr.status});
            }
        };
        xhr.onprogress = inProgressCallback;
        xhr.onerror = function (inError) {
            inCallback(inError);
        };
        xhr.send(null);
    }

    //Install a module. inUrl can be an url or a file blob (zipped module file)
    function installModule (inUrl, inCallback, inProgressCallback) {
        if(typeof inUrl === "string") {
            download(inUrl, "document", function (inError, inResponse) {
                if(!inError) {
                    var newUrl = inResponse.getElementsByTagName("a")[0].href;
                    download(newUrl, "blob", function (inError, inBlob) {
                        if(!inError) _installModule(inBlob, inCallback);
                        else inCallback(inError);
                    },
                    inProgressCallback);
                } else inCallback(inError);
            });
        } else {
            _installModule(inUrl, inCallback);
        }
    }

    function _installModule(inBlob, inCallback) {
        var blob = null;
        var zipReader = new FileReader();
        zipReader.onload = function(evt) {
            var unzip = new Zlib.Unzip(new Uint8Array(evt.target.result));
            var filenames = unzip.getFilenames();
            filenames.forEach(function (name, index) {
                if(name.search(".conf") !== -1) {
                    dataMgr.saveConfig(new Blob([unzip.decompress(name)]),
                        function (inError, inDoc) {
                            if(!inError) buildIndex(unzip, inDoc.v11n, inDoc, inCallback);
                            else inCallback(inError);
                        });
                }
            });
        };
        zipReader.readAsArrayBuffer(inBlob);
    }

    //Build the index with all entry points for a book or chapter
    function buildIndex(inUnzip, inV11n, inDoc, inCallback) {
        var files = {};
        files["bin"] = [];

        var filenames = inUnzip.getFilenames();
        filenames.forEach(function (name, index) {
            if(name.search("nt.bzs") !== -1)
                files["ntB"] = name;
            else if(name.search("nt.bzv") !== -1)
                files["ntCV"] = name;
            else if(name.search("ot.bzs") !== -1)
                files["otB"] = name;
            else if(name.search("ot.bzv") !== -1)
                files["otCV"] = name;
            else if (name.search(".conf") === -1)
                files.bin.push({blob: new Blob([inUnzip.decompress(name)]), name: name});
        });

        async.series([
            function (cb) {
                dataMgr.saveModule(files.bin, inDoc, function (inError, inResponse) {
                    if(!inError) cb(null);
                    else cb(inError);
                });
            },
            function (cb) {
                var bookPosOT = null,
                    chapterVersePosOT = null,
                    bookPosNT = null,
                    chapterVersePosNT = null;

                if (files.otB) {
                    bookPosOT = getBookPositions(inUnzip.decompress(files.otB));
                    chapterVersePosOT = getChapterVersePositions(inUnzip.decompress(files.otCV), bookPosOT, "ot", inV11n);
                }
                if (files.ntB) {
                    bookPosNT = getBookPositions(inUnzip.decompress(files.ntB));
                    chapterVersePosNT = getChapterVersePositions(inUnzip.decompress(files.ntCV), bookPosNT, "nt", inV11n);
                }
                //console.log(chapterVersePosOT, chapterVersePosNT);

                dataMgr.saveBCVPos(chapterVersePosOT, chapterVersePosNT, inDoc, function (inError, inResponse) {
                    if(!inError) cb(null);
                    else cb(inError);
                });
            }
            ], function (inError, inResult) {
                if(!inError) inCallback(null, inDoc.id);
                else {
                    //If we got an error while saving the blob files, delete the config entry in the database
                    dataMgr.remove(inDoc.id, function (inError) {
                        //console.log(inError);
                    });
                    inCallback(inError);
                }

            }
        );
    }

    //Get the positions of each book
    function getBookPositions(inBuf, inCallback) {
        var startPos = 0,
            length = 0,
            unused = 0,
            res = null,
            end = false,
            bookPositions = [];
        start = 0;

        while(!end) {
            res = getIntFromStream(inBuf);
            startPos = res[0];
            end = res[1];
            if (!end) {
                res = getIntFromStream(inBuf);
                length = res[0];
                end = res[1];
                if (!end) {
                    res = getIntFromStream(inBuf);
                    unused = res[0];
                    end = res[1];
                    if (end)
                        break;
                    bookPositions.push({startPos: startPos, length: length, unused: unused});
                }
            }
        }
        return bookPositions;
    }

    //dump some bytes in the chapter and verse index file
    function dumpBytes(inBuf) {
        start = 0;

        for (var i=0;i<4;i++) {
            getShortIntFromStream(inBuf);
            getInt48FromStream(inBuf);
            getShortIntFromStream(inBuf);
        }
    }
    // ### This code is based on the zTextReader class from cross-connect (https://code.google.com/p/cross-connect), Copyright (C) 2011 Thomas Dilts ###

    //Get the position of each chapter and verse
    function getChapterVersePositions(inBuf, inBookPositions, inTestament, inV11n) {
        dumpBytes(inBuf);
        var booksStart = (inTestament === "ot") ? 0 : versificationMgr.getBooksInOT(inV11n);
        var booksEnd = (inTestament === "ot") ? versificationMgr.getBooksInOT(inV11n) : versificationMgr.getBooksInOT(inV11n)+versificationMgr.getBooksInNT(inV11n);
        var chapterZ = 0,
            verseZ = 0,
            chapterStartPos = 0,
            lastNonZeroStartPos = 0,
            length = 0,
            bookStartPos = 0,
            booknum = 0,
            verseMax = 0,
            bookData = null,
            startPos = 0,
            chapt = {},
            chapters = {};

        for (var b = booksStart; b<booksEnd; b++) {
            bookData = versificationMgr.getBook(b, inV11n);
            chapters[bookData.abbrev] = [];
            //console.log(bookData);
            for (var c = 0; c<bookData.maxChapter; c++) {
                chapterStartPos = 0;
                lastNonZeroStartPos = 0;
                chapt = {};
                chapt["verses"] = [];
                length = 0;
                verseMax = versificationMgr.getVersesInChapter(b,c+1, inV11n);
                for (var v = 0; v<verseMax; v++) {
                    booknum = getShortIntFromStream(inBuf)[0];
                    startPos = getInt48FromStream(inBuf)[0];

                    if (startPos !== 0)
                        lastNonZeroStartPos = startPos;

                    length = getShortIntFromStream(inBuf)[0];
                    //console.log("startPos, length", startPos, length);
                    if (v === 0) {
                        chapterStartPos = startPos;
                        bookStartPos = 0;
                        if (booknum < inBookPositions.length) {
                            //console.log("inBookPositions.startPos", inBookPositions[booknum].startPos, booknum, inBookPositions.length);
                            bookStartPos = inBookPositions[booknum].startPos;
                        }
                        chapt["startPos"] = chapterStartPos;
                        chapt["booknum"] = b;
                        //chapt["bookRelativeChapterNum"] = c;
                        chapt["bookStartPos"] = bookStartPos;
                    }
                    if (booknum === 0 && startPos === 0 && length === 0) {
                        if (chapt !== {}) {
                            chapt["verses"].push({startPos: 0, length: 0});
                        }
                    } else {
                        if (chapt !== {}) {
                            chapt["verses"].push({startPos: startPos - chapterStartPos, length: length});
                        }
                    }
                } //end verse
                if (chapt != {}) {
                    //console.log("LENGTH:", lastNonZeroStartPos, chapterStartPos, length);
                    chapt["length"] = lastNonZeroStartPos - chapterStartPos + length;
                    chapters[bookData.abbrev].push(chapt);
                }
                // dump a post for the chapter break
                getShortIntFromStream(inBuf);
                getInt48FromStream(inBuf);
                getShortIntFromStream(inBuf);
            } //end chpaters
            // dump a post for the book break
            getShortIntFromStream(inBuf);
            getInt48FromStream(inBuf);
            getShortIntFromStream(inBuf);
        } //end books
        return chapters;
    }

    function getIntFromStream(inBuf, inCallback) {
        buf = inBuf.subarray(start, start+4);
        isEnd = false;
        start = start+4;
        if (buf.length !== 4)
            isEnd = true;
        if (inCallback)
            inCallback(buf[3] * 0x100000 + buf[2] * 0x10000 + buf[1] * 0x100 + buf[0], isEnd);
        return [buf[3] * 0x100000 + buf[2] * 0x10000 + buf[1] * 0x100 + buf[0], isEnd];
    }

    function getShortIntFromStream(inBuf, inCallback) {
        buf = inBuf.subarray(start, start+2);
        isEnd = false;
        start = start+2;
        if (buf.length !== 2)
            isEnd = true;
        if (inCallback)
            inCallback(buf[1] * 0x100 + buf[0], isEnd);
        return [buf[1] * 0x100 + buf[0], isEnd];
    }

    function getInt48FromStream(inBuf, inCallback) {
        buf = inBuf.subarray(start, start+6);
        isEnd = false;
        start = start+6;
        if (buf.length !== 6)
            isEnd = true;
        if (inCallback)
            inCallback(buf[1] * 0x100000000000 + buf[0] * 0x100000000 + buf[5] * 0x1000000 + buf[4] * 0x10000 + buf[3] * 0x100 + buf[2], isEnd);
        return [buf[1] * 0x100000000000 + buf[0] * 0x100000000 + buf[5] * 0x1000000 + buf[4] * 0x10000 + buf[3] * 0x100 + buf[2], isEnd];
    }

    return {
        getRepositories: getRepositories,
        getModules: getModules,
        installModule: installModule
    };
});
(function(){var h,ga,r,P={}.hasOwnProperty,l=function(){var a,e,b;this.options={};b=l.prototype.options;for(a in b)P.call(b,a)&&(e=b[a],this.options[a]=e);this.versification_system(this.options.versification_system)};l.prototype.s="";l.prototype.entities=[];l.prototype.passage=null;l.prototype.regexps={};l.prototype.options={consecutive_combination_strategy:"combine",osis_compaction_strategy:"b",book_sequence_strategy:"ignore",invalid_sequence_strategy:"ignore",sequence_combination_strategy:"combine",
invalid_passage_strategy:"ignore",zero_chapter_strategy:"error",zero_verse_strategy:"error",non_latin_digits_strategy:"ignore",book_alone_strategy:"ignore",captive_end_digits_strategy:"delete",end_range_digits_strategy:"verse",include_apocrypha:!1,ps151_strategy:"c",versification_system:"default",case_sensitive:"none"};l.prototype.parse=function(a){var e,b,c;this.reset();this.s=a;a=this.replace_control_characters(a);b=this.match_books(a);a=b[0];this.passage.books=b[1];a=this.match_passages(a);this.entities=
[];b=0;for(c=a.length;b<c;b++)e=a[b],e=this.passage.handle_array([e])[0],this.entities=this.entities.concat(e);return this};l.prototype.reset=function(){this.s="";this.entities=[];if(this.passage)return this.passage.books=[],this.passage.indices={};this.passage=new ga;this.passage.options=this.options;return this.passage.translations=this.translations};l.prototype.set_options=function(a){var e,b;for(e in a)if(P.call(a,e))if(b=a[e],"include_apocrypha"===e||"versification_system"===e||"case_sensitive"===
e)this[e](b);else this.options[e]=b;return this};l.prototype.include_apocrypha=function(a){if(!(null!=a&&(!0===a||!1===a)))return this;this.options.include_apocrypha=a;this.regexps.books=this.regexps.get_books(a,this.options.case_sensitive);!0===a?this.translations["default"].chapters.Ps[150]=this.translations["default"].chapters.Ps151[0]:!1===a&&151===this.translations["default"].chapters.Ps.length&&this.translations["default"].chapters.Ps.pop();return this};l.prototype.versification_system=function(a){var e,
b;if(!(null!=a&&null!=this.translations.alternates[a]))return this;this.options.versification_system=a;if(null==(b=this.translations.alternates)["default"])b["default"]={order:null,chapters:{}};null!=this.translations.alternates[a].order&&(null==this.translations.alternates["default"].order&&(this.translations.alternates["default"].order=r.shallow_clone(this.translations["default"].order)),this.translations["default"].order=r.shallow_clone(this.translations.alternates[a].order));if(null!=this.translations.alternates[a].chapters)for(e in b=
this.translations.alternates[a].chapters,b)P.call(b,e)&&(a=b[e],null==this.translations.alternates["default"].chapters[e]&&(this.translations.alternates["default"].chapters[e]=r.shallow_clone_array(this.translations["default"].chapters[e])),this.translations["default"].chapters[e]=r.shallow_clone_array(a));this.include_apocrypha(this.options.include_apocrypha);return this};l.prototype.case_sensitive=function(a){if(!(null!=a&&("none"===a||"books"===a))||a===this.options.case_sensitive)return this;
this.options.case_sensitive=a;this.regexps.books=this.regexps.get_books(this.options.include_apocrypha,a);return this};l.prototype.replace_control_characters=function(a){a=a.replace(this.regexps.control," ");"replace"===this.options.non_latin_digits_strategy&&(a=a.replace(/[\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b660\u0c66\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946\u19d0\u1a80\u1a90\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\ua9d0\uaa50\uabf0\uff10]/g,"0"),a=a.replace(/[\u0661\u06f1\u07c1\u0967\u09e7\u0a67\u0ae7\u0b67\u0be7\u0c67\u0ce7\u0d67\u0e51\u0ed1\u0f21\u1041\u1091\u17e1\u1811\u1947\u19d1\u1a81\u1a91\u1b51\u1bb1\u1c41\u1c51\ua621\ua8d1\ua901\ua9d1\uaa51\uabf1\uff11]/g,
"1"),a=a.replace(/[\u0662\u06f2\u07c2\u0968\u09e8\u0a68\u0ae8\u0b68\u0be8\u0c68\u0ce8\u0d68\u0e52\u0ed2\u0f22\u1042\u1092\u17e2\u1812\u1948\u19d2\u1a82\u1a92\u1b52\u1bb2\u1c42\u1c52\ua622\ua8d2\ua902\ua9d2\uaa52\uabf2\uff12]/g,"2"),a=a.replace(/[\u0663\u06f3\u07c3\u0969\u09e9\u0a69\u0ae9\u0b69\u0be9\u0c69\u0ce9\u0d69\u0e53\u0ed3\u0f23\u1043\u1093\u17e3\u1813\u1949\u19d3\u1a83\u1a93\u1b53\u1bb3\u1c43\u1c53\ua623\ua8d3\ua903\ua9d3\uaa53\uabf3\uff13]/g,"3"),a=a.replace(/[\u0664\u06f4\u07c4\u096a\u09ea\u0a6a\u0aea\u0b6a\u0bea\u0c6a\u0cea\u0d6a\u0e54\u0ed4\u0f24\u1044\u1094\u17e4\u1814\u194a\u19d4\u1a84\u1a94\u1b54\u1bb4\u1c44\u1c54\ua624\ua8d4\ua904\ua9d4\uaa54\uabf4\uff14]/g,
"4"),a=a.replace(/[\u0665\u06f5\u07c5\u096b\u09eb\u0a6b\u0aeb\u0b6b\u0beb\u0c6b\u0ceb\u0d6b\u0e55\u0ed5\u0f25\u1045\u1095\u17e5\u1815\u194b\u19d5\u1a85\u1a95\u1b55\u1bb5\u1c45\u1c55\ua625\ua8d5\ua905\ua9d5\uaa55\uabf5\uff15]/g,"5"),a=a.replace(/[\u0666\u06f6\u07c6\u096c\u09ec\u0a6c\u0aec\u0b6c\u0bec\u0c6c\u0cec\u0d6c\u0e56\u0ed6\u0f26\u1046\u1096\u17e6\u1816\u194c\u19d6\u1a86\u1a96\u1b56\u1bb6\u1c46\u1c56\ua626\ua8d6\ua906\ua9d6\uaa56\uabf6\uff16]/g,"6"),a=a.replace(/[\u0667\u06f7\u07c7\u096d\u09ed\u0a6d\u0aed\u0b6d\u0bed\u0c6d\u0ced\u0d6d\u0e57\u0ed7\u0f27\u1047\u1097\u17e7\u1817\u194d\u19d7\u1a87\u1a97\u1b57\u1bb7\u1c47\u1c57\ua627\ua8d7\ua907\ua9d7\uaa57\uabf7\uff17]/g,
"7"),a=a.replace(/[\u0668\u06f8\u07c8\u096e\u09ee\u0a6e\u0aee\u0b6e\u0bee\u0c6e\u0cee\u0d6e\u0e58\u0ed8\u0f28\u1048\u1098\u17e8\u1818\u194e\u19d8\u1a88\u1a98\u1b58\u1bb8\u1c48\u1c58\ua628\ua8d8\ua908\ua9d8\uaa58\uabf8\uff18]/g,"8"),a=a.replace(/[\u0669\u06f9\u07c9\u096f\u09ef\u0a6f\u0aef\u0b6f\u0bef\u0c6f\u0cef\u0d6f\u0e59\u0ed9\u0f29\u1049\u1099\u17e9\u1819\u194f\u19d9\u1a89\u1a99\u1b59\u1bb9\u1c49\u1c59\ua629\ua8d9\ua909\ua9d9\uaa59\uabf9\uff19]/g,"9"));return a};l.prototype.match_books=function(a){var e,
b,c,f,n;b=[];n=this.regexps.books;c=0;for(f=n.length;c<f;c++)e=n[c],a=a.replace(e.regexp,function(a,c,f){b.push({value:f,parsed:e.osis});return""+c+"\u001f"+(b.length-1)+(null!=e.extra?"/"+e.extra:"")+"\u001f"});a=a.replace(this.regexps.translations,function(a){b.push({value:a,parsed:a.toLowerCase()});return"\u001e"+(b.length-1)+"\u001e"});return[a,this.get_book_indices(b,a)]};l.prototype.get_book_indices=function(a,e){var b,c,f;b=0;for(f=/([\x1f\x1e])(\d+)(?:\/[a-z])?\1/g;c=f.exec(e);)a[c[2]].start_index=
c.index+b,b+=a[c[2]].value.length-c[0].length;return a};l.prototype.match_passages=function(a){var e,b,c,f,n;for(n=[];c=this.regexps.escaped_passage.exec(a);)b=c[0],f=c[1],e=c[2],c.index+=b.length-f.length,/\s[2-9]\d\d\s*$|\s\d{4,}\s*$/.test(f)&&(b=/\s+\d+\s*$/,f=f.replace(b,"")),/[\d\x1f\x1e)]$/.test(f)||(f=this.replace_match_end(f)),"delete"===this.options.captive_end_digits_strategy&&(c=c.index+f.length,a.length>c&&/^\w/.test(a.substr(c,1))&&(f=f.replace(/[\s*]+\d+$/,"")),f=f.replace(/(\x1e[)\]]?)[\s*]*\d+$/,
"$1")),f=f.replace(/[A-Z]+/g,function(a){return a.toLowerCase()}),c=f.substr(0,1==="\u001f")?0:f.split("\u001f")[0].length,f={value:ha.parse(f),type:"base",start_index:this.passage.books[e].start_index-c,match:f},"full"===this.options.book_alone_strategy&&(1===f.value.length&&"b"===f.value[0].type&&0===c&&1===this.passage.books[e].parsed.length&&/^[234]/.test(this.passage.books[e].parsed[0]))&&this.create_book_range(a,f,e),n.push(f);return n};l.prototype.replace_match_end=function(a){var e,b;for(b=
a.length;e=this.regexps.match_end_split.exec(a);)b=e.index+e[0].length;b<a.length&&(a=a.substr(0,b));return a};l.prototype.create_book_range=function(a,e,b){var c,f,n,h,k;c=[l.prototype.regexps.first,l.prototype.regexps.second,l.prototype.regexps.third];n=parseInt(this.passage.books[b].parsed[0].substr(0,1),10);for(f=k=1;1<=n?k<n:k>n;f=1<=n?++k:--k)if(h=f===n-1?l.prototype.regexps.range_and:l.prototype.regexps.range_only,h=a.match(RegExp("(?:^|\\W)("+c[f-1]+"\\s*"+h+"\\s*)\\x1f"+b+"\\x1f","i")),null!=
h)return this.add_book_range_object(e,h,f);return!1};l.prototype.add_book_range_object=function(a,e,b){var c;c=e[1].length;a.value[0]={type:"b_range_pre",value:[{type:"b_pre",value:b.toString(),indices:[e.index,e.index+c]},a.value[0]],indices:[0,a.value[0].indices[1]+c]};a.value[0].value[1].indices[0]+=c;a.value[0].value[1].indices[1]+=c;a.start_index-=c;return a.match=e[1]+a.match};l.prototype.osis=function(){var a,e,b,c,f;e=[];f=this.parsed_entities();b=0;for(c=f.length;b<c;b++)a=f[b],0<a.osis.length&&
e.push(a.osis);return e.join(",")};l.prototype.osis_and_translations=function(){var a,e,b,c,f;e=[];f=this.parsed_entities();b=0;for(c=f.length;b<c;b++)a=f[b],0<a.osis.length&&e.push([a.osis,a.translations.join(",")]);return e};l.prototype.osis_and_indices=function(){var a,e,b,c,f;e=[];f=this.parsed_entities();b=0;for(c=f.length;b<c;b++)a=f[b],0<a.osis.length&&e.push({osis:a.osis,translations:a.translations,indices:a.indices});return e};l.prototype.parsed_entities=function(){var a,e,b,c,f,n,h,k,j,
p,l,t,r;n=[];e=p=0;for(t=this.entities.length;0<=t?p<t:p>t;e=0<=t?++p:--p)if(a=this.entities[e],a.type&&("translation_sequence"===a.type&&0<n.length&&e===n[n.length-1].entity_id+1)&&(n[n.length-1].indices[1]=a.absolute_indices[1]),null!=a.passages&&!(("b"===a.type||"b_range"===a.type)&&"ignore"===this.options.book_alone_strategy)){j=[];k=null;if(null!=a.passages[0].translations){l=a.passages[0].translations;c=0;for(h=l.length;c<h;c++)f=l[c],b=0<(null!=(r=f.osis)?r.length:void 0)?f.osis:"",null==k&&
(k=f.alias),j.push(b)}else j=[""],k="default";f=[];c=a.passages.length;for(b=l=0;0<=c?l<c:l>c;b=0<=c?++l:--l){h=a.passages[b];null==h.type&&(h.type=a.type);if(!1===h.valid.valid&&("ignore"===this.options.invalid_sequence_strategy&&"sequence"===a.type&&this.snap_sequence("ignore",a,f,b,c),"ignore"===this.options.invalid_passage_strategy))continue;("b"===h.type||"b_range"===h.type)&&"ignore"===this.options.book_sequence_strategy&&"sequence"===a.type?this.snap_sequence("book",a,f,b,c):(null==h.absolute_indices&&
(h.absolute_indices=a.absolute_indices),f.push({osis:h.valid.valid?this.to_osis(h.start,h.end,k):"",type:h.type,indices:h.absolute_indices,translations:j,start:h.start,end:h.end,enclosed_indices:h.enclosed_absolute_indices,entity_id:e,entities:[h]}))}if(0!==f.length)if(1<f.length&&"combine"===this.options.consecutive_combination_strategy&&(f=this.combine_consecutive_passages(f,k)),"separate"===this.options.sequence_combination_strategy)n=n.concat(f);else{k=[];b=f.length-1;null!=f[b].enclosed_indices&&
0<=f[b].enclosed_indices[1]&&(a.absolute_indices[1]=f[b].enclosed_indices[1]);c=0;for(h=f.length;c<h;c++)b=f[c],0<b.osis.length&&k.push(b.osis);n.push({osis:k.join(","),indices:a.absolute_indices,translations:j,entity_id:e,entities:f})}}return n};l.prototype.to_osis=function(a,e,b){var c;null==e.c&&(null==e.v&&a.b===e.b&&null==a.c&&null==a.v&&"first_chapter"===this.options.book_alone_strategy)&&(e.c=1);null==a.c&&(a.c=1);null==a.v&&(a.v=1);null==e.c&&(e.c=this.passage.translations[b].chapters[e.b].length);
null==e.v&&(e.v=this.passage.translations[b].chapters[e.b][e.c-1]);this.options.include_apocrypha&&("b"===this.options.ps151_strategy&&(151===a.c&&"Ps"===a.b||151===e.c&&"Ps"===e.b))&&this.fix_ps151(a,e,b);"b"===this.options.osis_compaction_strategy&&1===a.c&&1===a.v&&e.c===this.passage.translations[b].chapters[e.b].length&&e.v===this.passage.translations[b].chapters[e.b][e.c-1]?(b=a.b,c=e.b):2>=this.options.osis_compaction_strategy.length&&1===a.v&&e.v===this.passage.translations[b].chapters[e.b][e.c-
1]?(b=a.b+"."+a.c.toString(),c=e.b+"."+e.c.toString()):(b=a.b+"."+a.c.toString()+"."+a.v.toString(),c=e.b+"."+e.c.toString()+"."+e.v.toString());b=b===c?b:b+"-"+c;null!=a.extra&&(b=a.extra+","+b);null!=e.extra&&(b+=","+e.extra);return b};l.prototype.fix_ps151=function(a,e,b){if(151===a.c&&"Ps"===a.b){if(151===e.c&&"Ps"===e.b)return a.b="Ps151",a.c=1,e.b="Ps151",e.c=1;a.extra=this.to_osis({b:"Ps151",c:1,v:a.v},{b:"Ps151",c:1,v:this.passage.translations[b].chapters.Ps151[0]},b);a.b="Prov";a.c=1;return a.v=
1}e.extra=this.to_osis({b:"Ps151",c:1,v:1},{b:"Ps151",c:1,v:e.v},b);e.c=150;return e.v=this.passage.translations[b].chapters.Ps[149]};l.prototype.combine_consecutive_passages=function(a,e){var b,c,f,n,h,k,j,l,u,t;j=[];l={};h=a.length-1;b=-1;c=!1;for(f=t=0;0<=h?t<=h:t>=h;f=0<=h?++t:--t)if(k=a[f],0<k.osis.length){u=j.length-1;n=!1;k.enclosed_indices[0]!==b&&(b=k.enclosed_indices[0]);if(0<=b&&(f===h||a[f+1].enclosed_indices[0]!==k.enclosed_indices[0]))c=n=!0;this.is_verse_consecutive(l,k.start,e)?(j[u].end=
k.end,j[u].is_enclosed_last=n,j[u].indices[1]=k.indices[1],j[u].enclosed_indices[1]=k.enclosed_indices[1],j[u].osis=this.to_osis(j[u].start,k.end,e)):j.push(k);l={b:k.end.b,c:k.end.c,v:k.end.v}}else j.push(k),l={};c&&this.snap_enclosed_indices(j);return j};l.prototype.snap_enclosed_indices=function(a){var e,b,c;b=0;for(c=a.length;b<c;b++)e=a[b],null!=e.is_enclosed_last&&(0>e.enclosed_indices[0]&&e.is_enclosed_last&&(e.indices[1]=e.enclosed_indices[1]),delete e.is_enclosed_last);return a};l.prototype.is_verse_consecutive=
function(a,e,b){var c;if(null==a.b)return!1;c=null!=this.passage.translations[b].order?this.passage.translations[b].order:this.passage.translations["default"].order;if(a.b===e.b)if(a.c===e.c){if(a.v===e.v-1)return!0}else{if(1===e.v&&a.c===e.c-1&&a.v===this.passage.translations[b].chapters[a.b][a.c-1])return!0}else if(1===e.c&&1===e.v&&c[a.b]===c[e.b]-1&&a.c===this.passage.translations[b].chapters[a.b].length&&a.v===this.passage.translations[b].chapters[a.b][a.c-1])return!0;return!1};l.prototype.snap_sequence=
function(a,e,b,c,f){var n;n=e.passages[c];n.absolute_indices[0]===e.absolute_indices[0]&&c<f-1&&this.get_snap_sequence_i(e.passages,c,f)!==c?(e.absolute_indices[0]=e.passages[c+1].absolute_indices[0],this.remove_absolute_indices(e.passages,c+1)):n.absolute_indices[1]===e.absolute_indices[1]&&0<c?e.absolute_indices[1]=0<b.length?b[b.length-1].indices[1]:e.passages[c-1].absolute_indices[1]:"book"===a&&(c<f-1&&!this.starts_with_book(e.passages[c+1]))&&(e.passages[c+1].absolute_indices[0]=n.absolute_indices[0]);
return e};l.prototype.get_snap_sequence_i=function(a,e,b){var c,f,n;for(c=f=n=e+1;n<=b?f<b:f>b;c=n<=b?++f:--f){if(this.starts_with_book(a[c]))return c;if(a[c].valid.valid)break}return e};l.prototype.starts_with_book=function(a){return"b"===a.type.substr(0,1)||("range"===a.type||"ff"===a.type)&&"b"===a.start.type.substr(0,1)?!0:!1};l.prototype.remove_absolute_indices=function(a,e){var b,c,f,n,h,k;if(0>a[e].enclosed_absolute_indices[0])return!1;b=a[e].enclosed_absolute_indices;f=b[0];b=b[1];k=a.slice(e);
n=0;for(h=k.length;n<h;n++)if(c=k[n],c.enclosed_absolute_indices[0]===f&&c.enclosed_absolute_indices[1]===b)c.enclosed_absolute_indices=[-1,-1];else break;return!0};this.bcv_parser=h=l;var j=function(){};j.prototype.books=[];j.prototype.indices={};j.prototype.options={};j.prototype.translations={};j.prototype.handle_array=function(a,e,b){var c,f,n;null==e&&(e=[]);null==b&&(b={});f=0;for(n=a.length;f<n;f++){c=a[f];if("stop"===c.type)break;b=this.handle_obj(c,e,b);e=b[0];b=b[1]}return[e,b]};j.prototype.handle_obj=
function(a,e,b){return null!=a.type&&null!=this[a.type]?this[a.type](a,e,b):[e,b]};j.prototype.b=function(a,e,b){var c,f,n,h,k;a.start_context=r.shallow_clone(b);a.passages=[];b=[];k=this.books[a.value].parsed;n=0;for(h=k.length;n<h;n++)c=k[n],f=this.validate_ref(a.start_context.translations,{b:c}),c={start:{b:c},end:{b:c},valid:f},0===a.passages.length&&f.valid?a.passages.push(c):b.push(c);0===a.passages.length&&a.passages.push(b.shift());0<b.length&&(a.passages[0].alternates=b);null!=a.start_context.translations&&
(a.passages[0].translations=a.start_context.translations);null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));e.push(a);b={b:a.passages[0].start.b};null!=a.start_context.translations&&(b.translations=a.start_context.translations);return[e,b]};j.prototype.b_range=function(a,e,b){return this.range(a,e,b)};j.prototype.b_range_pre=function(a,e,b){var c,f;a.start_context=r.shallow_clone(b);a.passages=[];c=this.pluck("b",a.value);b=this.b(c,[],b);c=b[0][0];b=b[1];null==a.absolute_indices&&
(a.absolute_indices=this.get_absolute_indices(a.indices));f={b:a.value[0].value+c.passages[0].start.b.substr(1),type:"b"};a.passages=[{start:f,end:c.passages[0].end,valid:c.passages[0].valid}];null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);e.push(a);return[e,b]};j.prototype.base=function(a,e,b){this.indices=this.calculate_indices(a.match,a.start_index);return this.handle_array(a.value,e,b)};j.prototype.bc=function(a,e,b){var c,f,n,h,k,j,l,u,t;a.start_context=
r.shallow_clone(b);a.passages=[];this.reset_context(b,["b","c","v"]);n=this.pluck("c",a.value).value;c=[];t=this.books[this.pluck("b",a.value).value].parsed;l=0;for(u=t.length;l<u;l++)f=t[l],h="c",j=this.validate_ref(a.start_context.translations,{b:f,c:n}),k={start:{b:f},end:{b:f},valid:j},j.messages.start_chapter_not_exist_in_single_chapter_book&&(k.valid=this.validate_ref(a.start_context.translations,{b:f,v:n}),k.start.c=1,k.end.c=1,h="v"),k.start[h]=n,f=this.fix_start_zeroes(k.valid,k.start.c,
k.start.v),k.start.c=f[0],k.start.v=f[1],k.end[h]=k.start[h],0===a.passages.length&&k.valid.valid?a.passages.push(k):c.push(k);0===a.passages.length&&a.passages.push(c.shift());0<c.length&&(a.passages[0].alternates=c);null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));this.set_context_from_object(b,["b","c","v"],a.passages[0].start);e.push(a);return[e,b]};j.prototype.bc_title=
function(a,e,b){var c,f,n,h;a.start_context=r.shallow_clone(b);b=this.bc(this.pluck("bc",a.value),[],b);c=b[0][0];b=b[1];if("Ps"!==c.passages[0].start.b.substr(0,2)&&null!=c.passages[0].alternates){f=n=0;for(h=c.passages[0].alternates.length;0<=h?n<h:n>h;f=0<=h?++n:--n)if("Ps"===c.passages[0].alternates[f].start.b.substr(0,2)){c.passages[0]=c.passages[0].alternates[f];break}}if("Ps"!==c.passages[0].start.b.substr(0,2))return e.push(c),[e,b];this.books[this.pluck("b",c.value).value].parsed=["Ps"];
c=this.pluck("title",a.value);a.value[1]={type:"v",value:[{type:"integer",value:1,indices:c.indices}],indices:c.indices};a.original_type="bc_title";a.type="bcv";return this.bcv(a,e,a.start_context)};j.prototype.bcv=function(a,e,b){var c,f,n,h,k,j,l,u;a.start_context=r.shallow_clone(b);a.passages=[];this.reset_context(b,["b","c","v"]);n=this.pluck("bc",a.value);h=this.pluck("c",n.value).value;k=this.pluck("v",a.value).value;c=[];u=this.books[this.pluck("b",n.value).value].parsed;j=0;for(l=u.length;j<
l;j++)f=u[j],n=this.validate_ref(a.start_context.translations,{b:f,c:h,v:k}),k=this.fix_start_zeroes(n,h,k),h=k[0],k=k[1],f={start:{b:f,c:h,v:k},end:{b:f,c:h,v:k},valid:n},0===a.passages.length&&n.valid?a.passages.push(f):c.push(f);0===a.passages.length&&a.passages.push(c.shift());0<c.length&&(a.passages[0].alternates=c);null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));
this.set_context_from_object(b,["b","c","v"],a.passages[0].start);e.push(a);return[e,b]};j.prototype.bv=function(a,e,b){var c;a.start_context=r.shallow_clone(b);c=a.value;c={indices:a.indices,value:[{type:"bc",value:[c[0],{type:"c",value:[{type:"integer",value:1}]}]},c[1]]};b=this.bcv(c,[],b);c=b[0][0];b=b[1];a.passages=c.passages;null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));
e.push(a);return[e,b]};j.prototype.c=function(a,e,b){var c,f;a.start_context=r.shallow_clone(b);c="integer"===a.type?a.value:this.pluck("integer",a.value).value;f=this.validate_ref(a.start_context.translations,{b:b.b,c:c});if(!f.valid&&f.messages.start_chapter_not_exist_in_single_chapter_book)return this.v(a,e,b);c=this.fix_start_zeroes(f,c)[0];a.passages=[{start:{b:b.b,c:c},end:{b:b.b,c:c},valid:f}];null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);e.push(a);
b.c=c;this.reset_context(b,["v"]);null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));return[e,b]};j.prototype.c_psalm=function(a,e,b){var c;a.original_type=a.type;a.original_value=a.value;a.type="bc";c=parseInt(this.books[a.value].value.match(/^\d+/)[0],10);a.value=[{type:"b",value:a.original_value,indices:a.indices},{type:"c",value:[{type:"integer",value:c,indices:a.indices}],indices:a.indices}];return this.bc(a,e,b)};j.prototype.c_title=function(a,e,b){a.start_context=
r.shallow_clone(b);if("Ps"!==b.b)return this.c(a.value[0],e,b);b=this.pluck("title",a.value);a.value[1]={type:"v",value:[{type:"integer",value:1,indices:b.indices}],indices:b.indices};a.original_type="c_title";a.type="cv";return this.cv(a,e,a.start_context)};j.prototype.cv=function(a,e,b){var c,f,h;a.start_context=r.shallow_clone(b);c=this.pluck("c",a.value).value;f=this.pluck("v",a.value).value;h=this.validate_ref(a.start_context.translations,{b:b.b,c:c,v:f});f=this.fix_start_zeroes(h,c,f);c=f[0];
f=f[1];a.passages=[{start:{b:b.b,c:c,v:f},end:{b:b.b,c:c,v:f},valid:h}];null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);e.push(a);b.c=c;b.v=f;null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));return[e,b]};j.prototype.cb_range=function(a,e,b){var c,f,h;a.original_type=a.type;a.type="range";f=a.value;c=f[0];h=f[1];f=f[2];a.original_value=[c,h,f];a.value=[{type:"bc",value:[c,h],indices:a.indices},f];f.indices[1]=a.indices[1];
return this.range(a,e,b)};j.prototype.cv_psalm=function(a,e,b){var c,f;a.start_context=r.shallow_clone(b);a.original_type=a.type;f=a.original_value=a.value;c=f[0];f=f[1];a.type="bcv";c=this.c_psalm(c,[],a.start_context)[0][0];a.value=[c,f];return this.bcv(a,e,b)};j.prototype.ff=function(a,e,b){a.start_context=r.shallow_clone(b);a.value.push({type:"integer",indices:a.indices,value:999});b=this.range(a,[],a.start_context);a=b[0][0];b=b[1];a.value.pop();null!=a.passages[0].valid.end_verse_not_exist&&
delete a.passages[0].valid.end_verse_not_exist;null!=a.passages[0].valid.end_chapter_not_exist&&delete a.passages[0].valid.end_chapter_not_exist;null!=a.passages[0].end.original_c&&delete a.passages[0].end.original_c;e.push(a);null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));return[e,b]};j.prototype.integer_title=function(a,e,b){a.start_context=r.shallow_clone(b);if("Ps"!==b.b)return this.integer(a.value[0],e,b);a.value[0]={type:"c",value:[a.value[0]],indices:[a.value[0].indices[0],
a.value[0].indices[1]]};b=[a.indices[1]-5,a.indices[1]];a.value[1]={type:"v",value:[{type:"integer",value:1,indices:b}],indices:b};a.original_type="integer_title";a.type="cv";return this.cv(a,e,a.start_context)};j.prototype.integer=function(a,e,b){return null!=b.v?this.v(a,e,b):this.c(a,e,b)};j.prototype.sequence=function(a,e,b){var c,f,h,j,k,l,p,u;a.start_context=r.shallow_clone(b);a.passages=[];p=a.value;h=0;for(k=p.length;h<k;h++){c=p[h];b=this.handle_array(c,[],b);c=b[0];c=c[0];b=b[1];u=c.passages;
j=0;for(l=u.length;j<l;j++)f=u[j],null==f.type&&(f.type=c.type),null==f.absolute_indices&&(f.absolute_indices=c.absolute_indices),null!=c.start_context.translations&&(f.translations=c.start_context.translations),f.enclosed_absolute_indices="sequence_post_enclosed"===c.type?c.absolute_indices:[-1,-1],a.passages.push(f)}null==a.absolute_indices&&(a.absolute_indices=0<a.passages.length&&"sequence"===a.type?[a.passages[0].absolute_indices[0],a.passages[a.passages.length-1].absolute_indices[1]]:this.get_absolute_indices(a.indices));
e.push(a);return[e,b]};j.prototype.sequence_post_enclosed=function(a,e,b){return this.sequence(a,e,b)};j.prototype.v=function(a,e,b){var c,f,h;f="integer"===a.type?a.value:this.pluck("integer",a.value).value;a.start_context=r.shallow_clone(b);c=null!=b.c?b.c:1;h=this.validate_ref(a.start_context.translations,{b:b.b,c:c,v:f});f=this.fix_start_zeroes(h,0,f)[1];a.passages=[{start:{b:b.b,c:c,v:f},end:{b:b.b,c:c,v:f},valid:h}];null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);
null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));e.push(a);b.v=f;return[e,b]};j.prototype.range=function(a,e,b){var c,f,h,j,k;a.start_context=r.shallow_clone(b);f=a.value;h=f[0];c=f[1];if("v"===c.type&&("bc"===h.type||"c"===h.type)&&"verse"===this.options.end_range_digits_strategy)return this.range_change_integer_end(a,e);b=this.handle_obj(h,[],b);h=b[0][0];b=b[1];b=this.handle_obj(c,[],b);c=b[0][0];b=b[1];a.value=[h,c];a.indices=[h.indices[0],c.indices[1]];delete a.absolute_indices;
j={b:h.passages[0].start.b,c:h.passages[0].start.c,v:h.passages[0].start.v,type:h.type};f={b:c.passages[0].end.b,c:c.passages[0].end.c,v:c.passages[0].end.v,type:c.type};c.passages[0].valid.messages.start_chapter_is_zero&&(f.c=0);c.passages[0].valid.messages.start_verse_is_zero&&(f.v=0);k=this.validate_ref(a.start_context.translations,j,f);if(k.valid){if(c=this.range_handle_valid(k,a,h,j,c,f,e),h=c[0],c=c[1],h)return c}else return this.range_handle_invalid(k,a,h,j,c,f,e);null==a.absolute_indices&&
(a.absolute_indices=this.get_absolute_indices(a.indices));a.passages=[{start:j,end:f,valid:k}];null!=a.start_context.translations&&(a.passages[0].translations=a.start_context.translations);e.push(a);return[e,b]};j.prototype.range_change_end=function(a,e,b){var c;c=a.value[1];"integer"===c.type?(c.original_value=c.value,c.value=b):"v"===c.type?(c=this.pluck("integer",c.value),c.original_value=c.value,c.value=b):"cv"===c.type&&(c=this.pluck("c",c.value),c.original_value=c.value,c.value=b);return this.handle_obj(a,
e,a.start_context)};j.prototype.range_change_integer_end=function(a,e){var b,c;b=a.value;c=b[0];b=b[1];a.original_type=a.type;a.original_value=[c,b];a.type="integer"===c.type?"cv":c.type+"v";"integer"===c.type&&(a.value[0]={type:"c",value:[c],indices:c.indices});"integer"===b.type&&(a.value[1]={type:"v",value:[b],indices:b.indices});return this.handle_obj(a,e,a.start_context)};j.prototype.range_change_cv_end=function(a,e){var b,c,f;b=a.value;f=b[0];b=b[1];a.original_type=a.type;a.original_value=[f,
b];a.type="sequence";c=b.value;b=c[0];c=c[1];b=r.shallow_clone(b);b.original_type=b.type;b.type="v";a.value=[[{type:"range",value:[f,b],indices:[f.indices[0],b.indices[1]]}],[c]];return this.sequence(a,e,a.start_context)};j.prototype.range_validate=function(a,e,b,c){a.messages.end_chapter_not_exist?(b.original_c=b.c,b.c=a.messages.end_chapter_not_exist,null!=b.v&&(b.v=this.validate_ref(c.start_context.translations,{b:b.b,c:b.c,v:999}).messages.end_verse_not_exist)):a.messages.end_verse_not_exist&&
(b.original_v=b.v,b.v=a.messages.end_verse_not_exist);a.messages.end_verse_is_zero&&"allow"!==this.options.zero_verse_strategy&&(b.v=a.messages.end_verse_is_zero);a.messages.end_chapter_is_zero&&(b.c=a.messages.end_chapter_is_zero);a=this.fix_start_zeroes(a,e.c,e.v);e.c=a[0];e.v=a[1];return!0};j.prototype.range_check_new_end=function(a,e,b,c){var f,h;f=0;h=null;c.messages.end_chapter_before_start?h="c":c.messages.end_verse_before_start&&(h="v");null!=h&&(f=this.range_get_new_end_value(e,b,c,h));0<
f&&(e={b:b.b,c:b.c,v:b.v},e[h]=f,a=this.validate_ref(a,e),a.valid||(f=0));return f};j.prototype.range_get_new_end_value=function(a,e,b,c){var f;f=0;if("c"===c&&b.messages.end_chapter_is_zero||"v"===c&&b.messages.end_verse_is_zero)return f;10<=a[c]&&10>e[c]&&a[c]-10*Math.floor(a[c]/10)<e[c]?f=e[c]+10*Math.floor(a[c]/10):100<=a[c]&&(100>e[c]&&a[c]-100<e[c])&&(f=e[c]+100);return f};j.prototype.range_handle_valid=function(a,e,b,c,f,h,j){if(a.messages.end_chapter_not_exist&&"verse"===this.options.end_range_digits_strategy&&
null==c.v&&("integer"===f.type||"v"===f.type))if(b="v"===f.type?this.pluck("integer",f.value):f.value,b=this.validate_ref(e.start_context.translations,{b:c.b,c:c.c,v:b}),b.valid)return[!0,this.range_change_integer_end(e,j)];if(a.messages.end_chapter_not_exist&&("verse"===this.options.end_range_digits_strategy&&null!=c.v&&"cv"===f.type)&&(b=this.validate_ref(e.start_context.translations,{b:h.b,c:c.c,v:h.c}),b.valid&&(b=this.validate_ref(e.start_context.translations,{b:h.b,c:c.c,v:h.v})),b.valid))return[!0,
this.range_change_cv_end(e,j)];this.range_validate(a,c,h,e);return[!1,null]};j.prototype.range_handle_invalid=function(a,e,b,c,f,h,j){if((a.messages.end_chapter_before_start||a.messages.end_verse_before_start)&&("integer"===f.type||"v"===f.type)||a.messages.end_chapter_before_start&&"cv"===f.type)if(a=this.range_check_new_end(e.start_context.translations,c,h,a),0<a)return this.range_change_end(e,j,a);if("verse"===this.options.end_range_digits_strategy&&void 0===c.v&&("integer"===f.type||"v"===f.type))if(a=
"v"===f.type?this.pluck("integer",f.value):f.value,c=this.validate_ref(e.start_context.translations,{b:c.b,c:c.c,v:a}),c.valid)return this.range_change_integer_end(e,j);c=[e.type,"sequence"];e.original_type=c[0];e.type=c[1];b=[[b,f],[[b],[f]]];e.original_value=b[0];e.value=b[1];return this.handle_obj(e,j,e.start_context)};j.prototype.translation_sequence=function(a,e,b){var c,f,h,j,k;f=[];f.push({translation:this.books[a.value[0].value].parsed});k=a.value[1];h=0;for(j=k.length;h<j;h++)c=k[h],c=this.books[this.pluck("translation",
c).value].parsed,null!=c&&f.push({translation:c});h=0;for(j=f.length;h<j;h++)c=f[h],null!=this.translations.aliases[c.translation]?(c.alias=this.translations.aliases[c.translation].alias,c.osis=this.translations.aliases[c.translation].osis):(c.alias="default",c.osis=c.translation.toUpperCase());if(0<e.length){h=0;for(c=j=k=e.length-1;0>=k?0>=j:0<=j;c=0>=k?++j:--j)if(null!=e[c].original_type&&(e[c].type=e[c].original_type),null!=e[c].original_value&&(e[c].value=e[c].original_value),"translation_sequence"===
e[c].type){h=c+1;break}h<e.length&&(e[h].start_context.translations=f,b=this.handle_array(e.slice(h),[],e[h].start_context),b=b[1])}null==a.absolute_indices&&(a.absolute_indices=this.get_absolute_indices(a.indices));e.push(a);this.reset_context(b,["translations"]);return[e,b]};j.prototype.pluck=function(a,e){var b,c,f;c=0;for(f=e.length;c<f;c++)if(b=e[c],null!=b.type&&b.type===a)return"c"===a||"v"===a?this.pluck("integer",b.value):b;return null};j.prototype.set_context_from_object=function(a,e,b){var c,
f,h,j;j=[];f=0;for(h=e.length;f<h;f++)c=e[f],null!=b[c]&&j.push(a[c]=b[c]);return j};j.prototype.reset_context=function(a,e){var b,c,f,h;h=[];c=0;for(f=e.length;c<f;c++)b=e[c],h.push(delete a[b]);return h};j.prototype.fix_start_zeroes=function(a,e,b){a.valid&&(a.messages.start_chapter_is_zero&&(e=a.messages.start_chapter_is_zero),a.messages.start_verse_is_zero&&"allow"!==this.options.zero_verse_strategy&&(b=a.messages.start_verse_is_zero));return[e,b]};j.prototype.calculate_indices=function(a,e){var b,
c,f,h,j,k,l,p,u,t,r,B;l="book";c=[];f=0;e=parseInt(e,10);k=[a];B=["\u001e","\u001f"];p=0;for(t=B.length;p<t;p++){b=B[p];j=[];u=0;for(r=k.length;u<r;u++)h=k[u],j=j.concat(h.split(b));k=j}p=0;for(u=k.length;p<u;p++)h=k[p],l="book"===l?"rest":"book",j=h.length,0!==j&&("book"===l?(h=h.replace(/\/[a-z]$/,""),b=f+j,0<c.length&&c[c.length-1].index===e?c[c.length-1].end=b:c.push({start:f,end:b,index:e}),f+=j+2,e=this.books[h].start_index+this.books[h].value.length-f,c.push({start:b+1,end:b+1,index:e})):(b=
f+j-1,0<c.length&&c[c.length-1].index===e?c[c.length-1].end=b:c.push({start:f,end:b,index:e}),f+=j));return c};j.prototype.get_absolute_indices=function(a){var e,b,c,f,h,j,k;c=a[0];a=a[1];e=f=null;k=this.indices;h=0;for(j=k.length;h<j;h++)if(b=k[h],null===f&&(b.start<=c&&c<=b.end)&&(f=c+b.index),b.start<=a&&a<=b.end){e=a+b.index+1;break}return[f,e]};j.prototype.validate_ref=function(a,e,b){var c,f;a||(a=[{translation:"default",osis:"",alias:"default"}]);f=a[0];if(null==f)return{valid:!1,messages:{translation_invalid:!0}};
c={};null==f.alias&&(f.alias="default");if(null==f.alias)return{valid:!1,messages:{translation_invalid:!0}};null==this.translations.aliases[f.alias]&&(f.alias="default",c.translation_unknown=!0);c=this.validate_start_ref(f.alias,e,!0,c);a=c[0];c=c[1];b&&(e=this.validate_end_ref(f.alias,e,b,a,c),a=e[0],c=e[1]);return{valid:a,messages:c}};j.prototype.validate_start_ref=function(a,e,b,c){var f,h;"default"!==a&&null==(null!=(f=this.translations[a])?f.chapters[e.b]:void 0)&&this.promote_book_to_translation(e.b,
a);f=null!=(null!=(h=this.translations[a])?h.order:void 0)?a:"default";if(null!=this.translations[f].order[e.b]){null==e.c&&(e.c=1);e.c=parseInt(e.c,10);if(isNaN(e.c))return c.start_chapter_not_numeric=!0,[!1,c];0===e.c&&(c.start_chapter_is_zero=1,"error"===this.options.zero_chapter_strategy?b=!1:e.c=1);0<e.c&&null!=this.translations[a].chapters[e.b][e.c-1]?null!=e.v&&(e.v=parseInt(e.v,10),isNaN(e.v)?(b=!1,c.start_verse_not_numeric=!0):0===e.v?(c.start_verse_is_zero=1,"error"===this.options.zero_verse_strategy?
b=!1:"upgrade"===this.options.zero_verse_strategy&&(e.v=1)):e.v>this.translations[a].chapters[e.b][e.c-1]&&(b=!1,c.start_verse_not_exist=this.translations[a].chapters[e.b][e.c-1])):(b=!1,1!==e.c&&1===this.translations[a].chapters[e.b].length?c.start_chapter_not_exist_in_single_chapter_book=1:0<e.c&&(c.start_chapter_not_exist=this.translations[a].chapters[e.b].length))}else b=!1,c.start_book_not_exist=!0;return[b,c]};j.prototype.validate_end_ref=function(a,e,b,c,f){var h,j;"default"!==a&&null==(null!=
(h=this.translations[a])?h.chapters[b.b]:void 0)&&this.promote_book_to_translation(b.b,a);h=null!=(null!=(j=this.translations[a])?j.order:void 0)?a:"default";null!=b.c&&(b.c=parseInt(b.c,10));null!=b.v&&(b.v=parseInt(b.v,10));null!=b.c&&(!isNaN(b.c)&&0===b.c)&&(f.end_chapter_is_zero=1,"error"===this.options.zero_chapter_strategy?c=!1:b.c=1);null!=this.translations[h].order[b.b]?(null!=this.translations[h].order[e.b]&&this.translations[h].order[e.b]>this.translations[h].order[b.b]&&(c=!1,f.end_book_before_start=
!0),e.b===b.b&&(null!=b.c&&!isNaN(b.c))&&(null==e.c&&(e.c=1),!isNaN(parseInt(e.c,10))&&e.c>b.c?(c=!1,f.end_chapter_before_start=!0):e.c===b.c&&(null!=b.v&&!isNaN(b.v))&&(null==e.v&&(e.v=1),!isNaN(parseInt(e.v,10))&&e.v>b.v&&(c=!1,f.end_verse_before_start=!0))),null!=b.c&&!isNaN(b.c)&&null==this.translations[a].chapters[b.b][b.c-1]&&(1===this.translations[a].chapters[b.b].length?f.end_chapter_not_exist_in_single_chapter_book=1:0<b.c&&(f.end_chapter_not_exist=this.translations[a].chapters[b.b].length)),
null!=b.v&&!isNaN(b.v)&&(null==b.c&&(b.c=this.translations[a].chapters[b.b].length),b.v>this.translations[a].chapters[b.b][b.c-1]?f.end_verse_not_exist=this.translations[a].chapters[b.b][b.c-1]:0===b.v&&(f.end_verse_is_zero=1,"error"===this.options.zero_verse_strategy?c=!1:"upgrade"===this.options.zero_verse_strategy&&(b.v=1)))):(c=!1,f.end_book_not_exist=!0);null!=b.c&&isNaN(b.c)&&(c=!1,f.end_chapter_not_numeric=!0);null!=b.v&&isNaN(b.v)&&(c=!1,f.end_verse_not_numeric=!0);return[c,f]};j.prototype.promote_book_to_translation=
function(a,e){var b,c,f;if(null==(b=this.translations)[e])b[e]={};if(null==(b=this.translations[e]).chapters)b.chapters={};return null!=(null!=(c=this.translations.alternates[e])?null!=(f=c.chapters)?f[a]:void 0:void 0)?this.translations[e].chapters[a]=this.translations.alternates[e].chapters[a]:this.translations[e].chapters[a]=r.shallow_clone_array(this.translations["default"].chapters[a])};ga=j;r={shallow_clone:function(a){var e,b,c;if(null==a)return a;b={};for(e in a)P.call(a,e)&&(c=a[e],b[e]=
c);return b},shallow_clone_array:function(a){var e,b,c,f;if(null==a)return a;b=[];e=c=0;for(f=a.length;0<=f?c<=f:c>=f;e=0<=f?++c:--c)"undefined"!==typeof a[e]&&(b[e]=a[e]);return b}};h.prototype.regexps.translations=/(?:AMP|ASV|CE[BV]|E[RS]V|HCSB|N?KJV|MSG|NAB(?:RE)?|NASB?|NIR?V|NLT|N?RSV|TNIV)\b/gi;h.prototype.translations={aliases:{ceb:{osis:"CEB",alias:"ceb"},kjv:{osis:"KJV",alias:"kjv"},nab:{osis:"NAB",alias:"nab"},nas:{osis:"NASB",alias:"default"},nirv:{osis:"NIrV",alias:"kjv"},niv:{osis:"NIV",
alias:"kjv"},nkjv:{osis:"NKJV",alias:"nkjv"},nlt:{osis:"NLT",alias:"nlt"},nrsv:{osis:"NRSV",alias:"nrsv"},"default":{osis:"",alias:"default"}},"default":{order:{Gen:1,Exod:2,Lev:3,Num:4,Deut:5,Josh:6,Judg:7,Ruth:8,"1Sam":9,"2Sam":10,"1Kgs":11,"2Kgs":12,"1Chr":13,"2Chr":14,Ezra:15,Neh:16,Esth:17,Job:18,Ps:19,Prov:20,Eccl:21,Song:22,Isa:23,Jer:24,Lam:25,Ezek:26,Dan:27,Hos:28,Joel:29,Amos:30,Obad:31,Jonah:32,Mic:33,Nah:34,Hab:35,Zeph:36,Hag:37,Zech:38,Mal:39,Matt:40,Mark:41,Luke:42,John:43,Acts:44,Rom:45,
"1Cor":46,"2Cor":47,Gal:48,Eph:49,Phil:50,Col:51,"1Thess":52,"2Thess":53,"1Tim":54,"2Tim":55,Titus:56,Phlm:57,Heb:58,Jas:59,"1Pet":60,"2Pet":61,"1John":62,"2John":63,"3John":64,Jude:65,Rev:66,Tob:67,Jdt:68,GkEsth:69,Wis:70,Sir:71,Bar:72,PrAzar:73,Sus:74,Bel:75,SgThree:76,EpJer:77,"1Macc":78,"2Macc":79,"3Macc":80,"4Macc":81,"1Esd":82,"2Esd":83,PrMan:84,Ps151:85},chapters:{Gen:[31,25,24,26,32,22,24,22,29,32,32,20,18,24,21,16,27,33,38,18,34,24,20,67,34,35,46,22,35,43,55,32,20,31,29,43,36,30,23,23,57,
38,34,34,28,34,31,22,33,26],Exod:[22,25,22,31,23,30,25,32,35,29,10,51,22,31,27,36,16,27,25,26,36,31,33,18,40,37,21,43,46,38,18,35,23,35,35,38,29,31,43,38],Lev:[17,16,17,35,19,30,38,36,24,20,47,8,59,57,33,34,16,30,37,27,24,33,44,23,55,46,34],Num:[54,34,51,49,31,27,89,26,23,36,35,16,33,45,41,50,13,32,22,29,35,41,30,25,18,65,23,31,40,16,54,42,56,29,34,13],Deut:[46,37,29,49,33,25,26,20,29,22,32,32,18,29,23,22,20,22,21,20,23,30,25,22,19,19,26,68,29,20,30,52,29,12],Josh:[18,24,17,24,15,27,26,35,27,43,23,
24,33,15,63,10,18,28,51,9,45,34,16,33],Judg:[36,23,31,24,31,40,25,35,57,18,40,15,25,20,20,31,13,31,30,48,25],Ruth:[22,23,18,22],"1Sam":[28,36,21,22,12,21,17,22,27,27,15,25,23,52,35,23,58,30,24,42,15,23,29,22,44,25,12,25,11,31,13],"2Sam":[27,32,39,12,25,23,29,18,13,19,27,31,39,33,37,23,29,33,43,26,22,51,39,25],"1Kgs":[53,46,28,34,18,38,51,66,28,29,43,33,34,31,34,34,24,46,21,43,29,53],"2Kgs":[18,25,27,44,27,33,20,29,37,36,21,21,25,29,38,20,41,37,37,21,26,20,37,20,30],"1Chr":[54,55,24,43,26,81,40,40,
44,14,47,40,14,17,29,43,27,17,19,8,30,19,32,31,31,32,34,21,30],"2Chr":[17,18,17,22,14,42,22,18,31,19,23,16,22,15,19,14,19,34,11,37,20,12,21,27,28,23,9,27,36,27,21,33,25,33,27,23],Ezra:[11,70,13,24,17,22,28,36,15,44],Neh:[11,20,32,23,19,19,73,18,38,39,36,47,31],Esth:[22,23,15,17,14,14,10,17,32,3],Job:[22,13,26,21,27,30,21,22,35,22,20,25,28,22,35,22,16,21,29,29,34,30,17,25,6,14,23,28,25,31,40,22,33,37,16,33,24,41,30,24,34,17],Ps:[6,12,8,8,12,10,17,9,20,18,7,8,6,7,5,11,15,50,14,9,13,31,6,10,22,12,14,
9,11,12,24,11,22,22,28,12,40,22,13,17,13,11,5,26,17,11,9,14,20,23,19,9,6,7,23,13,11,11,17,12,8,12,11,10,13,20,7,35,36,5,24,20,28,23,10,12,20,72,13,19,16,8,18,12,13,17,7,18,52,17,16,15,5,23,11,13,12,9,9,5,8,28,22,35,45,48,43,13,31,7,10,10,9,8,18,19,2,29,176,7,8,9,4,8,5,6,5,6,8,8,3,18,3,3,21,26,9,8,24,13,10,7,12,15,21,10,20,14,9,6],Prov:[33,22,35,27,23,35,27,36,18,32,31,28,25,35,33,33,28,24,29,30,31,29,35,34,28,28,27,28,27,33,31],Eccl:[18,26,22,16,20,12,29,17,18,20,10,14],Song:[17,17,11,16,16,13,13,
14],Isa:[31,22,26,6,30,13,25,22,21,34,16,6,22,32,9,14,14,7,25,6,17,25,18,23,12,21,13,29,24,33,9,20,24,17,10,22,38,22,8,31,29,25,28,28,25,13,15,22,26,11,23,15,12,17,13,12,21,14,21,22,11,12,19,12,25,24],Jer:[19,37,25,31,31,30,34,22,26,25,23,17,27,22,21,21,27,23,15,18,14,30,40,10,38,24,22,17,32,24,40,44,26,22,19,32,21,28,18,16,18,22,13,30,5,28,7,47,39,46,64,34],Lam:[22,22,66,22,22],Ezek:[28,10,27,17,17,14,27,18,11,22,25,28,23,23,8,63,24,32,14,49,32,31,49,27,17,21,36,26,21,26,18,32,33,31,15,38,28,23,
29,49,26,20,27,31,25,24,23,35],Dan:[21,49,30,37,31,28,28,27,27,21,45,13],Hos:[11,23,5,19,15,11,16,14,17,15,12,14,16,9],Joel:[20,32,21],Amos:[15,16,15,13,27,14,17,14,15],Obad:[21],Jonah:[17,10,10,11],Mic:[16,13,12,13,15,16,20],Nah:[15,13,19],Hab:[17,20,19],Zeph:[18,15,20],Hag:[15,23],Zech:[21,13,10,14,11,15,14,23,17,12,17,14,9,21],Mal:[14,17,18,6],Matt:[25,23,17,25,48,34,29,34,38,42,30,50,58,36,39,28,27,35,30,34,46,46,39,51,46,75,66,20],Mark:[45,28,35,41,43,56,37,38,50,52,33,44,37,72,47,20],Luke:[80,
52,38,44,39,49,50,56,62,42,54,59,35,35,32,31,37,43,48,47,38,71,56,53],John:[51,25,36,54,47,71,53,59,41,42,57,50,38,31,27,33,26,40,42,31,25],Acts:[26,47,26,37,42,15,60,40,43,48,30,25,52,28,41,40,34,28,41,38,40,30,35,27,27,32,44,31],Rom:[32,29,31,25,21,23,25,39,33,21,36,21,14,23,33,27],"1Cor":[31,16,23,21,13,20,40,13,27,33,34,31,13,40,58,24],"2Cor":[24,17,18,18,21,18,16,24,15,18,33,21,14],Gal:[24,21,29,31,26,18],Eph:[23,22,21,32,33,24],Phil:[30,30,21,23],Col:[29,23,25,18],"1Thess":[10,20,13,18,28],
"2Thess":[12,17,18],"1Tim":[20,15,16,16,25,21],"2Tim":[18,26,17,22],Titus:[16,15,15],Phlm:[25],Heb:[14,18,19,16,14,20,28,13,28,39,40,29,25],Jas:[27,26,18,17,20],"1Pet":[25,25,22,19,14],"2Pet":[21,22,18],"1John":[10,29,24,21,21],"2John":[13],"3John":[15],Jude:[25],Rev:[20,29,22,11,14,17,17,13,21,11,19,17,18,20,8,21,18,24,21,15,27,21],Tob:[22,14,17,21,22,18,16,21,6,13,18,22,17,15],Jdt:[16,28,10,15,24,21,32,36,14,23,23,20,20,19,14,25],GkEsth:[22,23,15,17,14,14,10,17,32,13,12,6,18,19,16,24],Wis:[16,24,
19,20,23,25,30,21,18,21,26,27,19,31,19,29,21,25,22],Sir:[30,18,31,31,15,37,36,19,18,31,34,18,26,27,20,30,32,33,30,31,28,27,27,34,26,29,30,26,28,25,31,24,33,31,26,31,31,34,35,30,22,25,33,23,26,20,25,25,16,29,30],Bar:[22,35,37,37,9],PrAzar:[68],Sus:[64],Bel:[42],SgThree:[39],EpJer:[73],"1Macc":[64,70,60,61,68,63,50,32,73,89,74,53,53,49,41,24],"2Macc":[36,32,40,50,27,31,42,36,29,38,38,45,26,46,39],"3Macc":[29,33,30,21,51,41,23],"4Macc":[35,24,21,26,38,35,23,29,32,21,27,19,27,20,32,25,24,24],"1Esd":[58,
30,24,63,73,34,15,96,55],"2Esd":[40,48,36,52,56,59,70,63,47,59,46,51,58,48,63,78],PrMan:[15],Ps151:[7]}},alternates:{ceb:{chapters:{"2Cor":[24,17,18,18,21,18,16,24,15,18,33,21,13],Rev:[20,29,22,11,14,17,17,13,21,11,19,18,18,20,8,21,18,24,21,15,27,21],Tob:[22,14,17,21,22,18,16,21,6,13,18,22,18,15],PrAzar:[67],EpJer:[72],"1Esd":[55,26,24,63,71,33,15,92,55]}},kjv:{chapters:{"3John":[14]}},nab:{chapters:{Gen:[31,25,24,26,32,22,24,22,29,32,32,20,18,24,21,16,27,33,38,18,34,24,20,67,34,35,46,22,35,43,54,
33,20,31,29,43,36,30,23,23,57,38,34,34,28,34,31,22,33,26],Exod:[22,25,22,31,23,30,29,28,35,29,10,51,22,31,27,36,16,27,25,26,37,30,33,18,40,37,21,43,46,38,18,35,23,35,35,38,29,31,43,38],Lev:[17,16,17,35,26,23,38,36,24,20,47,8,59,57,33,34,16,30,37,27,24,33,44,23,55,46,34],Num:[54,34,51,49,31,27,89,26,23,36,35,16,33,45,41,35,28,32,22,29,35,41,30,25,19,65,23,31,39,17,54,42,56,29,34,13],Deut:[46,37,29,49,33,25,26,20,29,22,32,31,19,29,23,22,20,22,21,20,23,29,26,22,19,19,26,69,28,20,30,52,29,12],"1Sam":[28,
36,21,22,12,21,17,22,27,27,15,25,23,52,35,23,58,30,24,42,16,23,28,23,44,25,12,25,11,31,13],"2Sam":[27,32,39,12,25,23,29,18,13,19,27,31,39,33,37,23,29,32,44,26,22,51,39,25],"1Kgs":[53,46,28,20,32,38,51,66,28,29,43,33,34,31,34,34,24,46,21,43,29,54],"2Kgs":[18,25,27,44,27,33,20,29,37,36,20,22,25,29,38,20,41,37,37,21,26,20,37,20,30],"1Chr":[54,55,24,43,41,66,40,40,44,14,47,41,14,17,29,43,27,17,19,8,30,19,32,31,31,32,34,21,30],"2Chr":[18,17,17,22,14,42,22,18,31,19,23,16,23,14,19,14,19,34,11,37,20,12,21,
27,28,23,9,27,36,27,21,33,25,33,27,23],Neh:[11,20,38,17,19,19,72,18,37,40,36,47,31],Job:[22,13,26,21,27,30,21,22,35,22,20,25,28,22,35,22,16,21,29,29,34,30,17,25,6,14,23,28,25,31,40,22,33,37,16,33,24,41,30,32,26,17],Ps:[6,11,9,9,13,11,18,10,21,18,7,9,6,7,5,11,15,51,15,10,14,32,6,10,22,12,14,9,11,13,25,11,22,23,28,13,40,23,14,18,14,12,5,27,18,12,10,15,21,23,21,11,7,9,24,14,12,12,18,14,9,13,12,11,14,20,8,36,37,6,24,20,28,23,11,13,21,72,13,20,17,8,19,13,14,17,7,19,53,17,16,16,5,23,11,13,12,9,9,5,8,29,
22,35,45,48,43,14,31,7,10,10,9,8,18,19,2,29,176,7,8,9,4,8,5,6,5,6,8,8,3,18,3,3,21,26,9,8,24,14,10,8,12,15,21,10,20,14,9,6],Eccl:[18,26,22,17,19,12,29,17,18,20,10,14],Song:[17,17,11,16,16,12,14,14],Isa:[31,22,26,6,30,13,25,23,20,34,16,6,22,32,9,14,14,7,25,6,17,25,18,23,12,21,13,29,24,33,9,20,24,17,10,22,38,22,8,31,29,25,28,28,25,13,15,22,26,11,23,15,12,17,13,12,21,14,21,22,11,12,19,11,25,24],Jer:[19,37,25,31,31,30,34,23,25,25,23,17,27,22,21,21,27,23,15,18,14,30,40,10,38,24,22,17,32,24,40,44,26,22,
19,32,21,28,18,16,18,22,13,30,5,28,7,47,39,46,64,34],Ezek:[28,10,27,17,17,14,27,18,11,22,25,28,23,23,8,63,24,32,14,44,37,31,49,27,17,21,36,26,21,26,18,32,33,31,15,38,28,23,29,49,26,20,27,31,25,24,23,35],Dan:[21,49,100,34,30,29,28,27,27,21,45,13,64,42],Hos:[9,25,5,19,15,11,16,14,17,15,11,15,15,10],Joel:[20,27,5,21],Jonah:[16,11,10,11],Mic:[16,13,12,14,14,16,20],Nah:[14,14,19],Zech:[17,17,10,14,11,15,14,23,17,12,17,14,9,21],Mal:[14,17,24],Acts:[26,47,26,37,42,15,60,40,43,49,30,25,52,28,41,40,34,28,
40,38,40,30,35,27,27,32,44,31],"2Cor":[24,17,18,18,21,18,16,24,15,18,33,21,13],Rev:[20,29,22,11,14,17,17,13,21,11,19,18,18,20,8,21,18,24,21,15,27,21],Tob:[22,14,17,21,22,18,17,21,6,13,18,22,18,15],Sir:[30,18,31,31,15,37,36,19,18,31,34,18,26,27,20,30,32,33,30,31,28,27,27,33,26,29,30,26,28,25,31,24,33,31,26,31,31,34,35,30,22,25,33,23,26,20,25,25,16,29,30],Bar:[22,35,38,37,9,72],"2Macc":[36,32,40,50,27,31,42,36,29,38,38,46,26,46,39]}},nlt:{chapters:{Rev:[20,29,22,11,14,17,17,13,21,11,19,18,18,20,8,21,
18,24,21,15,27,21]}},nrsv:{chapters:{"2Cor":[24,17,18,18,21,18,16,24,15,18,33,21,13],Rev:[20,29,22,11,14,17,17,13,21,11,19,18,18,20,8,21,18,24,21,15,27,21]}},vulgate:{chapters:{Ps:[6,13,9,10,13,11,18,10,39,8,9,6,7,5,10,15,51,15,10,14,32,6,10,22,12,14,9,11,13,25,11,22,23,28,13,40,23,14,18,14,12,5,26,18,12,10,15,21,23,21,11,7,9,24,13,12,12,18,14,9,13,12,11,14,20,8,36,37,6,24,20,28,23,11,13,21,72,13,20,17,8,19,13,14,17,7,19,53,17,16,16,5,23,11,13,12,9,9,5,8,29,22,35,45,48,43,14,31,7,10,10,9,26,9,19,
2,29,176,7,8,9,4,8,5,6,5,6,8,8,3,18,3,3,21,26,9,8,24,14,10,8,12,15,21,10,11,20,14,9,7]}}}};h.prototype.regexps.escaped_passage=/(?:^|[^\w\x1f\x1e])((?:(?:ch(?:apters?|a?pts?\.?|a?p?s?\.?)?\s*\d+\s*(?:[\u2013\u2014\-]|through|thru|to)\s*\d+\s*(?:from|of|in)(?:\s+the\s+book\s+of)?\s*)|(?:ch(?:apters?|a?pts?\.?|a?p?s?\.?)?\s*\d+\s*(?:from|of|in)(?:\s+the\s+book\s+of)?\s*)|(?:\d+(?:th|nd|st)\s*ch(?:apter|a?pt\.?|a?p?\.?)?\s*(?:from|of|in)(?:\s+the\s+book\s+of)?\s*))?\x1f(\d+)(?:\/[a-z])?\x1f(?:c(?:f|ompare|h(?:apters?|a?pts?|a?p?s?))|a(?:nd|lso)|\/[pq]\x1f|[\d.:,;\x1e\x1f&\(\)\[\]\/"'\*=~\-\u2013\u2014\s\xa0]|[a-e](?!\w)|ff?\b|see|title(?![a-z])|thr(?:ough|u)|to|v(?:erses?|er|ss?|v)?|$)+)/gi;
h.prototype.regexps.match_end_split=/\d+\W*title|\d+\W*ff?(?:[\s\xa0*]*\.)?|\d+[\s\xa0*]*[a-e](?!\w)|\x1e(?:[\s\xa0*]*[)\]])?|[\d\x1f]+/gi;h.prototype.regexps.space="[\\s\\xa0]";h.prototype.regexps.control=/[\x1e\x1f]/g;h.prototype.regexps.first="(?:1st|1|I|First)\\.?"+h.prototype.regexps.space+"*";h.prototype.regexps.second="(?:2nd|2|II|Second)\\.?"+h.prototype.regexps.space+"*";h.prototype.regexps.third="(?:3rd|3|III|Third)\\.?"+h.prototype.regexps.space+"*";h.prototype.regexps.fourth="(?:4th|4|IV|Fourth)\\.?"+
h.prototype.regexps.space+"*";h.prototype.regexps.gospel="(?:(?:The[.\\s\\xa0-]*)?Gospel[.\\s\\xa0-]?(?:of[.\\s\\xa0-]*|according[\\s\\xa0-]*?to[.\\s\\xa0-]*)(?:[.\\s\\xa0-]*?(?:Saint|St)[.\\s\\xa0-]*)?|(?:(?:Saint|St)[.\\s\\xa0-]*))?";h.prototype.regexps.range_and="(?:[&\u2013\u2014-]|and|through|to)";h.prototype.regexps.range_only="(?:[\u2013\u2014-]|through|to)";h.prototype.regexps.get_books=function(a,e){var b,c,f,j,l;c=[{osis:["Gen"],regexp:/(\d|\b)(Ge(?:nn?[ei][ei]?s[eiu]s|nn?[es]is|nes[ei]|n)|G[en])(?:\b|(?=\d))/gi},
{osis:["Exod"],regexp:/(\d|\b)(Ex(?:od[ui]s|od[se]|od|[do]?))(?:\b|(?=\d))/gi},{osis:["Lev"],regexp:/(\d|\b)(L(?:[ei]v[ei]t[ei]?cus|evi|ev|[ev]))(?:\b|(?=\d))/gi},{osis:["Num"],regexp:/(\d|\b)(N(?:umbers?|umb?|[um]))(?:\b|(?=\d))/gi},{osis:["Deut"],regexp:/(\d|\b)(D(?:eut[eo]?rono?my|ueteronomy|eut?|uet|t))(?:\b|(?=\d))/gi},{osis:["Josh"],regexp:/(\d|\b)(J(?:ou?sh?ua|o?sh|os))(?:\b|(?=\d))/gi},{osis:["Judg"],regexp:/(\d|\b)(J(?:udges|udg|d?gs?))(?:\b|(?=\d))/gi},{osis:["Ruth"],regexp:/(\d|\b)(R(?:uth?|th|u))(?:\b|(?=\d))/gi},
{osis:["Isa"],regexp:/(\d|\b)(I(?:saiah|sais?ha?|s[ai]{2,}ha?|s[is]ah|sa[hi]?|sa?|a))(?:\b|(?=\d))/gi},{osis:["2Sam"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"(?:Samu[ae]l[ls]?|Sam|Sma|S[am]|Kingdoms)|2"+h.prototype.regexps.space+"*S)(?:\\b|(?=\\d))","gi")},{osis:["1Sam"],regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+")?Samu[ae]l[ls]?|"+h.prototype.regexps.first+"(?:Sam|Sma|S[am]|Kingdoms)|1"+h.prototype.regexps.space+"*S)(?:\\b|(?=\\d))","gi")},{osis:["2Kgs"],regexp:RegExp("(\\b)("+
h.prototype.regexps.second+"Ki?n?g?s?|"+h.prototype.regexps.fourth+"Kingdoms)(?:\\b|(?=\\d))","gi")},{osis:["1Kgs"],regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+")?K(?:i?ngs|in|gs)|"+h.prototype.regexps.first+"Ki?n?g?s?|"+h.prototype.regexps.third+"Kingdoms)(?:\\b|(?=\\d))","gi")},{osis:["2Chr"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"(?:Ch?o?ron[io]cles?|Chronicals|Chro?n?|Cron|Paralipomenon)|2"+h.prototype.regexps.space+"*Ch)(?:\\b|(?=\\d))","gi")},{osis:["1Chr"],regexp:RegExp("(\\b)((?:"+
h.prototype.regexps.first+")?(?:Ch?o?ron[io]cles?|Chronicals|Paralipomenon)|"+h.prototype.regexps.first+"(?:Chro?n?|Cron)|1"+h.prototype.regexps.space+"*Ch)(?:\\b|(?=\\d))","gi")},{osis:["Ezra"],regexp:/(\d|\b)(E(?:zra?|sra))(?:\b|(?=\d))/gi},{osis:["Neh"],regexp:/(\d|\b)(N(?:eh[ei]m[ai]{1,3}h|eh?))(?:\b|(?=\d))/gi},{osis:["GkEsth"],apocrypha:!0,regexp:RegExp("(\\d|\\b)(Greek"+h.prototype.regexps.space+"*Esther|Esther"+h.prototype.regexps.space+"*\\(Greek\\)|G(?:ree)?k"+h.prototype.regexps.space+
"*Esth?)(?:\\b|(?=\\d))","gi")},{osis:["Esth"],regexp:/(\d|\b)(E(?:sth?er|sth?|s))(?:\b|(?=\d))/gi},{osis:["Job"],regexp:/(\d|\b)(Jo?b)(?:\b|(?=\d))/gi},{osis:["Ps"],extra:"p",regexp:RegExp("(\\b)((?:(?:(?:1[02-5]|[2-9])?(?:1"+h.prototype.regexps.space+"*st|2"+h.prototype.regexps.space+"*nd|3"+h.prototype.regexps.space+"*rd))|1?1[123]"+h.prototype.regexps.space+"*th|(?:150|1[0-4][04-9]|[1-9][04-9]|[4-9])"+h.prototype.regexps.space+"*th)"+h.prototype.regexps.space+"*Psalm)\\b","gi")},{osis:["Ps"],
apocrypha:!0,extra:"q",regexp:/(\b)(Ps151)(?=\.1)/g},{osis:["Ps"],regexp:/(\d|\b)(P(?:s[alm]{2,4}s?|a[slm]{3,4}s?|l[sam]{2,4}s?|s[as]?m?))(?:\b|(?=\d))/gi},{osis:["Prov"],regexp:/(\d|\b)(P(?:r[eo]?verbs?|robv?erbs|or?verbs|rovebs|rvbs?|ro?v?|v)|Oroverbs)(?:\b|(?=\d))/gi},{osis:["Eccl"],regexp:/(\d|\b)(E(?:cc?less?[ia]{1,4}s?tes?|cclesiastic?es|ccles|ccl?|cl?))(?:\b|(?=\d))/gi},{osis:["SgThree"],apocrypha:!0,regexp:RegExp("(\\d|\\b)((?:The"+h.prototype.regexps.space+"*)?Song"+h.prototype.regexps.space+
"*of"+h.prototype.regexps.space+"*(?:the"+h.prototype.regexps.space+"*)?(?:3|Three)"+h.prototype.regexps.space+"*(?:Holy"+h.prototype.regexps.space+"*Children|Young"+h.prototype.regexps.space+"*Men|Youths|Jews)|S\\.?"+h.prototype.regexps.space+"*(?:of)?"+h.prototype.regexps.space+"*(?:Three|Th|3)\\.?"+h.prototype.regexps.space+"*(?:Ch|Y)|So?n?gThree)(?:\\b|(?=\\d))","gi")},{osis:["Song"],regexp:RegExp("(\\d|\\b)((?:The"+h.prototype.regexps.space+"*)?Songs?"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+
"*(?:S[ao]lom[ao]ns?|Songs?)|(?:S(?:n?gs?|ongs?|"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+"*S|o?S|o[ln]?)))(?:\\b|(?=\\d))","gi")},{osis:["EpJer"],apocrypha:!0,regexp:RegExp("(\\d|\\b)((?:The"+h.prototype.regexps.space+"*)?(?:Ep(?:istle)?|Let(?:ter))\\.?"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+"*Jeremiah|EpJer)(?:\\b|(?=\\d))","gi")},{osis:["Jer"],regexp:/(\d|\b)(Jer(?:emaiah|[ae]maih|[ae]miha|[aei]mi[ai]h|[ei]mi?ah|[ai]mih|[ae]mia|[am][im]ah|emi[he]?|e?)|J[er])(?:\b|(?=\d))/gi},
{osis:["Lam"],regexp:/(\d|\b)(L(?:am[ei]ntations?|am?|m))(?:\b|(?=\d))/gi},{osis:["Ezek"],regexp:/(\d|\b)(E(?:[zx][ei]{1,2}ki?el|zekial|zek|z[ek]))(?:\b|(?=\d))/gi},{osis:["Dan"],regexp:/(\d|\b)(D(?:aniel|a?n|[al]))(?:\b|(?=\d))/gi},{osis:["Hos"],regexp:/(\d|\b)(H(?:osea|o?s|os?))(?:\b|(?=\d))/gi},{osis:["Joel"],regexp:/(\d|\b)(J(?:oel?|l))(?:\b|(?=\d))/gi},{osis:["Amos"],regexp:/(\d|\b)(Amo?s?)(?:\b|(?=\d))/gi},{osis:["Obad"],regexp:/(\d|\b)(O(?:badiah?|bidah|ba?d?))(?:\b|(?=\d))/gi},{osis:["Jonah"],
regexp:/(\d|\b)(J(?:onah|on|nh))(?:\b|(?=\d))/gi},{osis:["Mic"],regexp:/(\d|\b)(M(?:ich?ah?|ic?))(?:\b|(?=\d))/gi},{osis:["Nah"],regexp:/(\d|\b)(N(?:ahum?|ah?))(?:\b|(?=\d))/gi},{osis:["Hab"],regexp:/(\d|\b)(H(?:abb?akk?[au]kk?|abk?))(?:\b|(?=\d))/gi},{osis:["Zeph"],regexp:/(\d|\b)(Z(?:ephana?iah?|e?ph?))(?:\b|(?=\d))/gi},{osis:["Hag"],regexp:/(\d|\b)(H(?:agg?ai|aggia[ih]|a?gg?))(?:\b|(?=\d))/gi},{osis:["Zech"],regexp:/(\d|\b)(Z(?:[ae]ch[ae]r[ai]{1,2}h|ach?|e?ch?))(?:\b|(?=\d))/gi},{osis:["Mal"],
regexp:/(\d|\b)(M(?:alachi?|alichi|alaci|al))(?:\b|(?=\d))/gi},{osis:["Matt"],regexp:RegExp("(\\d|\\b)("+h.prototype.regexps.gospel+"M(?:at[th]{1,3}i?ew|atthwe|a?tt?))(?:\\b|(?=\\d))","gi")},{osis:["Mark"],regexp:RegExp("(\\d|\\b)("+h.prototype.regexps.gospel+"M(?:a?rk?|k))(?:\\b|(?=\\d))","gi")},{osis:["Luke"],regexp:RegExp("(\\d|\\b)("+h.prototype.regexps.gospel+"L(?:uke?|[uk]))(?:\\b|(?=\\d))","gi")},{osis:["1John"],regexp:RegExp("(\\b)("+h.prototype.regexps.first+"J(?:o?phn|[ho][ho]n|onh|ohm|hn|o[hn]?|[hn]))(?:\\b|(?=\\d))",
"gi")},{osis:["2John"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"J(?:o?phn|[ho][ho]n|onh|ohm|hn|o[hn]?|[hn]))(?:\\b|(?=\\d))","gi")},{osis:["3John"],regexp:RegExp("(\\b)("+h.prototype.regexps.third+"J(?:o?phn|[ho][ho]n|onh|ohm|hn|o[hn]?|[hn]))(?:\\b|(?=\\d))","gi")},{osis:["John"],regexp:RegExp("([04-9]|\\b)("+h.prototype.regexps.gospel+"J(?:o?phn|[ho][ho]n|onh|ohm|hn|oh|[hn]))(?:\\b|(?=\\d))","gi")},{osis:["Acts"],regexp:RegExp("(\\d|\\b)(A(?:cts"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+
"*the"+h.prototype.regexps.space+"*Apostles|cts*|ct?))(?:\\b|(?=\\d))","gi")},{osis:["Rom"],regexp:/(\d|\b)(R(?:omans?|pmans|oamns|omands|omasn|om?s?|mn?s?))(?:\b|(?=\d))/gi},{osis:["2Cor"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"C(?:h?orr?[in]{1,3}th[aio]{1,3}ns|orin[ai]?th[ai]{1,3}n[aio]{0,3}s|orinti[ao]ns|orinthian|orthians?|orint?h?|orth|or?))(?:\\b|(?=\\d))","gi")},{osis:["1Cor"],regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+")?C(?:h?orr?[in]{1,3}th[aio]{1,3}ns|orin[ai]?th[ai]{1,3}n[aio]{0,3}s|orinti[ao]ns)|"+
h.prototype.regexps.first+"C(?:orinthian|orthians?|orint?h?|orth|or?))(?:\\b|(?=\\d))","gi")},{osis:["Gal"],regexp:/(\d|\b)(G(?:alatians?|all?at[aino]{1,4}s|alat?|al?|l))(?:\b|(?=\d))/gi},{osis:["Eph"],regexp:/(\d|\b)(E(?:phesians?|phi?sians?|phesains?|sphesians|pehesians|h?pesians|phesiand|phesions|alat?|phe?s?|ph?|hp))(?:\b|(?=\d))/gi},{osis:["Phil"],regexp:/(\d|\b)(P(?:hil{1,}i?p{1,}[aei]{1,3}ns?|hi?li?p{0,2}|hil?|hp))(?:\b|(?=\d))/gi},{osis:["Col"],regexp:/(\d|\b)(C(?:[ao]ll?[ao]ss?i[ao]ns|olossi?ans?|ol?))(?:\b|(?=\d))/gi},
{osis:["2Thess"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"T(?:hess?[aeo]lon[ieaoc]{1,4}ns?|he?s{1,3}|h))(?:\\b|(?=\\d))","gi")},{osis:["1Thess"],regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+")?Thess?[aeo]lon[ieaoc]{1,4}ns?|"+h.prototype.regexps.first+"T(?:he?s{1,3}|h))(?:\\b|(?=\\d))","gi")},{osis:["2Tim"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"T(?:imothy?|himoth?y|omothy|imoty|im?|m))(?:\\b|(?=\\d))","gi")},{osis:["1Tim"],regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+
")?Timothy?|"+h.prototype.regexps.first+"T(?:himoth?y|omothy|imoty|im?|m))(?:\\b|(?=\\d))","gi")},{osis:["Titus"],regexp:/(\d|\b)(T(?:itus|it?))(?:\b|(?=\d))/gi},{osis:["Phlm"],regexp:/(\d|\b)(Ph(?:ilemon|l?mn?|ilem?))(?:\b|(?=\d))/gi},{osis:["Heb"],regexp:/(\d|\b)(H(?:eb[rew]{1,3}s|[ew]{0,2}brew{1,2}s|ebrew|eb))(?:\b|(?=\d))/gi},{osis:["Jas"],regexp:/(\d|\b)(J(?:ames?|a[ms]?|ms?))(?:\b|(?=\d))/gi},{osis:["2Pet"],regexp:RegExp("(\\b)("+h.prototype.regexps.second+"P(?:eter?|e?t?r?))(?:\\b|(?=\\d))",
"gi")},{osis:["1Pet"],regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+")?Peter|"+h.prototype.regexps.first+"P(?:eter?|e?t?r?))(?:\\b|(?=\\d))","gi")},{osis:["Jude"],regexp:/(\d|\b)(Ju?de)(?:\b|(?=\d))/gi},{osis:["Rev"],regexp:/(\d|\b)(R(?:ev[aeo]?lations?|evel|e?v|e))(?:\b|(?=\d))/gi},{osis:["Tob"],apocrypha:!0,regexp:/(\d|\b)(Tobi?t?|Tb)(?:\b|(?=\d))/gi},{osis:["Jdt"],apocrypha:!0,regexp:/(\d|\b)(Ju?di?th?)(?:\b|(?=\d))/gi},{osis:["Wis"],apocrypha:!0,regexp:RegExp("(\\d|\\b)((?:The"+h.prototype.regexps.space+
"*)Wisd?(?:om)?"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+"*Solomon|Wisdom|Wisd?)(?:\\b|(?=\\d))","gi")},{osis:["Sir"],apocrypha:!0,regexp:RegExp("(\\d|\\b)(Sirach|Ben"+h.prototype.regexps.space+"*Sira|Sir|Eccl[eu]siasticus|Ecclus|Eccs|(?:The"+h.prototype.regexps.space+"*)Wisdom"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+"*Jesus"+h.prototype.regexps.space+"*(?:Son"+h.prototype.regexps.space+"*of|ben)"+h.prototype.regexps.space+"*Sirach)(?:\\b|(?=\\d))","gi")},{osis:["Bar"],
apocrypha:!0,regexp:/(\d|\b)(Baruch|Bar)(?:\b|(?=\d))/gi},{osis:["PrAzar"],apocrypha:!0,regexp:RegExp("(\\d|\\b)((?:The"+h.prototype.regexps.space+"*)?Pr(?:ayers?)?"+h.prototype.regexps.space+"*of"+h.prototype.regexps.space+"*Azariah?|Azariah?|PrAza?r)(?:\\b|(?=\\d))","gi")},{osis:["Sus"],apocrypha:!0,regexp:/(\d|\b)(Susannah?|Shoshana|Sus)(?:\b|(?=\d))/gi},{osis:["Bel"],apocrypha:!0,regexp:RegExp("(\\d|\\b)(Bel"+h.prototype.regexps.space+"*(?:and|&)"+h.prototype.regexps.space+"*(?:the"+h.prototype.regexps.space+
"*)?(?:Dragon|Serpent|Snake)|Bel)(?:\\b|(?=\\d))","gi")},{osis:["2Macc"],apocrypha:!0,regexp:RegExp("(\\b)("+h.prototype.regexps.second+"Mac{1,3}(?:ab{1,3}e{1,3}s?)?|2"+h.prototype.regexps.space+"*Mc)(?:\\b|(?=\\d))","gi")},{osis:["3Macc"],apocrypha:!0,regexp:RegExp("(\\b)("+h.prototype.regexps.third+"Mac{1,3}(?:ab{1,3}e{1,3}s?)?|3"+h.prototype.regexps.space+"*Mc)(?:\\b|(?=\\d))","gi")},{osis:["4Macc"],apocrypha:!0,regexp:RegExp("(\\b)("+h.prototype.regexps.fourth+h.prototype.regexps.space+"*Mac{1,3}(?:ab{1,3}e{1,3}s?)?|4"+
h.prototype.regexps.space+"*Mc)(?:\\b|(?=\\d))","gi")},{osis:["1Macc"],apocrypha:!0,regexp:RegExp("(\\b)((?:"+h.prototype.regexps.first+")?Mac{1,3}ab{1,3}e{1,3}s?|"+h.prototype.regexps.first+"Mac{1,3}|1"+h.prototype.regexps.space+"*Mc)(?:\\b|(?=\\d))","gi")},{osis:["1Esd"],apocrypha:!0,regexp:RegExp("(\\b)("+h.prototype.regexps.first+"Esdras|1"+h.prototype.regexps.space+"*Esdr?)(?:\\b|(?=\\d))","gi")},{osis:["2Esd"],apocrypha:!0,regexp:RegExp("(\\b)("+h.prototype.regexps.second+"Esdras|2"+h.prototype.regexps.space+
"*Esdr?)(?:\\b|(?=\\d))","gi")},{osis:["PrMan"],apocrypha:!0,regexp:RegExp("(\\d|\\b)((?:(?:The"+h.prototype.regexps.space+"*)Pr(?:ayers?)?"+h.prototype.regexps.space+"*(?:of"+h.prototype.regexps.space+"*)?M[ae]n{1,2}[ae]s{1,2}[ae]h)|PrMan)(?:\\b|(?=\\d))","gi")},{osis:["Ezek","Ezra"],regexp:/(\d|\b)(Ez)(?:\b|(?=\d))/gi},{osis:["Hab","Hag"],regexp:/(\d|\b)(Ha)(?:\b|(?=\d))/gi},{osis:["Heb","Hab"],regexp:/(\d|\b)(Hb)(?:\b|(?=\d))/gi},{osis:["John","Jonah","Job","Josh","Joel"],regexp:/(\d|\b)(Jo)(?:\b|(?=\d))/gi},
{osis:["Jude","Judg"],regexp:/(\d|\b)(Jd)(?:\b|(?=\d))/gi},{osis:["Jude","Judg"],regexp:/(\d|\b)(Jud)(?:\b|(?=\d))/gi},{osis:["Jude","Judg"],regexp:/(\d|\b)(Ju)(?:\b|(?=\d))/gi},{osis:["Matt","Mark","Mal"],regexp:/(\d|\b)(Ma)(?:\b|(?=\d))/gi},{osis:["Phil","Phlm"],regexp:/(\d|\b)(Ph)(?:\b|(?=\d))/gi},{osis:["Zeph","Zech"],regexp:/(\d|\b)(Ze)(?:\b|(?=\d))/gi}];if(!0===a&&"none"===e)return c;f=[];j=0;for(l=c.length;j<l;j++)b=c[j],null!=b.apocrypha&&!0===b.apocrypha||("books"===e&&(b.regexp=RegExp(b.regexp.source,
"g")),f.push(b));return f};h.prototype.regexps.books=h.prototype.regexps.get_books(!1,"none");var ha,ua=function(a){return'"'+a.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g,escape)+'"'},j={parse:function(a,e){function b(g){d<ca||(d>ca&&(ca=d,ma=[]),ma.push(g))}function c(){var g,a,b,c,e,f,m;f=e=d;g=da();null===g&&(g=ea(),null===g&&(g=j(),null===g&&
(g=Q(),null===g&&(g=R(),null===g&&(g=t(),null===g&&(g=J(),null===g&&(g=G(),null===g&&(g=B(),null===g&&(g=C(),null===g&&(g=p(),null===g&&(g=S(),null===g&&(g=K(),null===g&&(g=l(),null===g&&(g=L(),null===g&&(g=k(),null===g&&(g=T(),null===g&&(g=U(),null===g&&(g=M(),null===g&&(g=N())))))))))))))))))));if(null!==g){m=d;b=w();b=null!==b?b:"";null!==b?(c=h(),null!==c?b=[b,c]:(b=null,d=m)):(b=null,d=m);if(null!==b)for(a=[];null!==b;)a.push(b),m=d,b=w(),b=null!==b?b:"",null!==b?(c=h(),null!==c?b=[b,c]:(b=null,
d=m)):(b=null,d=m);else a=null;null!==a?g=[g,a]:(g=null,d=f)}else g=null,d=f;null!==g&&(a=g[1],a.unshift([g[0]]),g={type:"sequence",value:a,indices:[e,d-1]});null===g&&(d=e);return g}function f(){var g,q,y,c,e,f,j,k,x,l;x=k=d;40===a.charCodeAt(d)?(g="(",d++):(g=null,0===m&&b('"("'));if(null!==g)if(q=s(),null!==q)if(y=w(),y=null!==y?y:"",null!==y)if(c=h(),null!==c){e=[];l=d;f=w();f=null!==f?f:"";null!==f?(j=h(),null!==j?f=[f,j]:(f=null,d=l)):(f=null,d=l);for(;null!==f;)e.push(f),l=d,f=w(),f=null!==
f?f:"",null!==f?(j=h(),null!==j?f=[f,j]:(f=null,d=l)):(f=null,d=l);null!==e?(f=s(),null!==f?(41===a.charCodeAt(d)?(j=")",d++):(j=null,0===m&&b('")"')),null!==j?g=[g,q,y,c,e,f,j]:(g=null,d=x)):(g=null,d=x)):(g=null,d=x)}else g=null,d=x;else g=null,d=x;else g=null,d=x;else g=null,d=x;null!==g&&(q=g[4],"undefined"===typeof q&&(q=[]),q.unshift([g[3]]),g={type:"sequence_post_enclosed",value:q,indices:[k,d-1]});null===g&&(d=k);return g}function h(){var g;g=f();null===g&&(g=da(),null===g&&(g=ea(),null===
g&&(g=j(),null===g&&(g=Q(),null===g&&(g=R(),null===g&&(g=t(),null===g&&(g=J(),null===g&&(g=G(),null===g&&(g=B(),null===g&&(g=C(),null===g&&(g=p(),null===g&&(g=S(),null===g&&(g=K(),null===g&&(g=l(),null===g&&(g=L(),null===g&&(g=k(),null===g&&(g=T(),null===g&&(g=U(),null===g&&(g=M(),null===g&&(g=N(),null===g&&(g=Z(),null===g&&(g=$(),null===g&&(g=V(),null===g&&(g=W(),null===g&&(g=D(),null===g&&(g=E(),null===g&&(g=z(),null===g&&(g=v()))))))))))))))))))))))))))));return g}function j(){var g,a,b,c,e;e=
c=d;g=R();null===g&&(g=t(),null===g&&(g=J(),null===g&&(g=G(),null===g&&(g=B(),null===g&&(g=C(),null===g&&(g=p(),null===g&&(g=S(),null===g&&(g=K(),null===g&&(g=T(),null===g&&(g=U(),null===g&&(g=L(),null===g&&(g=M(),null===g&&(g=N(),null===g&&(g=Z(),null===g&&(g=$(),null===g&&(g=V(),null===g&&(g=W(),null===g&&(g=D(),null===g&&(g=E(),null===g&&(g=z(),null===g&&(g=v())))))))))))))))))))));null!==g?(a=O(),null!==a?(b=Q(),null===b&&(b=R(),null===b&&(b=t(),null===b&&(b=J(),null===b&&(b=G(),null===b&&(b=
B(),null===b&&(b=C(),null===b&&(b=p(),null===b&&(b=S(),null===b&&(b=K(),null===b&&(b=T(),null===b&&(b=U(),null===b&&(b=L(),null===b&&(b=M(),null===b&&(b=N(),null===b&&(b=Z(),null===b&&(b=$(),null===b&&(b=V(),null===b&&(b=D(),null===b&&(b=E(),null===b&&(b=W(),null===b&&(b=z(),null===b&&(b=v())))))))))))))))))))))),null!==b?g=[g,a,b]:(g=null,d=e)):(g=null,d=e)):(g=null,d=e);null!==g&&(g={type:"range",value:[g[0],g[2]],indices:[c,d-1]});null===g&&(d=c);return g}function k(){var g,q,y,c,e,f,h;f=e=d;31===
a.charCodeAt(d)?(g="\u001f",d++):(g=null,0===m&&b('"\\x1F"'));null!==g?(q=fa(),null!==q?(h=d,47===a.charCodeAt(d)?(y="/",d++):(y=null,0===m&&b('"/"')),null!==y?(/^[a-z]/.test(a.charAt(d))?(c=a.charAt(d),d++):(c=null,0===m&&b("[a-z]")),null!==c?y=[y,c]:(y=null,d=h)):(y=null,d=h),y=null!==y?y:"",null!==y?(31===a.charCodeAt(d)?(c="\u001f",d++):(c=null,0===m&&b('"\\x1F"')),null!==c?g=[g,q,y,c]:(g=null,d=f)):(g=null,d=f)):(g=null,d=f)):(g=null,d=f);null!==g&&(g={type:"b",value:g[1].value,indices:[e,d-
1]});null===g&&(d=e);return g}function l(){var g,a,b,c,e,f;f=e=d;g=k();null!==g?(a=O(),null!==a?(c=d,m++,b=j(),null===b&&(b=Q(),null===b&&(b=J(),null===b&&(b=G(),null===b&&(b=B(),null===b&&(b=C(),null===b&&(b=p(),null===b&&(b=K()))))))),m--,null===b?b="":(b=null,d=c),null!==b?(c=k(),null!==c?g=[g,a,b,c]:(g=null,d=f)):(g=null,d=f)):(g=null,d=f)):(g=null,d=f);null!==g&&(g={type:"b_range",value:[g[0],g[3]],indices:[e,d-1]});null===g&&(d=e);return g}function p(){var g,a,b,c,e,f,h,j,x,l;h=f=d;g=k();if(null!==
g){j=d;a=F();null!==a?(x=d,m++,l=d,b=z(),null!==b?(c=A(),null!==c?(e=v(),null!==e?b=[b,c,e]:(b=null,d=l)):(b=null,d=l)):(b=null,d=l),m--,null!==b?(b="",d=x):b=null,null!==b?a=[a,b]:(a=null,d=j)):(a=null,d=j);if(null===a){b=A();if(null!==b)for(a=[];null!==b;)a.push(b),b=A();else a=null;if(null===a){b=X();if(null!==b)for(a=[];null!==b;)a.push(b),b=X();else a=null;if(null===a){b=O();if(null!==b)for(a=[];null!==b;)a.push(b),b=O();else a=null;null===a&&(a=s())}}}null!==a?(b=z(),null!==b?g=[g,a,b]:(g=null,
d=h)):(g=null,d=h)}else g=null,d=h;null!==g&&(g={type:"bc",value:[g[0],g[2]],indices:[f,d-1]});null===g&&(d=f);return g}function r(){var g,q,c,e,f,h,j;j=h=d;g=k();null!==g?(q=s(),null!==q?(44===a.charCodeAt(d)?(c=",",d++):(c=null,0===m&&b('","')),null!==c?(e=s(),null!==e?(f=z(),null!==f?g=[g,q,c,e,f]:(g=null,d=j)):(g=null,d=j)):(g=null,d=j)):(g=null,d=j)):(g=null,d=j);null!==g&&(g={type:"bc",value:[g[0],g[4]],indices:[h,d-1]});null===g&&(d=h);return g}function t(){var g,a,b,c;c=b=d;g=C();null===g&&
(g=p());null!==g?(a=na(),null!==a?g=[g,a]:(g=null,d=c)):(g=null,d=c);null!==g&&(g={type:"bc_title",value:[g[0],g[1]],indices:[b,d-1]});null===g&&(d=b);return g}function G(){var g,q,c,e,f,h,j,k;h=f=d;g=C();null===g&&(g=p());null!==g?(j=d,m++,k=d,46===a.charCodeAt(d)?(q=".",d++):(q=null,0===m&&b('"."')),null!==q?(c=F(),null!==c?(e=v(),null!==e?q=[q,c,e]:(q=null,d=k)):(q=null,d=k)):(q=null,d=k),m--,null===q?q="":(q=null,d=j),null!==q?(j=d,c=A(),null===c&&(c=w()),c=null!==c?c:"",null!==c?(e=F(),null!==
e?c=[c,e]:(c=null,d=j)):(c=null,d=j),null===c&&(c=A()),null!==c?(e=D(),null===e&&(e=v()),null!==e?g=[g,q,c,e]:(g=null,d=h)):(g=null,d=h)):(g=null,d=h)):(g=null,d=h);null!==g&&(g={type:"bcv",value:[g[0],g[3]],indices:[f,d-1]});null===g&&(d=f);return g}function B(){var g,a,b,c,e,f,h,j,k;h=f=d;g=C();null===g&&(g=p());null!==g?(a=X(),null!==a?(b=D(),null===b&&(b=v()),null!==b?(j=d,m++,k=d,c=A(),null!==c?(e=v(),null!==e?c=[c,e]:(c=null,d=k)):(c=null,d=k),m--,null===c?c="":(c=null,d=j),null!==c?g=[g,a,
b,c]:(g=null,d=h)):(g=null,d=h)):(g=null,d=h)):(g=null,d=h);null!==g&&(g={type:"bcv",value:[g[0],g[2]],indices:[f,d-1]});null===g&&(d=f);return g}function R(){var g,q,c,e,f,h,j,k,l,n,p;l=k=d;g=r();null!==g?(q=s(),null!==q?(44===a.charCodeAt(d)?(c=",",d++):(c=null,0===m&&b('","')),null!==c?(e=s(),null!==e?(f=D(),null===f&&(f=v()),null!==f?(n=d,m++,p=d,h=A(),null!==h?(j=v(),null!==j?h=[h,j]:(h=null,d=p)):(h=null,d=p),m--,null===h?h="":(h=null,d=n),null!==h?g=[g,q,c,e,f,h]:(g=null,d=l)):(g=null,d=l)):
(g=null,d=l)):(g=null,d=l)):(g=null,d=l)):(g=null,d=l);null!==g&&(g={type:"bcv",value:[g[0],g[4]],indices:[k,d-1]});null===g&&(d=k);return g}function ea(){var g,q,c,e,f,h,j,l,x;x=l=d;g=k();null!==g?(45===a.charCodeAt(d)?(q="-",d++):(q=null,0===m&&b('"-"')),null===q&&(q=aa()),q=null!==q?q:"",null!==q?(c=z(),null!==c?(45===a.charCodeAt(d)?(e="-",d++):(e=null,0===m&&b('"-"')),null!==e?(f=v(),null!==f?(45===a.charCodeAt(d)?(h="-",d++):(h=null,0===m&&b('"-"')),null!==h?(j=v(),null!==j?g=[g,q,c,e,f,h,j]:
(g=null,d=x)):(g=null,d=x)):(g=null,d=x)):(g=null,d=x)):(g=null,d=x)):(g=null,d=x)):(g=null,d=x);null!==g&&(g={type:"range",value:[{type:"bcv",value:[{type:"bc",value:[g[0],g[2]],indices:[g[0].indices[0],g[2].indices[1]]},g[4]],indices:[g[0].indices[0],g[4].indices[1]]},g[6]],indices:[l,d-1]});null===g&&(d=l);return g}function K(){var g,a,b,c,e,f,h;e=c=d;g=k();if(null!==g){b=A();if(null!==b)for(a=[];null!==b;)a.push(b),b=A();else a=null;if(null===a){b=X();if(null!==b)for(a=[];null!==b;)a.push(b),
b=X();else a=null;if(null===a){b=O();if(null!==b)for(a=[];null!==b;)a.push(b),b=O();else a=null;if(null===a){f=d;b=w();if(null!==b)for(a=[];null!==b;)a.push(b),b=w();else a=null;null!==a?(h=d,m++,b=F(),m--,null!==b?(b="",d=h):b=null,null!==b?a=[a,b]:(a=null,d=f)):(a=null,d=f);null===a&&(a=s())}}}null!==a?(b=D(),null===b&&(b=v()),null!==b?g=[g,a,b]:(g=null,d=e)):(g=null,d=e)}else g=null,d=e;null!==g&&(g={type:"bv",value:[g[0],g[2]],indices:[c,d-1]});null===g&&(d=c);return g}function M(){var g,a,b,
c,e,f;f=e=d;g=ba();null!==g?(a=z(),null!==a?(b=ia(),b=null!==b?b:"",null!==b?(c=k(),null!==c?g=[g,a,b,c]:(g=null,d=f)):(g=null,d=f)):(g=null,d=f)):(g=null,d=f);null!==g&&(g={type:"bc",value:[g[3],g[1]],indices:[e,d-1]});null===g&&(d=e);return g}function da(){var a,b,c,e,f,h,j,m;m=j=d;a=ba();null!==a?(b=z(),null!==b?(c=O(),null!==c?(e=z(),null!==e?(f=ia(),f=null!==f?f:"",null!==f?(h=k(),null!==h?a=[a,b,c,e,f,h]:(a=null,d=m)):(a=null,d=m)):(a=null,d=m)):(a=null,d=m)):(a=null,d=m)):(a=null,d=m);null!==
a&&(a={type:"cb_range",value:[a[5],a[1],a[3]],indices:[j,d-1]});null===a&&(d=j);return a}function T(){var a,b,c,e,f,h;h=f=d;a=M();null!==a?(b=w(),b=null!==b?b:"",null!==b?(c=F(),null!==c?(e=v(),null!==e?a=[a,b,c,e]:(a=null,d=h)):(a=null,d=h)):(a=null,d=h)):(a=null,d=h);null!==a&&(a={type:"bcv",value:[a[0],a[3]],indices:[f,d-1]});null===a&&(d=f);return a}function N(){var g,q,c,e,f,h,j;j=h=d;g=z();null!==g?("th"===a.substr(d,2)?(q="th",d+=2):(q=null,0===m&&b('"th"')),null===q&&("nd"===a.substr(d,2)?
(q="nd",d+=2):(q=null,0===m&&b('"nd"')),null===q&&("st"===a.substr(d,2)?(q="st",d+=2):(q=null,0===m&&b('"st"')))),null!==q?(c=ba(),null!==c?(e=ia(),e=null!==e?e:"",null!==e?(f=k(),null!==f?g=[g,q,c,e,f]:(g=null,d=j)):(g=null,d=j)):(g=null,d=j)):(g=null,d=j)):(g=null,d=j);null!==g&&(g={type:"bc",value:[g[4],g[0]],indices:[h,d-1]});null===g&&(d=h);return g}function U(){var a,b,c,e,f,h;h=f=d;a=N();null!==a?(b=w(),b=null!==b?b:"",null!==b?(c=F(),null!==c?(e=v(),null!==e?a=[a,b,c,e]:(a=null,d=h)):(a=null,
d=h)):(a=null,d=h)):(a=null,d=h);null!==a&&(a={type:"bcv",value:[a[0],a[3]],indices:[f,d-1]});null===a&&(d=f);return a}function L(){var g,q,c,e,f;f=e=d;31===a.charCodeAt(d)?(g="\u001f",d++):(g=null,0===m&&b('"\\x1F"'));null!==g?(q=fa(),null!==q?("/p\u001f"===a.substr(d,3)?(c="/p\u001f",d+=3):(c=null,0===m&&b('"/p\\x1F"')),null!==c?g=[g,q,c]:(g=null,d=f)):(g=null,d=f)):(g=null,d=f);null!==g&&(g={type:"c_psalm",value:g[1].value,indices:[e,d-1]});null===g&&(d=e);return g}function S(){var a,b,c,e,f,h;
h=f=d;a=L();null!==a?(b=w(),b=null!==b?b:"",null!==b?(c=F(),null!==c?(e=v(),null!==e?a=[a,b,c,e]:(a=null,d=h)):(a=null,d=h)):(a=null,d=h)):(a=null,d=h);null!==a&&(a={type:"cv_psalm",value:[a[0],a[3]],indices:[f,d-1]});null===a&&(d=f);return a}function Z(){var a,b,c,e,f;f=e=d;a=ba();null!==a?(b=z(),null!==b?(c=na(),null!==c?a=[a,b,c]:(a=null,d=f)):(a=null,d=f)):(a=null,d=f);null!==a&&(a={type:"c_title",value:[a[1],a[2]],indices:[e,d-1]});null===a&&(d=e);return a}function V(){var g,c,e,f,h,j,k,l;j=
h=d;g=z();null!==g?(k=d,m++,l=d,46===a.charCodeAt(d)?(c=".",d++):(c=null,0===m&&b('"."')),null!==c?(e=F(),null!==e?(f=v(),null!==f?c=[c,e,f]:(c=null,d=l)):(c=null,d=l)):(c=null,d=l),m--,null===c?c="":(c=null,d=k),null!==c?(k=d,e=A(),e=null!==e?e:"",null!==e?(f=F(),null!==f?e=[e,f]:(e=null,d=k)):(e=null,d=k),null===e&&(e=A()),null!==e?(f=D(),null===f&&(f=v()),null!==f?g=[g,c,e,f]:(g=null,d=j)):(g=null,d=j)):(g=null,d=j)):(g=null,d=j);null!==g&&(g={type:"cv",value:[g[0],g[3]],indices:[h,d-1]});null===
g&&(d=h);return g}function W(){var a,b,c,e,f,h,j,k,l;j=h=d;a=z();null!==a?(b=X(),null!==b?(c=D(),null===c&&(c=v()),null!==c?(k=d,m++,l=d,e=A(),null!==e?(f=v(),null!==f?e=[e,f]:(e=null,d=l)):(e=null,d=l),m--,null===e?e="":(e=null,d=k),null!==e?a=[a,b,c,e]:(a=null,d=j)):(a=null,d=j)):(a=null,d=j)):(a=null,d=j);null!==a&&(a={type:"cv",value:[a[0],a[2]],indices:[h,d-1]});null===a&&(d=h);return a}function z(){var a,b,c,e;e=c=d;a=ba();a=null!==a?a:"";null!==a?(b=E(),null!==b?a=[a,b]:(a=null,d=e)):(a=null,
d=e);null!==a&&(a={type:"c",value:[a[1]],indices:[c,d-1]});null===a&&(d=c);return a}function Q(){var g,c,e,f,h,j,k,l,n;l=k=d;g=G();null===g&&(g=B(),null===g&&(g=p(),null===g&&(g=V(),null===g&&(g=W(),null===g&&(g=E(),null===g&&(g=z(),null===g&&(g=v())))))));null!==g?(c=s(),null!==c?(102===a.charCodeAt(d)?(e="f",d++):(e=null,0===m&&b('"f"')),null!==e?(102===a.charCodeAt(d)?(f="f",d++):(f=null,0===m&&b('"f"')),f=null!==f?f:"",null!==f?(h=H(),h=null!==h?h:"",null!==h?(n=d,m++,/^[a-z]/.test(a.charAt(d))?
(j=a.charAt(d),d++):(j=null,0===m&&b("[a-z]")),m--,null===j?j="":(j=null,d=n),null!==j?g=[g,c,e,f,h,j]:(g=null,d=l)):(g=null,d=l)):(g=null,d=l)):(g=null,d=l)):(g=null,d=l)):(g=null,d=l);null!==g&&(g={type:"ff",value:[g[0]],indices:[k,d-1]});null===g&&(d=k);return g}function $(){var g,c,e,f,h;h=f=d;g=E();null!==g?(c=A(),null===c&&(c=w()),c=null!==c?c:"",null!==c?("title"===a.substr(d,5)?(e="title",d+=5):(e=null,0===m&&b('"title"')),null!==e?g=[g,c,e]:(g=null,d=h)):(g=null,d=h)):(g=null,d=h);null!==
g&&(g={type:"integer_title",value:[g[0]],indices:[f,d-1]});null===g&&(d=f);return g}function P(){var g,c,e,f,h;h=f=d;31===a.charCodeAt(d)?(g="\u001f",d++):(g=null,0===m&&b('"\\x1F"'));null!==g?(c=fa(),null!==c?("/q\u001f"===a.substr(d,3)?(e="/q\u001f",d+=3):(e=null,0===m&&b('"/q\\x1F"')),null!==e?g=[g,c,e]:(g=null,d=h)):(g=null,d=h)):(g=null,d=h);null!==g&&(g={type:"b",value:g[1].value,indices:[f,d-1]});null===g&&(d=f);return g}function C(){var g,c,e,f,h,j;h=f=d;g=P();null!==g?(".1"===a.substr(d,
2)?(c=".1",d+=2):(c=null,0===m&&b('".1"')),null!==c?(j=d,m++,/^[0-9]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[0-9]")),m--,null===e?e="":(e=null,d=j),null!==e?g=[g,c,e]:(g=null,d=h)):(g=null,d=h)):(g=null,d=h);null!==g&&(g={type:"bc",value:[g[0],{type:"c",value:[{type:"integer",value:151,indices:[d-2,d-1]}],indices:[d-2,d-1]}],indices:[f,d-1]});null===g&&(d=f);return g}function J(){var g,c,e,f,h;h=f=d;g=C();null!==g?(46===a.charCodeAt(d)?(c=".",d++):(c=null,0===m&&b('"."')),null!==
c?(e=E(),null!==e?g=[g,c,e]:(g=null,d=h)):(g=null,d=h)):(g=null,d=h);null!==g&&(g={type:"bcv",value:[g[0],{type:"v",value:[g[2]],indices:[g[2].indices[0],g[2].indices[1]]}],indices:[f,d-1]});null===g&&(d=f);return g}function D(){var g,c,e,f,h,j,k,l;k=j=d;g=F();g=null!==g?g:"";null!==g?(c=E(),null!==c?(e=s(),null!==e?(/^[a-e]/.test(a.charAt(d))?(f=a.charAt(d),d++):(f=null,0===m&&b("[a-e]")),null!==f?(l=d,m++,/^[a-z]/.test(a.charAt(d))?(h=a.charAt(d),d++):(h=null,0===m&&b("[a-z]")),m--,null===h?h="":
(h=null,d=l),null!==h?g=[g,c,e,f,h]:(g=null,d=k)):(g=null,d=k)):(g=null,d=k)):(g=null,d=k)):(g=null,d=k);null!==g&&(g={type:"v",value:[g[1]],indices:[j,d-1]});null===g&&(d=j);return g}function v(){var a,b,c,e;e=c=d;a=F();a=null!==a?a:"";null!==a?(b=E(),null!==b?a=[a,b]:(a=null,d=e)):(a=null,d=e);null!==a&&(a={type:"v",value:[a[1]],indices:[c,d-1]});null===a&&(d=c);return a}function ba(){var g,c,e,f,h,j,k,l,n;l=k=d;g=s();null!==g?(n=d,"chapter"===a.substr(d,7)?(c="chapter",d+=7):(c=null,0===m&&b('"chapter"')),
null!==c?(115===a.charCodeAt(d)?(e="s",d++):(e=null,0===m&&b('"s"')),e=null!==e?e:"",null!==e?c=[c,e]:(c=null,d=n)):(c=null,d=n),null===c&&(n=d,"ch"===a.substr(d,2)?(c="ch",d+=2):(c=null,0===m&&b('"ch"')),null!==c?(97===a.charCodeAt(d)?(e="a",d++):(e=null,0===m&&b('"a"')),e=null!==e?e:"",null!==e?("pt"===a.substr(d,2)?(f="pt",d+=2):(f=null,0===m&&b('"pt"')),null!==f?(115===a.charCodeAt(d)?(h="s",d++):(h=null,0===m&&b('"s"')),h=null!==h?h:"",null!==h?(j=H(),j=null!==j?j:"",null!==j?c=[c,e,f,h,j]:(c=
null,d=n)):(c=null,d=n)):(c=null,d=n)):(c=null,d=n)):(c=null,d=n),null===c&&(n=d,"ch"===a.substr(d,2)?(c="ch",d+=2):(c=null,0===m&&b('"ch"')),null!==c?(97===a.charCodeAt(d)?(e="a",d++):(e=null,0===m&&b('"a"')),e=null!==e?e:"",null!==e?(112===a.charCodeAt(d)?(f="p",d++):(f=null,0===m&&b('"p"')),f=null!==f?f:"",null!==f?(115===a.charCodeAt(d)?(h="s",d++):(h=null,0===m&&b('"s"')),h=null!==h?h:"",null!==h?(j=H(),j=null!==j?j:"",null!==j?c=[c,e,f,h,j]:(c=null,d=n)):(c=null,d=n)):(c=null,d=n)):(c=null,
d=n)):(c=null,d=n))),null!==c?(e=s(),null!==e?g=[g,c,e]:(g=null,d=l)):(g=null,d=l)):(g=null,d=l);null!==g&&(g={type:"c_explicit"});null===g&&(d=k);return g}function F(){var g,c,e,f,h,j,k,l;k=j=d;g=s();null!==g?(l=d,"verse"===a.substr(d,5)?(c="verse",d+=5):(c=null,0===m&&b('"verse"')),null!==c?(115===a.charCodeAt(d)?(e="s",d++):(e=null,0===m&&b('"s"')),e=null!==e?e:"",null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),null===c&&(l=d,"vv"===a.substr(d,2)?(c="vv",d+=2):(c=null,0===m&&b('"vv"')),null!==c?(e=
H(),e=null!==e?e:"",null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),null===c&&(l=d,"ver"===a.substr(d,3)?(c="ver",d+=3):(c=null,0===m&&b('"ver"')),null!==c?(e=H(),e=null!==e?e:"",null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),null===c&&(l=d,118===a.charCodeAt(d)?(c="v",d++):(c=null,0===m&&b('"v"')),null!==c?(115===a.charCodeAt(d)?(e="s",d++):(e=null,0===m&&b('"s"')),e=null!==e?e:"",null!==e?(115===a.charCodeAt(d)?(f="s",d++):(f=null,0===m&&b('"s"')),f=null!==f?f:"",null!==f?(h=H(),h=null!==h?h:"",null!==
h?c=[c,e,f,h]:(c=null,d=l)):(c=null,d=l)):(c=null,d=l)):(c=null,d=l)))),null!==c?(e=s(),null!==e?g=[g,c,e]:(g=null,d=k)):(g=null,d=k)):(g=null,d=k);null!==g&&(g={type:"v_explicit"});null===g&&(d=j);return g}function A(){var g,c,e,f,h,j,k,l,n,p;k=d;g=s();if(null!==g){58===a.charCodeAt(d)?(e=":",d++):(e=null,0===m&&b('":"'));if(null!==e)for(c=[];null!==e;)c.push(e),58===a.charCodeAt(d)?(e=":",d++):(e=null,0===m&&b('":"'));else c=null;null===c&&(l=d,46===a.charCodeAt(d)?(c=".",d++):(c=null,0===m&&b('"."')),
null!==c?(n=d,m++,p=d,e=s(),null!==e?(46===a.charCodeAt(d)?(f=".",d++):(f=null,0===m&&b('"."')),null!==f?(h=s(),null!==h?(46===a.charCodeAt(d)?(j=".",d++):(j=null,0===m&&b('"."')),null!==j?e=[e,f,h,j]:(e=null,d=p)):(e=null,d=p)):(e=null,d=p)):(e=null,d=p),m--,null===e?e="":(e=null,d=n),null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l));null!==c?(e=s(),null!==e?g=[g,c,e]:(g=null,d=k)):(g=null,d=k)}else g=null,d=k;return g}function X(){var g,c,e,f;f=d;g=s();null!==g?(/^["']/.test(a.charAt(d))?(c=a.charAt(d),
d++):(c=null,0===m&&b("[\"']")),null!==c?(e=s(),null!==e?g=[g,c,e]:(g=null,d=f)):(g=null,d=f)):(g=null,d=f);null===g&&(g=aa());return g}function w(){var g,c,e,f,h,j,k,l,n,p;k=d;/^[,;\/:&\-\u2013\u2014~]/.test(a.charAt(d))?(c=a.charAt(d),d++):(c=null,0===m&&b("[,;\\/:&\\-\\u2013\\u2014~]"));null===c&&(l=d,46===a.charCodeAt(d)?(c=".",d++):(c=null,0===m&&b('"."')),null!==c?(n=d,m++,p=d,e=s(),null!==e?(46===a.charCodeAt(d)?(f=".",d++):(f=null,0===m&&b('"."')),null!==f?(h=s(),null!==h?(46===a.charCodeAt(d)?
(j=".",d++):(j=null,0===m&&b('"."')),null!==j?e=[e,f,h,j]:(e=null,d=p)):(e=null,d=p)):(e=null,d=p)):(e=null,d=p),m--,null===e?e="":(e=null,d=n),null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),null===c&&("see"===a.substr(d,3)?(c="see",d+=3):(c=null,0===m&&b('"see"')),null===c&&("compare"===a.substr(d,7)?(c="compare",d+=7):(c=null,0===m&&b('"compare"')),null===c&&(l=d,"cf"===a.substr(d,2)?(c="cf",d+=2):(c=null,0===m&&b('"cf"')),null!==c?(e=H(),e=null!==e?e:"",null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),
null===c&&("and"===a.substr(d,3)?(c="and",d+=3):(c=null,0===m&&b('"and"')),null===c&&("also"===a.substr(d,4)?(c="also",d+=4):(c=null,0===m&&b('"also"')),null===c&&(c=aa())))))));if(null!==c)for(g=[];null!==c;)g.push(c),/^[,;\/:&\-\u2013\u2014~]/.test(a.charAt(d))?(c=a.charAt(d),d++):(c=null,0===m&&b("[,;\\/:&\\-\\u2013\\u2014~]")),null===c&&(l=d,46===a.charCodeAt(d)?(c=".",d++):(c=null,0===m&&b('"."')),null!==c?(n=d,m++,p=d,e=s(),null!==e?(46===a.charCodeAt(d)?(f=".",d++):(f=null,0===m&&b('"."')),
null!==f?(h=s(),null!==h?(46===a.charCodeAt(d)?(j=".",d++):(j=null,0===m&&b('"."')),null!==j?e=[e,f,h,j]:(e=null,d=p)):(e=null,d=p)):(e=null,d=p)):(e=null,d=p),m--,null===e?e="":(e=null,d=n),null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),null===c&&("see"===a.substr(d,3)?(c="see",d+=3):(c=null,0===m&&b('"see"')),null===c&&("compare"===a.substr(d,7)?(c="compare",d+=7):(c=null,0===m&&b('"compare"')),null===c&&(l=d,"cf"===a.substr(d,2)?(c="cf",d+=2):(c=null,0===m&&b('"cf"')),null!==c?(e=H(),e=null!==e?e:
"",null!==e?c=[c,e]:(c=null,d=l)):(c=null,d=l),null===c&&("and"===a.substr(d,3)?(c="and",d+=3):(c=null,0===m&&b('"and"')),null===c&&("also"===a.substr(d,4)?(c="also",d+=4):(c=null,0===m&&b('"also"')),null===c&&(c=aa())))))));else g=null;null!==g&&(g="");null===g&&(d=k);return g}function O(){var c,e,f,h,j,k;j=d;c=s();if(null!==c){k=d;/^[\-\u2013\u2014]/.test(a.charAt(d))?(f=a.charAt(d),d++):(f=null,0===m&&b("[\\-\\u2013\\u2014]"));null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k);null===
f&&(k=d,"through"===a.substr(d,7)?(f="through",d+=7):(f=null,0===m&&b('"through"')),null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k),null===f&&(k=d,"thru"===a.substr(d,4)?(f="thru",d+=4):(f=null,0===m&&b('"thru"')),null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k),null===f&&(k=d,"to"===a.substr(d,2)?(f="to",d+=2):(f=null,0===m&&b('"to"')),null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k))));if(null!==f)for(e=[];null!==f;)e.push(f),k=d,/^[\-\u2013\u2014]/.test(a.charAt(d))?
(f=a.charAt(d),d++):(f=null,0===m&&b("[\\-\\u2013\\u2014]")),null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k),null===f&&(k=d,"through"===a.substr(d,7)?(f="through",d+=7):(f=null,0===m&&b('"through"')),null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k),null===f&&(k=d,"thru"===a.substr(d,4)?(f="thru",d+=4):(f=null,0===m&&b('"thru"')),null!==f?(h=s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k),null===f&&(k=d,"to"===a.substr(d,2)?(f="to",d+=2):(f=null,0===m&&b('"to"')),null!==f?(h=
s(),null!==h?f=[f,h]:(f=null,d=k)):(f=null,d=k))));else e=null;null!==e?c=[c,e]:(c=null,d=j)}else c=null,d=j;return c}function na(){var c,e,f,h;h=f=d;c=A();null===c&&(c=w());c=null!==c?c:"";null!==c?("title"===a.substr(d,5)?(e="title",d+=5):(e=null,0===m&&b('"title"')),null!==e?c=[c,e]:(c=null,d=h)):(c=null,d=h);null!==c&&(c={type:"title",value:[c[1]],indices:[f,d-1]});null===c&&(d=f);return c}function ia(){var c,e,f,h,j,k,l,n,p,r,t;r=d;c=s();null!==c?("from"===a.substr(d,4)?(e="from",d+=4):(e=null,
0===m&&b('"from"')),null===e&&("of"===a.substr(d,2)?(e="of",d+=2):(e=null,0===m&&b('"of"')),null===e&&("in"===a.substr(d,2)?(e="in",d+=2):(e=null,0===m&&b('"in"')))),null!==e?(f=s(),null!==f?(t=d,"the"===a.substr(d,3)?(h="the",d+=3):(h=null,0===m&&b('"the"')),null!==h?(j=s(),null!==j?("book"===a.substr(d,4)?(k="book",d+=4):(k=null,0===m&&b('"book"')),null!==k?(l=s(),null!==l?("of"===a.substr(d,2)?(n="of",d+=2):(n=null,0===m&&b('"of"')),null!==n?(p=s(),null!==p?h=[h,j,k,l,n,p]:(h=null,d=t)):(h=null,
d=t)):(h=null,d=t)):(h=null,d=t)):(h=null,d=t)):(h=null,d=t),h=null!==h?h:"",null!==h?c=[c,e,f,h]:(c=null,d=r)):(c=null,d=r)):(c=null,d=r)):(c=null,d=r);return c}function H(){var c,e,f,h,j,k,l,n,p;l=d;c=s();null!==c?(46===a.charCodeAt(d)?(e=".",d++):(e=null,0===m&&b('"."')),null!==e?(n=d,m++,p=d,f=s(),null!==f?(46===a.charCodeAt(d)?(h=".",d++):(h=null,0===m&&b('"."')),null!==h?(j=s(),null!==j?(46===a.charCodeAt(d)?(k=".",d++):(k=null,0===m&&b('"."')),null!==k?f=[f,h,j,k]:(f=null,d=p)):(f=null,d=p)):
(f=null,d=p)):(f=null,d=p),m--,null===f?f="":(f=null,d=n),null!==f?c=[c,e,f]:(c=null,d=l)):(c=null,d=l)):(c=null,d=l);return c}function oa(){var c,e,f,h,j,k,l,n,p,r,t;p=n=d;c=s();if(null!==c)if(/^[([]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[([]")),null!==e)if(f=s(),null!==f){r=d;h=Y();if(null!==h){j=[];t=d;k=w();null!==k?(l=Y(),null!==l?k=[k,l]:(k=null,d=t)):(k=null,d=t);for(;null!==k;)j.push(k),t=d,k=w(),null!==k?(l=Y(),null!==l?k=[k,l]:(k=null,d=t)):(k=null,d=t);null!==j?h=[h,
j]:(h=null,d=r)}else h=null,d=r;null!==h?(j=s(),null!==j?(/^[)\]]/.test(a.charAt(d))?(k=a.charAt(d),d++):(k=null,0===m&&b("[)\\]]")),null!==k?c=[c,e,f,h,j,k]:(c=null,d=p)):(c=null,d=p)):(c=null,d=p)}else c=null,d=p;else c=null,d=p;else c=null,d=p;null!==c&&(c={type:"translation_sequence",value:c[3],indices:[n,d-1]});null===c&&(d=n);return c}function pa(){var c,e,f,h,j,k,l,n,p,r;n=l=d;c=s();if(null!==c)if(p=d,44===a.charCodeAt(d)?(e=",",d++):(e=null,0===m&&b('","')),null!==e?(f=s(),null!==f?e=[e,f]:
(e=null,d=p)):(e=null,d=p),e=null!==e?e:"",null!==e){p=d;f=Y();if(null!==f){h=[];r=d;j=w();null!==j?(k=Y(),null!==k?j=[j,k]:(j=null,d=r)):(j=null,d=r);for(;null!==j;)h.push(j),r=d,j=w(),null!==j?(k=Y(),null!==k?j=[j,k]:(j=null,d=r)):(j=null,d=r);null!==h?f=[f,h]:(f=null,d=p)}else f=null,d=p;null!==f?c=[c,e,f]:(c=null,d=n)}else c=null,d=n;else c=null,d=n;null!==c&&(c={type:"translation_sequence",value:c[2],indices:[l,d-1]});null===c&&(d=l);return c}function Y(){var c,e,f,h,j;j=h=d;30===a.charCodeAt(d)?
(c="\u001e",d++):(c=null,0===m&&b('"\\x1E"'));null!==c?(e=fa(),null!==e?(30===a.charCodeAt(d)?(f="\u001e",d++):(f=null,0===m&&b('"\\x1E"')),null!==f?c=[c,e,f]:(c=null,d=j)):(c=null,d=j)):(c=null,d=j);null!==c&&(c={type:"translation",value:c[1].value,indices:[h,d-1]});null===c&&(d=h);return c}function E(){var c,e,f,h,j,k;k=j=h=d;/^[0-9]/.test(a.charAt(d))?(c=a.charAt(d),d++):(c=null,0===m&&b("[0-9]"));null!==c?(/^[0-9]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[0-9]")),e=null!==e?e:
"",null!==e?(/^[0-9]/.test(a.charAt(d))?(f=a.charAt(d),d++):(f=null,0===m&&b("[0-9]")),f=null!==f?f:"",null!==f?c=[c,e,f]:(c=null,d=k)):(c=null,d=k)):(c=null,d=k);null!==c?(k=d,m++,/^[0-9]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[0-9]")),null===e&&(",000"===a.substr(d,4)?(e=",000",d+=4):(e=null,0===m&&b('",000"'))),m--,null===e?e="":(e=null,d=k),null!==e?c=[c,e]:(c=null,d=j)):(c=null,d=j);null!==c&&(c={type:"integer",value:parseInt(c[0].join(""),10),indices:[h,d-1]});null===c&&(d=
h);return c}function fa(){var c,e,f;f=d;/^[0-9]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[0-9]"));if(null!==e)for(c=[];null!==e;)c.push(e),/^[0-9]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[0-9]"));else c=null;null!==c&&(c={type:"integer",value:parseInt(c.join(""),10),indices:[f,d-1]});null===c&&(d=f);return c}function qa(){var c,e,f;f=d;/^[^\x1F\x1E([]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[^\\x1F\\x1E([]"));if(null!==e)for(c=[];null!==e;)c.push(e),
/^[^\x1F\x1E([]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[^\\x1F\\x1E([]"));else c=null;null!==c&&(c={type:"word",value:c.join(""),indices:[f,d-1]});null===c&&(d=f);return c}function ra(){var c,e;e=d;/^[([]/.test(a.charAt(d))?(c=a.charAt(d),d++):(c=null,0===m&&b("[([]"));null!==c&&(c={type:"stop",value:c,indices:[e,d-1]});null===c&&(d=e);return c}function s(){var a;a=aa();return null!==a?a:""}function aa(){var c,e;/^[\s\xa0*]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[\\s\\xa0*]"));
if(null!==e)for(c=[];null!==e;)c.push(e),/^[\s\xa0*]/.test(a.charAt(d))?(e=a.charAt(d),d++):(e=null,0===m&&b("[\\s\\xa0*]"));else c=null;return c}function ga(a){a.sort();for(var c=null,b=[],d=0;d<a.length;d++)a[d]!==c&&(b.push(a[d]),c=a[d]);return b}var I={start:function(){var a,b;b=ea();null===b&&(b=c(),null===b&&(b=da(),null===b&&(b=j(),null===b&&(b=Q(),null===b&&(b=R(),null===b&&(b=t(),null===b&&(b=J(),null===b&&(b=G(),null===b&&(b=B(),null===b&&(b=C(),null===b&&(b=p(),null===b&&(b=S(),null===
b&&(b=K(),null===b&&(b=l(),null===b&&(b=L(),null===b&&(b=k(),null===b&&(b=T(),null===b&&(b=U(),null===b&&(b=M(),null===b&&(b=N(),null===b&&(b=oa(),null===b&&(b=pa(),null===b&&(b=w(),null===b&&(b=Z(),null===b&&(b=$(),null===b&&(b=V(),null===b&&(b=W(),null===b&&(b=D(),null===b&&(b=E(),null===b&&(b=z(),null===b&&(b=v(),null===b&&(b=qa(),null===b&&(b=ra())))))))))))))))))))))))))))))))));if(null!==b)for(a=[];null!==b;)a.push(b),b=ea(),null===b&&(b=c(),null===b&&(b=da(),null===b&&(b=j(),null===b&&(b=Q(),
null===b&&(b=R(),null===b&&(b=t(),null===b&&(b=J(),null===b&&(b=G(),null===b&&(b=B(),null===b&&(b=C(),null===b&&(b=p(),null===b&&(b=S(),null===b&&(b=K(),null===b&&(b=l(),null===b&&(b=L(),null===b&&(b=k(),null===b&&(b=T(),null===b&&(b=U(),null===b&&(b=M(),null===b&&(b=N(),null===b&&(b=oa(),null===b&&(b=pa(),null===b&&(b=w(),null===b&&(b=Z(),null===b&&(b=$(),null===b&&(b=V(),null===b&&(b=W(),null===b&&(b=D(),null===b&&(b=E(),null===b&&(b=z(),null===b&&(b=v(),null===b&&(b=qa(),null===b&&(b=ra())))))))))))))))))))))))))))))))));
else a=null;return a},sequence:c,sequence_post_enclosed:f,sequence_post:h,range:j,b:k,b_range:l,bc:p,bc_comma:r,bc_title:t,bcv:G,bcv_weak:B,bcv_comma:R,bcv_hyphen_range:ea,bv:K,cb:M,cb_range:da,cbv:T,cb_ordinal:N,cbv_ordinal:U,c_psalm:L,cv_psalm:S,c_title:Z,cv:V,cv_weak:W,c:z,ff:Q,integer_title:$,ps151_b:P,ps151_bc:C,ps151_bcv:J,v_letter:D,v:v,c_explicit:ba,v_explicit:F,cv_sep:A,cv_sep_weak:X,sequence_sep:w,range_sep:O,title:na,in_book_of:ia,abbrev:H,translation_sequence_enclosed:oa,translation_sequence:pa,
translation:Y,integer:E,any_integer:fa,word:qa,word_parenthesis:ra,sp:s,space:aa};if(void 0!==e){if(void 0===I[e])throw Error("Invalid rule name: "+ua(e)+".");}else e="start";var d=0,m=0,ca=0,ma=[],I=I[e]();if(null===I||d!==a.length){for(var I=Math.max(d,ca),ha=I<a.length?a.charAt(I):null,sa=1,ja=1,ka=!1,ta=0;ta<Math.max(d,ca);ta++){var la=a.charAt(ta);"\n"===la?(ka||sa++,ja=1,ka=!1):"\r"===la||"\u2028"===la||"\u2029"===la?(sa++,ja=1,ka=!0):(ja++,ka=!1)}throw new this.SyntaxError(ga(ma),ha,I,sa,ja);
}return I},toSource:function(){return this._source},SyntaxError:function(a,e,b,c,f){this.name="SyntaxError";this.expected=a;this.found=e;switch(a.length){case 0:a="end of input";break;case 1:a=a[0];break;default:a=a.slice(0,a.length-1).join(", ")+" or "+a[a.length-1]}e=e?ua(e):"end of input";this.message="Expected "+a+" but "+e+" found.";this.offset=b;this.line=c;this.column=f}};j.SyntaxError.prototype=Error.prototype;ha=j}).call(this);
define("bcv", (function (global) {
    return function () {
        var ret, fn;
       fn = function () {
                return new this.bcv_parser();
            };
        ret = fn.apply(global, arguments);
        return ret || global.bcv_parser;
    };
}(this)));

/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('verseKey',["bcv", "versificationMgr"], function (bcv, versificationMgr) {
    function parseVkey(inVKey, inV11n) {
        var key = {};
        key.osis = bcv.parse(inVKey).osis();
        if (key.osis === "") {
            //bcv.parse().osis() returns "" for passages it cannot resolve
            key.osis = "Matt.1"; //bcv.parse(inVKey + " 1").osis();
        }
        var split = key.osis.split("-")[0].split(".");

        key.book = split[0];
        key.chapter = (isNaN(parseInt(split[1], 10))) ? 1 : parseInt(split[1], 10);
        key.verse = parseInt(split[2], 10);
        key.bookNum = versificationMgr.getBookNum(key.book, inV11n);
        //console.log(key, key.osis, split);
        return key;
    }

    function parseVerseList(inVKey, inV11n) {
        var verseList = [],
            key = inVKey;
        if (typeof inVKey === "string")
            key = parseVkey(inVKey);

        //Check if we have a passage range like John.3.10-John.3.16 or Gen.3-Gen.4
        if (key.osis.split("-").length > 1) {

        //check if we have a passage like Mt 3 or Ps 123
        } else if (isNaN(key.verse)) {
            var bookNum = versificationMgr.getBookNum(key.book);
            var verseMax = versificationMgr.getVersesInChapter(bookNum, key.chapter, inV11n);
            for (var i=0;i<verseMax; i++) {
                verseList.push({osis: key.book+"."+key.chapter+"."+(i+1), book: key.book, bookNum: bookNum, chapter: key.chapter, verse: i+1});
            }
        } else {
            verseList.push(key);
        }

        return verseList;
    }

    function next(inVKey, inV11n) {
        var key = parseVkey(inVKey, inV11n),
            maxChapter = versificationMgr.getChapterMax(key.bookNum, inV11n);

        if (key.chapter < maxChapter) {
            key.chapter++;
        } else {
            key.bookNum = (key.bookNum < 65) ? ++key.bookNum : 65;
            key.chapter = (key.bookNum < 65) ? 1 : maxChapter;
            key.book = versificationMgr.getBook(key.bookNum, inV11n).abbrev;
        }
        key.osis = key.book+"."+key.chapter;

        return key;
    }

    function previous(inVKey, inV11n) {
        var key = parseVkey(inVKey, inV11n),
            maxChapter = versificationMgr.getChapterMax(key.bookNum-1, inV11n);

        if (key.chapter > 1) {
            --key.chapter;
        } else {
            key.bookNum = (key.bookNum > 0) ? --key.bookNum : 0;
            key.chapter = (key.bookNum === 0) ? 1 : maxChapter;
            key.book = versificationMgr.getBook(key.bookNum, inV11n).abbrev;
        }
        key.osis = key.book+"."+key.chapter;

        return key;
    }

    return {
        parse: parseVkey,
        parseVerseList: parseVerseList,
        next: next,
        previous: previous
    };
});
// wrapper for non-node envs
;(function (sax) {

sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }
sax.SAXParser = SAXParser
sax.SAXStream = SAXStream
sax.createStream = createStream

// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.
// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),
// since that's the earliest that a buffer overrun could occur.  This way, checks are
// as rare as required, but as often as necessary to ensure never crossing this bound.
// Furthermore, buffers are only tested at most once per write(), so passing a very
// large string into write() might have undesirable effects, but this is manageable by
// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme
// edge case, result in creating at most one complete copy of the string passed in.
// Set to Infinity to have unlimited buffers.
sax.MAX_BUFFER_LENGTH = 64 * 1024

var buffers = [
  "comment", "sgmlDecl", "textNode", "tagName", "doctype",
  "procInstName", "procInstBody", "entity", "attribName",
  "attribValue", "cdata", "script"
]

sax.EVENTS = // for discoverability.
  [ "text"
  , "processinginstruction"
  , "sgmldeclaration"
  , "doctype"
  , "comment"
  , "attribute"
  , "opentag"
  , "closetag"
  , "opencdata"
  , "cdata"
  , "closecdata"
  , "error"
  , "end"
  , "ready"
  , "script"
  , "opennamespace"
  , "closenamespace"
  ]

function SAXParser (strict, opt) {
  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)

  var parser = this
  clearBuffers(parser)
  parser.q = parser.c = ""
  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH
  parser.opt = opt || {}
  parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags
  parser.looseCase = parser.opt.lowercase ? "toLowerCase" : "toUpperCase"
  parser.tags = []
  parser.closed = parser.closedRoot = parser.sawRoot = false
  parser.tag = parser.error = null
  parser.strict = !!strict
  parser.noscript = !!(strict || parser.opt.noscript)
  parser.state = S.BEGIN
  parser.ENTITIES = Object.create(sax.ENTITIES)
  parser.attribList = []

  // namespaces form a prototype chain.
  // it always points at the current tag,
  // which protos to its parent tag.
  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)

  // mostly just for error reporting
  parser.trackPosition = parser.opt.position !== false
  if (parser.trackPosition) {
    parser.position = parser.line = parser.column = 0
  }
  emit(parser, "onready")
}

if (!Object.create) Object.create = function (o) {
  function f () { this.__proto__ = o }
  f.prototype = o
  return new f
}

if (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {
  return o.__proto__
}

if (!Object.keys) Object.keys = function (o) {
  var a = []
  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)
  return a
}

function checkBufferLength (parser) {
  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)
    , maxActual = 0
  for (var i = 0, l = buffers.length; i < l; i ++) {
    var len = parser[buffers[i]].length
    if (len > maxAllowed) {
      // Text/cdata nodes can get big, and since they're buffered,
      // we can get here under normal conditions.
      // Avoid issues by emitting the text node now,
      // so at least it won't get any bigger.
      switch (buffers[i]) {
        case "textNode":
          closeText(parser)
        break

        case "cdata":
          emitNode(parser, "oncdata", parser.cdata)
          parser.cdata = ""
        break

        case "script":
          emitNode(parser, "onscript", parser.script)
          parser.script = ""
        break

        default:
          error(parser, "Max buffer length exceeded: "+buffers[i])
      }
    }
    maxActual = Math.max(maxActual, len)
  }
  // schedule the next check for the earliest possible buffer overrun.
  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)
                             + parser.position
}

function clearBuffers (parser) {
  for (var i = 0, l = buffers.length; i < l; i ++) {
    parser[buffers[i]] = ""
  }
}

SAXParser.prototype =
  { end: function () { end(this) }
  , write: write
  , resume: function () { this.error = null; return this }
  , close: function () { return this.write(null) }
  }

try {
  var Stream = require("stream").Stream
} catch (ex) {
  var Stream = function () {}
}


var streamWraps = sax.EVENTS.filter(function (ev) {
  return ev !== "error" && ev !== "end"
})

function createStream (strict, opt) {
  return new SAXStream(strict, opt)
}

function SAXStream (strict, opt) {
  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)

  Stream.apply(this)

  this._parser = new SAXParser(strict, opt)
  this.writable = true
  this.readable = true


  var me = this

  this._parser.onend = function () {
    me.emit("end")
  }

  this._parser.onerror = function (er) {
    me.emit("error", er)

    // if didn't throw, then means error was handled.
    // go ahead and clear error, so we can write again.
    me._parser.error = null
  }

  this._decoder = null;

  streamWraps.forEach(function (ev) {
    Object.defineProperty(me, "on" + ev, {
      get: function () { return me._parser["on" + ev] },
      set: function (h) {
        if (!h) {
          me.removeAllListeners(ev)
          return me._parser["on"+ev] = h
        }
        me.on(ev, h)
      },
      enumerable: true,
      configurable: false
    })
  })
}

SAXStream.prototype = Object.create(Stream.prototype,
  { constructor: { value: SAXStream } })

SAXStream.prototype.write = function (data) {
  if (typeof Buffer === 'function' &&
      typeof Buffer.isBuffer === 'function' &&
      Buffer.isBuffer(data)) {
    if (!this._decoder) {
      var SD = require('string_decoder').StringDecoder
      this._decoder = new SD('utf8')
    }
    data = this._decoder.write(data);
  }

  this._parser.write(data.toString())
  this.emit("data", data)
  return true
}

SAXStream.prototype.end = function (chunk) {
  if (chunk && chunk.length) this.write(chunk)
  this._parser.end()
  return true
}

SAXStream.prototype.on = function (ev, handler) {
  var me = this
  if (!me._parser["on"+ev] && streamWraps.indexOf(ev) !== -1) {
    me._parser["on"+ev] = function () {
      var args = arguments.length === 1 ? [arguments[0]]
               : Array.apply(null, arguments)
      args.splice(0, 0, ev)
      me.emit.apply(me, args)
    }
  }

  return Stream.prototype.on.call(me, ev, handler)
}



// character classes and tokens
var whitespace = "\r\n\t "
  // this really needs to be replaced with character classes.
  // XML allows all manner of ridiculous numbers and digits.
  , number = "0124356789"
  , letter = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  // (Letter | "_" | ":")
  , quote = "'\""
  , entity = number+letter+"#"
  , attribEnd = whitespace + ">"
  , CDATA = "[CDATA["
  , DOCTYPE = "DOCTYPE"
  , XML_NAMESPACE = "http://www.w3.org/XML/1998/namespace"
  , XMLNS_NAMESPACE = "http://www.w3.org/2000/xmlns/"
  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }

// turn all the string character sets into character class objects.
whitespace = charClass(whitespace)
number = charClass(number)
letter = charClass(letter)

// http://www.w3.org/TR/REC-xml/#NT-NameStartChar
// This implementation works on strings, a single character at a time
// as such, it cannot ever support astral-plane characters (10000-EFFFF)
// without a significant breaking change to either this  parser, or the
// JavaScript language.  Implementation of an emoji-capable xml parser
// is left as an exercise for the reader.
var nameStart = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/

var nameBody = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/

quote = charClass(quote)
entity = charClass(entity)
attribEnd = charClass(attribEnd)

function charClass (str) {
  return str.split("").reduce(function (s, c) {
    s[c] = true
    return s
  }, {})
}

function isRegExp (c) {
  return Object.prototype.toString.call(c) === '[object RegExp]'
}

function is (charclass, c) {
  return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]
}

function not (charclass, c) {
  return !is(charclass, c)
}

var S = 0
sax.STATE =
{ BEGIN                     : S++
, TEXT                      : S++ // general stuff
, TEXT_ENTITY               : S++ // &amp and such.
, OPEN_WAKA                 : S++ // <
, SGML_DECL                 : S++ // <!BLARG
, SGML_DECL_QUOTED          : S++ // <!BLARG foo "bar
, DOCTYPE                   : S++ // <!DOCTYPE
, DOCTYPE_QUOTED            : S++ // <!DOCTYPE "//blah
, DOCTYPE_DTD               : S++ // <!DOCTYPE "//blah" [ ...
, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE "//blah" [ "foo
, COMMENT_STARTING          : S++ // <!-
, COMMENT                   : S++ // <!--
, COMMENT_ENDING            : S++ // <!-- blah -
, COMMENT_ENDED             : S++ // <!-- blah --
, CDATA                     : S++ // <![CDATA[ something
, CDATA_ENDING              : S++ // ]
, CDATA_ENDING_2            : S++ // ]]
, PROC_INST                 : S++ // <?hi
, PROC_INST_BODY            : S++ // <?hi there
, PROC_INST_ENDING          : S++ // <?hi "there" ?
, OPEN_TAG                  : S++ // <strong
, OPEN_TAG_SLASH            : S++ // <strong /
, ATTRIB                    : S++ // <a
, ATTRIB_NAME               : S++ // <a foo
, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _
, ATTRIB_VALUE              : S++ // <a foo=
, ATTRIB_VALUE_QUOTED       : S++ // <a foo="bar
, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar
, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar="&quot;"
, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;
, CLOSE_TAG                 : S++ // </a
, CLOSE_TAG_SAW_WHITE       : S++ // </a   >
, SCRIPT                    : S++ // <script> ...
, SCRIPT_ENDING             : S++ // <script> ... <
}

sax.ENTITIES =
{ "amp" : "&"
, "gt" : ">"
, "lt" : "<"
, "quot" : "\""
, "apos" : "'"
, "AElig" : 198
, "Aacute" : 193
, "Acirc" : 194
, "Agrave" : 192
, "Aring" : 197
, "Atilde" : 195
, "Auml" : 196
, "Ccedil" : 199
, "ETH" : 208
, "Eacute" : 201
, "Ecirc" : 202
, "Egrave" : 200
, "Euml" : 203
, "Iacute" : 205
, "Icirc" : 206
, "Igrave" : 204
, "Iuml" : 207
, "Ntilde" : 209
, "Oacute" : 211
, "Ocirc" : 212
, "Ograve" : 210
, "Oslash" : 216
, "Otilde" : 213
, "Ouml" : 214
, "THORN" : 222
, "Uacute" : 218
, "Ucirc" : 219
, "Ugrave" : 217
, "Uuml" : 220
, "Yacute" : 221
, "aacute" : 225
, "acirc" : 226
, "aelig" : 230
, "agrave" : 224
, "aring" : 229
, "atilde" : 227
, "auml" : 228
, "ccedil" : 231
, "eacute" : 233
, "ecirc" : 234
, "egrave" : 232
, "eth" : 240
, "euml" : 235
, "iacute" : 237
, "icirc" : 238
, "igrave" : 236
, "iuml" : 239
, "ntilde" : 241
, "oacute" : 243
, "ocirc" : 244
, "ograve" : 242
, "oslash" : 248
, "otilde" : 245
, "ouml" : 246
, "szlig" : 223
, "thorn" : 254
, "uacute" : 250
, "ucirc" : 251
, "ugrave" : 249
, "uuml" : 252
, "yacute" : 253
, "yuml" : 255
, "copy" : 169
, "reg" : 174
, "nbsp" : 160
, "iexcl" : 161
, "cent" : 162
, "pound" : 163
, "curren" : 164
, "yen" : 165
, "brvbar" : 166
, "sect" : 167
, "uml" : 168
, "ordf" : 170
, "laquo" : 171
, "not" : 172
, "shy" : 173
, "macr" : 175
, "deg" : 176
, "plusmn" : 177
, "sup1" : 185
, "sup2" : 178
, "sup3" : 179
, "acute" : 180
, "micro" : 181
, "para" : 182
, "middot" : 183
, "cedil" : 184
, "ordm" : 186
, "raquo" : 187
, "frac14" : 188
, "frac12" : 189
, "frac34" : 190
, "iquest" : 191
, "times" : 215
, "divide" : 247
, "OElig" : 338
, "oelig" : 339
, "Scaron" : 352
, "scaron" : 353
, "Yuml" : 376
, "fnof" : 402
, "circ" : 710
, "tilde" : 732
, "Alpha" : 913
, "Beta" : 914
, "Gamma" : 915
, "Delta" : 916
, "Epsilon" : 917
, "Zeta" : 918
, "Eta" : 919
, "Theta" : 920
, "Iota" : 921
, "Kappa" : 922
, "Lambda" : 923
, "Mu" : 924
, "Nu" : 925
, "Xi" : 926
, "Omicron" : 927
, "Pi" : 928
, "Rho" : 929
, "Sigma" : 931
, "Tau" : 932
, "Upsilon" : 933
, "Phi" : 934
, "Chi" : 935
, "Psi" : 936
, "Omega" : 937
, "alpha" : 945
, "beta" : 946
, "gamma" : 947
, "delta" : 948
, "epsilon" : 949
, "zeta" : 950
, "eta" : 951
, "theta" : 952
, "iota" : 953
, "kappa" : 954
, "lambda" : 955
, "mu" : 956
, "nu" : 957
, "xi" : 958
, "omicron" : 959
, "pi" : 960
, "rho" : 961
, "sigmaf" : 962
, "sigma" : 963
, "tau" : 964
, "upsilon" : 965
, "phi" : 966
, "chi" : 967
, "psi" : 968
, "omega" : 969
, "thetasym" : 977
, "upsih" : 978
, "piv" : 982
, "ensp" : 8194
, "emsp" : 8195
, "thinsp" : 8201
, "zwnj" : 8204
, "zwj" : 8205
, "lrm" : 8206
, "rlm" : 8207
, "ndash" : 8211
, "mdash" : 8212
, "lsquo" : 8216
, "rsquo" : 8217
, "sbquo" : 8218
, "ldquo" : 8220
, "rdquo" : 8221
, "bdquo" : 8222
, "dagger" : 8224
, "Dagger" : 8225
, "bull" : 8226
, "hellip" : 8230
, "permil" : 8240
, "prime" : 8242
, "Prime" : 8243
, "lsaquo" : 8249
, "rsaquo" : 8250
, "oline" : 8254
, "frasl" : 8260
, "euro" : 8364
, "image" : 8465
, "weierp" : 8472
, "real" : 8476
, "trade" : 8482
, "alefsym" : 8501
, "larr" : 8592
, "uarr" : 8593
, "rarr" : 8594
, "darr" : 8595
, "harr" : 8596
, "crarr" : 8629
, "lArr" : 8656
, "uArr" : 8657
, "rArr" : 8658
, "dArr" : 8659
, "hArr" : 8660
, "forall" : 8704
, "part" : 8706
, "exist" : 8707
, "empty" : 8709
, "nabla" : 8711
, "isin" : 8712
, "notin" : 8713
, "ni" : 8715
, "prod" : 8719
, "sum" : 8721
, "minus" : 8722
, "lowast" : 8727
, "radic" : 8730
, "prop" : 8733
, "infin" : 8734
, "ang" : 8736
, "and" : 8743
, "or" : 8744
, "cap" : 8745
, "cup" : 8746
, "int" : 8747
, "there4" : 8756
, "sim" : 8764
, "cong" : 8773
, "asymp" : 8776
, "ne" : 8800
, "equiv" : 8801
, "le" : 8804
, "ge" : 8805
, "sub" : 8834
, "sup" : 8835
, "nsub" : 8836
, "sube" : 8838
, "supe" : 8839
, "oplus" : 8853
, "otimes" : 8855
, "perp" : 8869
, "sdot" : 8901
, "lceil" : 8968
, "rceil" : 8969
, "lfloor" : 8970
, "rfloor" : 8971
, "lang" : 9001
, "rang" : 9002
, "loz" : 9674
, "spades" : 9824
, "clubs" : 9827
, "hearts" : 9829
, "diams" : 9830
}

Object.keys(sax.ENTITIES).forEach(function (key) {
    var e = sax.ENTITIES[key]
    var s = typeof e === 'number' ? String.fromCharCode(e) : e
    sax.ENTITIES[key] = s
})

for (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S

// shorthand
S = sax.STATE

function emit (parser, event, data) {
  parser[event] && parser[event](data)
}

function emitNode (parser, nodeType, data) {
  if (parser.textNode) closeText(parser)
  emit(parser, nodeType, data)
}

function closeText (parser) {
  parser.textNode = textopts(parser.opt, parser.textNode)
  if (parser.textNode) emit(parser, "ontext", parser.textNode)
  parser.textNode = ""
}

function textopts (opt, text) {
  if (opt.trim) text = text.trim()
  if (opt.normalize) text = text.replace(/\s+/g, " ")
  return text
}

function error (parser, er) {
  closeText(parser)
  if (parser.trackPosition) {
    er += "\nLine: "+parser.line+
          "\nColumn: "+parser.column+
          "\nChar: "+parser.c
  }
  er = new Error(er)
  parser.error = er
  emit(parser, "onerror", er)
  return parser
}

function end (parser) {
  if (!parser.closedRoot) strictFail(parser, "Unclosed root tag")
  if (parser.state !== S.TEXT) error(parser, "Unexpected end")
  closeText(parser)
  parser.c = ""
  parser.closed = true
  emit(parser, "onend")
  SAXParser.call(parser, parser.strict, parser.opt)
  return parser
}

function strictFail (parser, message) {
  if (typeof parser !== 'object' || !(parser instanceof SAXParser))
    throw new Error('bad call to strictFail');
  if (parser.strict) error(parser, message)
}

function newTag (parser) {
  if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()
  var parent = parser.tags[parser.tags.length - 1] || parser
    , tag = parser.tag = { name : parser.tagName, attributes : {} }

  // will be overridden if tag contails an xmlns="foo" or xmlns:foo="bar"
  if (parser.opt.xmlns) tag.ns = parent.ns
  parser.attribList.length = 0
}

function qname (name) {
  var i = name.indexOf(":")
    , qualName = i < 0 ? [ "", name ] : name.split(":")
    , prefix = qualName[0]
    , local = qualName[1]

  // <x "xmlns"="http://foo">
  if (name === "xmlns") {
    prefix = "xmlns"
    local = ""
  }

  return { prefix: prefix, local: local }
}

function attrib (parser) {
  if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()

  if (parser.attribList.indexOf(parser.attribName) !== -1 ||
      parser.tag.attributes.hasOwnProperty(parser.attribName)) {
    return parser.attribName = parser.attribValue = ""
  }

  if (parser.opt.xmlns) {
    var qn = qname(parser.attribName)
      , prefix = qn.prefix
      , local = qn.local

    if (prefix === "xmlns") {
      // namespace binding attribute; push the binding into scope
      if (local === "xml" && parser.attribValue !== XML_NAMESPACE) {
        strictFail( parser
                  , "xml: prefix must be bound to " + XML_NAMESPACE + "\n"
                  + "Actual: " + parser.attribValue )
      } else if (local === "xmlns" && parser.attribValue !== XMLNS_NAMESPACE) {
        strictFail( parser
                  , "xmlns: prefix must be bound to " + XMLNS_NAMESPACE + "\n"
                  + "Actual: " + parser.attribValue )
      } else {
        var tag = parser.tag
          , parent = parser.tags[parser.tags.length - 1] || parser
        if (tag.ns === parent.ns) {
          tag.ns = Object.create(parent.ns)
        }
        tag.ns[local] = parser.attribValue
      }
    }

    // defer onattribute events until all attributes have been seen
    // so any new bindings can take effect; preserve attribute order
    // so deferred events can be emitted in document order
    parser.attribList.push([parser.attribName, parser.attribValue])
  } else {
    // in non-xmlns mode, we can emit the event right away
    parser.tag.attributes[parser.attribName] = parser.attribValue
    emitNode( parser
            , "onattribute"
            , { name: parser.attribName
              , value: parser.attribValue } )
  }

  parser.attribName = parser.attribValue = ""
}

function openTag (parser, selfClosing) {
  if (parser.opt.xmlns) {
    // emit namespace binding events
    var tag = parser.tag

    // add namespace info to tag
    var qn = qname(parser.tagName)
    tag.prefix = qn.prefix
    tag.local = qn.local
    tag.uri = tag.ns[qn.prefix] || ""

    if (tag.prefix && !tag.uri) {
      strictFail(parser, "Unbound namespace prefix: "
                       + JSON.stringify(parser.tagName))
      tag.uri = qn.prefix
    }

    var parent = parser.tags[parser.tags.length - 1] || parser
    if (tag.ns && parent.ns !== tag.ns) {
      Object.keys(tag.ns).forEach(function (p) {
        emitNode( parser
                , "onopennamespace"
                , { prefix: p , uri: tag.ns[p] } )
      })
    }

    // handle deferred onattribute events
    // Note: do not apply default ns to attributes:
    //   http://www.w3.org/TR/REC-xml-names/#defaulting
    for (var i = 0, l = parser.attribList.length; i < l; i ++) {
      var nv = parser.attribList[i]
      var name = nv[0]
        , value = nv[1]
        , qualName = qname(name)
        , prefix = qualName.prefix
        , local = qualName.local
        , uri = prefix == "" ? "" : (tag.ns[prefix] || "")
        , a = { name: name
              , value: value
              , prefix: prefix
              , local: local
              , uri: uri
              }

      // if there's any attributes with an undefined namespace,
      // then fail on them now.
      if (prefix && prefix != "xmlns" && !uri) {
        strictFail(parser, "Unbound namespace prefix: "
                         + JSON.stringify(prefix))
        a.uri = prefix
      }
      parser.tag.attributes[name] = a
      emitNode(parser, "onattribute", a)
    }
    parser.attribList.length = 0
  }

  parser.tag.isSelfClosing = !!selfClosing

  // process the tag
  parser.sawRoot = true
  parser.tags.push(parser.tag)
  emitNode(parser, "onopentag", parser.tag)
  if (!selfClosing) {
    // special case for <script> in non-strict mode.
    if (!parser.noscript && parser.tagName.toLowerCase() === "script") {
      parser.state = S.SCRIPT
    } else {
      parser.state = S.TEXT
    }
    parser.tag = null
    parser.tagName = ""
  }
  parser.attribName = parser.attribValue = ""
  parser.attribList.length = 0
}

function closeTag (parser) {
  if (!parser.tagName) {
    strictFail(parser, "Weird empty close tag.")
    parser.textNode += "</>"
    parser.state = S.TEXT
    return
  }

  if (parser.script) {
    if (parser.tagName !== "script") {
      parser.script += "</" + parser.tagName + ">"
      parser.tagName = ""
      parser.state = S.SCRIPT
      return
    }
    emitNode(parser, "onscript", parser.script)
    parser.script = ""
  }

  // first make sure that the closing tag actually exists.
  // <a><b></c></b></a> will close everything, otherwise.
  var t = parser.tags.length
  var tagName = parser.tagName
  if (!parser.strict) tagName = tagName[parser.looseCase]()
  var closeTo = tagName
  while (t --) {
    var close = parser.tags[t]
    if (close.name !== closeTo) {
      // fail the first time in strict mode
      strictFail(parser, "Unexpected close tag")
    } else break
  }

  // didn't find it.  we already failed for strict, so just abort.
  if (t < 0) {
    strictFail(parser, "Unmatched closing tag: "+parser.tagName)
    parser.textNode += "</" + parser.tagName + ">"
    parser.state = S.TEXT
    return
  }
  parser.tagName = tagName
  var s = parser.tags.length
  while (s --> t) {
    var tag = parser.tag = parser.tags.pop()
    parser.tagName = parser.tag.name
    emitNode(parser, "onclosetag", parser.tagName)

    var x = {}
    for (var i in tag.ns) x[i] = tag.ns[i]

    var parent = parser.tags[parser.tags.length - 1] || parser
    if (parser.opt.xmlns && tag.ns !== parent.ns) {
      // remove namespace bindings introduced by tag
      Object.keys(tag.ns).forEach(function (p) {
        var n = tag.ns[p]
        emitNode(parser, "onclosenamespace", { prefix: p, uri: n })
      })
    }
  }
  if (t === 0) parser.closedRoot = true
  parser.tagName = parser.attribValue = parser.attribName = ""
  parser.attribList.length = 0
  parser.state = S.TEXT
}

function parseEntity (parser) {
  var entity = parser.entity
    , entityLC = entity.toLowerCase()
    , num
    , numStr = ""
  if (parser.ENTITIES[entity])
    return parser.ENTITIES[entity]
  if (parser.ENTITIES[entityLC])
    return parser.ENTITIES[entityLC]
  entity = entityLC
  if (entity.charAt(0) === "#") {
    if (entity.charAt(1) === "x") {
      entity = entity.slice(2)
      num = parseInt(entity, 16)
      numStr = num.toString(16)
    } else {
      entity = entity.slice(1)
      num = parseInt(entity, 10)
      numStr = num.toString(10)
    }
  }
  entity = entity.replace(/^0+/, "")
  if (numStr.toLowerCase() !== entity) {
    strictFail(parser, "Invalid character entity")
    return "&"+parser.entity + ";"
  }
  return String.fromCharCode(num)
}

function write (chunk) {
  var parser = this
  if (this.error) throw this.error
  if (parser.closed) return error(parser,
    "Cannot write after close. Assign an onready handler.")
  if (chunk === null) return end(parser)
  var i = 0, c = ""
  while (parser.c = c = chunk.charAt(i++)) {
    if (parser.trackPosition) {
      parser.position ++
      if (c === "\n") {
        parser.line ++
        parser.column = 0
      } else parser.column ++
    }
    switch (parser.state) {

      case S.BEGIN:
        if (c === "<") {
          parser.state = S.OPEN_WAKA
          parser.startTagPosition = parser.position
        } else if (not(whitespace,c)) {
          // have to process this as a text node.
          // weird, but happens.
          strictFail(parser, "Non-whitespace before first tag.")
          parser.textNode = c
          parser.state = S.TEXT
        }
      continue

      case S.TEXT:
        if (parser.sawRoot && !parser.closedRoot) {
          var starti = i-1
          while (c && c!=="<" && c!=="&") {
            c = chunk.charAt(i++)
            if (c && parser.trackPosition) {
              parser.position ++
              if (c === "\n") {
                parser.line ++
                parser.column = 0
              } else parser.column ++
            }
          }
          parser.textNode += chunk.substring(starti, i-1)
        }
        if (c === "<") {
          parser.state = S.OPEN_WAKA
          parser.startTagPosition = parser.position
        } else {
          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))
            strictFail(parser, "Text data outside of root node.")
          if (c === "&") parser.state = S.TEXT_ENTITY
          else parser.textNode += c
        }
      continue

      case S.SCRIPT:
        // only non-strict
        if (c === "<") {
          parser.state = S.SCRIPT_ENDING
        } else parser.script += c
      continue

      case S.SCRIPT_ENDING:
        if (c === "/") {
          parser.state = S.CLOSE_TAG
        } else {
          parser.script += "<" + c
          parser.state = S.SCRIPT
        }
      continue

      case S.OPEN_WAKA:
        // either a /, ?, !, or text is coming next.
        if (c === "!") {
          parser.state = S.SGML_DECL
          parser.sgmlDecl = ""
        } else if (is(whitespace, c)) {
          // wait for it...
        } else if (is(nameStart,c)) {
          parser.state = S.OPEN_TAG
          parser.tagName = c
        } else if (c === "/") {
          parser.state = S.CLOSE_TAG
          parser.tagName = ""
        } else if (c === "?") {
          parser.state = S.PROC_INST
          parser.procInstName = parser.procInstBody = ""
        } else {
          strictFail(parser, "Unencoded <")
          // if there was some whitespace, then add that in.
          if (parser.startTagPosition + 1 < parser.position) {
            var pad = parser.position - parser.startTagPosition
            c = new Array(pad).join(" ") + c
          }
          parser.textNode += "<" + c
          parser.state = S.TEXT
        }
      continue

      case S.SGML_DECL:
        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {
          emitNode(parser, "onopencdata")
          parser.state = S.CDATA
          parser.sgmlDecl = ""
          parser.cdata = ""
        } else if (parser.sgmlDecl+c === "--") {
          parser.state = S.COMMENT
          parser.comment = ""
          parser.sgmlDecl = ""
        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {
          parser.state = S.DOCTYPE
          if (parser.doctype || parser.sawRoot) strictFail(parser,
            "Inappropriately located doctype declaration")
          parser.doctype = ""
          parser.sgmlDecl = ""
        } else if (c === ">") {
          emitNode(parser, "onsgmldeclaration", parser.sgmlDecl)
          parser.sgmlDecl = ""
          parser.state = S.TEXT
        } else if (is(quote, c)) {
          parser.state = S.SGML_DECL_QUOTED
          parser.sgmlDecl += c
        } else parser.sgmlDecl += c
      continue

      case S.SGML_DECL_QUOTED:
        if (c === parser.q) {
          parser.state = S.SGML_DECL
          parser.q = ""
        }
        parser.sgmlDecl += c
      continue

      case S.DOCTYPE:
        if (c === ">") {
          parser.state = S.TEXT
          emitNode(parser, "ondoctype", parser.doctype)
          parser.doctype = true // just remember that we saw it.
        } else {
          parser.doctype += c
          if (c === "[") parser.state = S.DOCTYPE_DTD
          else if (is(quote, c)) {
            parser.state = S.DOCTYPE_QUOTED
            parser.q = c
          }
        }
      continue

      case S.DOCTYPE_QUOTED:
        parser.doctype += c
        if (c === parser.q) {
          parser.q = ""
          parser.state = S.DOCTYPE
        }
      continue

      case S.DOCTYPE_DTD:
        parser.doctype += c
        if (c === "]") parser.state = S.DOCTYPE
        else if (is(quote,c)) {
          parser.state = S.DOCTYPE_DTD_QUOTED
          parser.q = c
        }
      continue

      case S.DOCTYPE_DTD_QUOTED:
        parser.doctype += c
        if (c === parser.q) {
          parser.state = S.DOCTYPE_DTD
          parser.q = ""
        }
      continue

      case S.COMMENT:
        if (c === "-") parser.state = S.COMMENT_ENDING
        else parser.comment += c
      continue

      case S.COMMENT_ENDING:
        if (c === "-") {
          parser.state = S.COMMENT_ENDED
          parser.comment = textopts(parser.opt, parser.comment)
          if (parser.comment) emitNode(parser, "oncomment", parser.comment)
          parser.comment = ""
        } else {
          parser.comment += "-" + c
          parser.state = S.COMMENT
        }
      continue

      case S.COMMENT_ENDED:
        if (c !== ">") {
          strictFail(parser, "Malformed comment")
          // allow <!-- blah -- bloo --> in non-strict mode,
          // which is a comment of " blah -- bloo "
          parser.comment += "--" + c
          parser.state = S.COMMENT
        } else parser.state = S.TEXT
      continue

      case S.CDATA:
        if (c === "]") parser.state = S.CDATA_ENDING
        else parser.cdata += c
      continue

      case S.CDATA_ENDING:
        if (c === "]") parser.state = S.CDATA_ENDING_2
        else {
          parser.cdata += "]" + c
          parser.state = S.CDATA
        }
      continue

      case S.CDATA_ENDING_2:
        if (c === ">") {
          if (parser.cdata) emitNode(parser, "oncdata", parser.cdata)
          emitNode(parser, "onclosecdata")
          parser.cdata = ""
          parser.state = S.TEXT
        } else if (c === "]") {
          parser.cdata += "]"
        } else {
          parser.cdata += "]]" + c
          parser.state = S.CDATA
        }
      continue

      case S.PROC_INST:
        if (c === "?") parser.state = S.PROC_INST_ENDING
        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY
        else parser.procInstName += c
      continue

      case S.PROC_INST_BODY:
        if (!parser.procInstBody && is(whitespace, c)) continue
        else if (c === "?") parser.state = S.PROC_INST_ENDING
        else parser.procInstBody += c
      continue

      case S.PROC_INST_ENDING:
        if (c === ">") {
          emitNode(parser, "onprocessinginstruction", {
            name : parser.procInstName,
            body : parser.procInstBody
          })
          parser.procInstName = parser.procInstBody = ""
          parser.state = S.TEXT
        } else {
          parser.procInstBody += "?" + c
          parser.state = S.PROC_INST_BODY
        }
      continue

      case S.OPEN_TAG:
        if (is(nameBody, c)) parser.tagName += c
        else {
          newTag(parser)
          if (c === ">") openTag(parser)
          else if (c === "/") parser.state = S.OPEN_TAG_SLASH
          else {
            if (not(whitespace, c)) strictFail(
              parser, "Invalid character in tag name")
            parser.state = S.ATTRIB
          }
        }
      continue

      case S.OPEN_TAG_SLASH:
        if (c === ">") {
          openTag(parser, true)
          closeTag(parser)
        } else {
          strictFail(parser, "Forward-slash in opening tag not followed by >")
          parser.state = S.ATTRIB
        }
      continue

      case S.ATTRIB:
        // haven't read the attribute name yet.
        if (is(whitespace, c)) continue
        else if (c === ">") openTag(parser)
        else if (c === "/") parser.state = S.OPEN_TAG_SLASH
        else if (is(nameStart, c)) {
          parser.attribName = c
          parser.attribValue = ""
          parser.state = S.ATTRIB_NAME
        } else strictFail(parser, "Invalid attribute name")
      continue

      case S.ATTRIB_NAME:
        if (c === "=") parser.state = S.ATTRIB_VALUE
        else if (c === ">") {
          strictFail(parser, "Attribute without value")
          parser.attribValue = parser.attribName
          attrib(parser)
          openTag(parser)
        }
        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE
        else if (is(nameBody, c)) parser.attribName += c
        else strictFail(parser, "Invalid attribute name")
      continue

      case S.ATTRIB_NAME_SAW_WHITE:
        if (c === "=") parser.state = S.ATTRIB_VALUE
        else if (is(whitespace, c)) continue
        else {
          strictFail(parser, "Attribute without value")
          parser.tag.attributes[parser.attribName] = ""
          parser.attribValue = ""
          emitNode(parser, "onattribute",
                   { name : parser.attribName, value : "" })
          parser.attribName = ""
          if (c === ">") openTag(parser)
          else if (is(nameStart, c)) {
            parser.attribName = c
            parser.state = S.ATTRIB_NAME
          } else {
            strictFail(parser, "Invalid attribute name")
            parser.state = S.ATTRIB
          }
        }
      continue

      case S.ATTRIB_VALUE:
        if (is(whitespace, c)) continue
        else if (is(quote, c)) {
          parser.q = c
          parser.state = S.ATTRIB_VALUE_QUOTED
        } else {
          strictFail(parser, "Unquoted attribute value")
          parser.state = S.ATTRIB_VALUE_UNQUOTED
          parser.attribValue = c
        }
      continue

      case S.ATTRIB_VALUE_QUOTED:
        if (c !== parser.q) {
          if (c === "&") parser.state = S.ATTRIB_VALUE_ENTITY_Q
          else parser.attribValue += c
          continue
        }
        attrib(parser)
        parser.q = ""
        parser.state = S.ATTRIB
      continue

      case S.ATTRIB_VALUE_UNQUOTED:
        if (not(attribEnd,c)) {
          if (c === "&") parser.state = S.ATTRIB_VALUE_ENTITY_U
          else parser.attribValue += c
          continue
        }
        attrib(parser)
        if (c === ">") openTag(parser)
        else parser.state = S.ATTRIB
      continue

      case S.CLOSE_TAG:
        if (!parser.tagName) {
          if (is(whitespace, c)) continue
          else if (not(nameStart, c)) {
            if (parser.script) {
              parser.script += "</" + c
              parser.state = S.SCRIPT
            } else {
              strictFail(parser, "Invalid tagname in closing tag.")
            }
          } else parser.tagName = c
        }
        else if (c === ">") closeTag(parser)
        else if (is(nameBody, c)) parser.tagName += c
        else if (parser.script) {
          parser.script += "</" + parser.tagName
          parser.tagName = ""
          parser.state = S.SCRIPT
        } else {
          if (not(whitespace, c)) strictFail(parser,
            "Invalid tagname in closing tag")
          parser.state = S.CLOSE_TAG_SAW_WHITE
        }
      continue

      case S.CLOSE_TAG_SAW_WHITE:
        if (is(whitespace, c)) continue
        if (c === ">") closeTag(parser)
        else strictFail(parser, "Invalid characters in closing tag")
      continue

      case S.TEXT_ENTITY:
      case S.ATTRIB_VALUE_ENTITY_Q:
      case S.ATTRIB_VALUE_ENTITY_U:
        switch(parser.state) {
          case S.TEXT_ENTITY:
            var returnState = S.TEXT, buffer = "textNode"
          break

          case S.ATTRIB_VALUE_ENTITY_Q:
            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = "attribValue"
          break

          case S.ATTRIB_VALUE_ENTITY_U:
            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = "attribValue"
          break
        }
        if (c === ";") {
          parser[buffer] += parseEntity(parser)
          parser.entity = ""
          parser.state = returnState
        }
        else if (is(entity, c)) parser.entity += c
        else {
          strictFail(parser, "Invalid character entity")
          parser[buffer] += "&" + parser.entity + c
          parser.entity = ""
          parser.state = returnState
        }
      continue

      default:
        throw new Error(parser, "Unknown state: " + parser.state)
    }
  } // while
  // cdata blocks can get very big under normal conditions. emit and move on.
  // if (parser.state === S.CDATA && parser.cdata) {
  //   emitNode(parser, "oncdata", parser.cdata)
  //   parser.cdata = ""
  // }
  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)
  return parser
}

})(typeof exports === "undefined" ? sax = {} : exports)
;
define("sax", (function (global) {
    return function () {
        var ret, fn;
        return ret || global.sax;
    };
}(this)));

define('filters/osis',["sax", "bcv"], function (sax, bcv) {
    var osis = {},
        parser = sax.parser(true); //strict = true

    //* SWFilter Options
    var swFilterOptions = {
        headings: false,
        footnotes: false,
        strongsNumbers: false,
        wordsOfChristInRed: false,
        oneVersePerLine: false,
    };

    osis.processText = function (inRaw, inDirection, inOptions) {
        if (!inOptions || inOptions === {}) {
            inOptions = swFilterOptions;
        } else {
            inOptions.headings = (inOptions.headings) ? inOptions.headings : swFilterOptions.headings;
            inOptions.footnotes = (inOptions.footnotes) ? inOptions.footnotes : swFilterOptions.footnotes;
            inOptions.strongsNumbers = (inOptions.strongsNumbers) ? inOptions.strongsNumbers : swFilterOptions.strongsNumbers;
            inOptions.wordsOfChristInRed = (inOptions.wordsOfChristInRed) ? inOptions.wordsOfChristInRed : swFilterOptions.wordsOfChristInRed;
            inOptions.oneVersePerLine = (inOptions.oneVersePerLine) ? inOptions.oneVersePerLine : swFilterOptions.oneVersePerLine;
        }
        var lastTag = "",
            currentNode = null,
            currentNote = null,
            currentRef = null,
            verseData = null,
            noteText = "",
            outText = "",
            renderedText = "",
            verseNumber = "",
            isTitle = false;


        //console.log(inRaw);

        //Handle Parsing errors
        parser.onerror = function (e) {
            //console.log("ERROR parsing XML", e, lastTag, currentNode);
            parser.resume();
        };

        //Text node
        parser.ontext = function (t) {
            //console.log("TEXT:", t, currentNode.name);
            if (currentNote) {
                if (inOptions.footnotes && currentNote.attributes.type === "crossReference") {
                    //console.log(t);
                    if (lastTag !== "reference")
                        outText += processCrossReference(t, currentNote);
                    else {
                        //console.log(currentRef, t, lastTag);
                        outText += "<a href=\"?type=crossReference&osisRef=" + currentRef.attributes.osisRef + "&n=" + currentNote.attributes.n + "\">" + t + "</a>";
                    }
                }
            } else if (currentNode) {
                switch (currentNode.name) {
                    case "title":
                        if (currentNode.attributes.type === "section")
                            outText = "<h3>" + t + "</h3>" + outText;
                        else
                            outText = "<h1>" + t + "</h1>" + outText;
                    break;
                    default:
                        outText += t;
                    break;
                }
            } else {
                outText += t;
            }


        };

        //Handle opening tags
        parser.onopentag = function (node) {
            //console.log(node);
            currentNode = node;
            lastTag = node.name;
            switch (node.name) {
                case "xml":
                    verseData = {osisRef: node.attributes.osisRef, verseNum: node.attributes.verseNum};
                    if (inDirection === "RtoL")
                        //outText += "<span dir='rtl' class='verse-number'> " + verseData.verseNum + " </span><span dir='rtl'>";
                        outText += "<span dir='rtl'><a href=\"?type=verseNum&osisRef=" + verseData.osisRef + "\" class='verse-number'> " + verseData.verseNum + " </a><span dir='rtl'>";
                    else
                        //outText += "<span class='verse-number'> " + verseData.verseNum + " </span>";
                        outText += "<a href=\"?type=verseNum&osisRef=" + verseData.osisRef + "\" class='verse-number'> " + verseData.verseNum + " </a>";
                break;
                case "note":
                    //console.log(node, isNote, lastTag);
                    if (node.attributes.type === "crossReference" && inOptions.footnotes)
                        outText += "[";
                    currentNote = node;
                break;
                case "reference":
                    currentRef = node;
                break;
            }
        };

        parser.onclosetag = function (tagName) {
            //console.log("CLOSE:", tagName);
            switch (tagName) {
                case "title":
                    currentNode = null;
                break;
                case "note":
                    if (currentNote.attributes.type === "crossReference" && inOptions.footnotes)
                        outText += "] ";
                    noteText = "";
                    currentNote = null;
                break;
                case "reference":
                    currentRef = null;
                break;
                case "xml":
                    if(inDirection === "RtoL")
                        outText += "</span>";
                break;
            }
            lastTag = "";
        };

        //Handling Attributes
        parser.onattribute = function (attr) {
            //console.log(attr);
        };

        //End of parsing
        parser.onend = function () {
            //console.log("Finished parsing XML!");
        };

        var tmp = "";
        for (var i=0; i<inRaw.length; i++) {
            //console.log(inRaw[i].text);
            tmp = "<xml osisRef='" + inRaw[i].osis + "' verseNum = '" + inRaw[i].verse + "'>" + inRaw[i].text + "</xml>";
            parser.write(tmp);
            parser.close();
            renderedText += (inOptions.oneVersePerLine) ? "<div class='verse' id = '" + inRaw[i].osis + "'>" + outText + "</div>" : "<span class='verse' id = '" + inRaw[i].osis + "'>" + outText + "</span>";
            outText = "";
        }

        if(inDirection === "RtoL")
            renderedText = "<div style='text-align: right;'>" + renderedText + "</div>";
        return renderedText;
    };

    function processCrossReference(inText, inNode) {
        var outText = "";
        if (bcv.parse(inText).osis() !== "")
            outText = "<a href=\"?type=crossReference&osisRef=" + bcv.parse(inText).osis() + "&n=" + inNode.attributes.n + "\">" + inText + "</a>";
        else
            outText = inText;
        return outText;
    }
    return osis;
});
define('filters/plain',[], function () {
    //* SWFilter Options
    var plain = {},
        swFilterOptions = {
            oneVersePerLine: false
        };

    plain.processText = function (inRaw, inDirection, inOptions) {
        var renderedText = "";
        if (!inOptions || inOptions === {}) {
            inOptions = swFilterOptions;
        } else {
            inOptions.oneVersePerLine = (inOptions.oneVersePerLine) ? inOptions.oneVersePerLine : swFilterOptions.oneVersePerLine;
        }

        for (var i=0; i<inRaw.length; i++) {
            outText = (inDirection !== "RtoL") ? "<a href=\"?type=verseNum&osisRef=" + inRaw[i].osis + "\" class='verse-number'> " + inRaw[i].verse + " </a>" : "<span dir='rtl'><a href=\"?type=verseNum&osisRef=" + inRaw[i].osis + "\" class='verse-number'> " + inRaw[i].verse + " </a></span>";
            outText += (inDirection !== "RtoL") ? inRaw[i].text : "<span dir='rtl'>" + inRaw[i].text + "</span>";
            renderedText += (inOptions.oneVersePerLine) ? "<div class='verse' id = '" + inRaw[i].osis + "'>" + outText + "</div>" : "<span class='verse' id = '" + inRaw[i].osis + "'>" + outText + "</span>";
            outText = "";
        }

        if(inDirection === "RtoL")
            renderedText = "<div style='text-align: right;'>" + renderedText + "</div>";
        return renderedText;
    };


    return plain;
});
define('filterMgr',["filters/osis", "filters/plain"], function (osis, plain) {
    function processText(inRaw, inSource, inDirection, inOptions) {
        if(inSource && inSource.toLowerCase() === "osis")
            return osis.processText(inRaw, inDirection, inOptions);
        else
            return plain.processText(inRaw, inDirection, inOptions);
    }

    return {
        processText: processText
    };
});
/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('swmodule',["dataMgr", "verseKey", "zText", "filterMgr", "versificationMgr"], function (dataMgr, verseKey, zText, filterMgr, versificationMgr) {
    var otBin = null,
        ntBin = null;

    //Constructor
    function Module(inModName, inId, inConfig) {
        if (!(this instanceof Module)) {
            throw new TypeError("Module constructor cannot be called as a function.");
        }

        this.modKey = inModName;
        this.id = inId;
        this.config = inConfig;
    }

    Module.create = function (inModName, inId, inConfig) {
        return new Module(inModName, inId, inConfig);
    };

    //get a module's config
    function getConfig(inId, inCallback) {
        /*dataMgr.getDocument(inId, function (inError, inConfig) {
            if (!inError)
                inCallback(inConfig);
        });*/
    }

    //get the module binary files
    function getBinaryBlob(inId, inCallback) {
        dataMgr.getBlob(inId, inCallback);
    }

    //Module Instance
    Module.prototype = {
        constructor: Module,
        self: this,

        renderText: function (inVKey, inOptions, inCallback) {
            var bcvPos = null,
                blobId = null,
                self = this;
            if (typeof inOptions === "function")
                inCallback = inOptions;
            var vList = verseKey.parseVerseList(inVKey, this.config.Versification);
            //console.log(vList);
            if(vList.length !== 0 && vList[0].osis !== "") {
                dataMgr.get(self.config.bcvPosID, function(inError, inBcv) {
                    if(!inError) {
                        if (inBcv.nt && inBcv.nt.hasOwnProperty(vList[0].book)) {
                            bcvPos = inBcv.nt[vList[0].book];
                            blobId = self.config.nt;
                        } else if (inBcv.ot && inBcv.ot.hasOwnProperty(vList[0].book)) {
                            bcvPos = inBcv.ot[vList[0].book];
                            blobId = self.config.ot;
                        }

                        if(bcvPos === null)
                            inCallback({message: "Wrong passage. The requested chapter is not available in this module."});

                        getBinaryBlob(blobId, function (inError, inBlob) {
                            if (!inError) {
                                zText.getRawEntry(inBlob, bcvPos, vList, self.config.Encoding, function (inError, inRaw) {
                                    //console.log(inError, inRaw);
                                    if (!inError)
                                        inCallback(null, filterMgr.processText(inRaw, self.config.SourceType, self.config.Direction, inOptions));
                                    else
                                        inCallback(inError);
                                });
                            }

                        });
                    } else {
                        inCallback(inError);
                    }

                });
            } else {
                inCallback({message: "Wrong passage. The requested chapter is not available in this module."});
            }
        },

        getAllBooks: function () {
            return versificationMgr.getAllBooks(this.config.Versification);
        },

        //inOsis can be Matt.3
        getVersesInChapter: function (inOsis) {
            return versificationMgr.getVersesInChapter(versificationMgr.getBookNum(inOsis.split(".")[0], this.config.Versification), inOsis.split(".")[1], this.config.Versification);
        }
    };

    return Module;
});
/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/

define('moduleMgr',["dataMgr", "swmodule"], function (dataMgr, Module) {
    var moduleMgr = {};

    moduleMgr.getModules = function (inCallback) {
        var modules = [];
        dataMgr.getModules(function (inError, inModules) {
            if(!inError) {
                inModules.forEach(function (mod) {
                    modules.push(new Module(mod.moduleKey, mod.id, mod));
                });
                inCallback(null, modules);
            } else
                inCallback(inError);
        });
    };

    moduleMgr.getModule = function(inId, inCallback) {
        dataMgr.get(inId, function (inError, inMod) {
            if(!inError) inCallback(null, new Module(inMod.moduleKey, inId, inMod));
            else inCallback(null);
        });
    };

    return moduleMgr;
});
/*### BEGIN LICENSE
# Copyright (C) 2013 Stephan Tetzel <info@zefanjas.de>
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
### END LICENSE*/
require.config({
    paths: {
        //"sword": "../sword.min",
        "text": "libs/text/text",
        "json": "libs/json/src/json",
        "async": "libs/async/lib/async",
        "bcv": "libs/bible-reference-parser/js/en_bcv_parser.min",
        "unzip": "libs/zlib/bin/unzip.min",
        "inflateStream": "libs/zlib/bin/inflate_stream.min",
        "sax": "libs/sax/lib/sax",
        "idb": "libs/IDBWrapper/idbstore.min"

    },
    shim: {
        "bcv": {
            exports: "bcv_parser",
            init: function () {
                return new this.bcv_parser();
            }
        },
        "unzip": {
            exports: "Zlib"
        },
        "inflateStream": {
            exports: "Zlib"
        },
        "sax": {
            exports: "sax"
        }
    }
});

define('sword',["installMgr", "moduleMgr", "dataMgr", "versificationMgr", "verseKey"],
    function (installMgr, moduleMgr, dataMgr, versificationMgr, verseKey) {
        var sword = {};
        sword.installMgr = installMgr;
        sword.moduleMgr = moduleMgr;
        sword.versificationMgr = versificationMgr;
        sword.dataMgr = dataMgr;
        sword.verseKey = verseKey;

        //check if sword is supported in your environment
        sword.isSupported = function () {
            //simple Array forEach check
            var toString = {}.toString,
                EMPTY_ARRAY = [],
                FUNCTION_CLASS = "[object Function]";
            if (window.FileReader && toString.call(EMPTY_ARRAY.forEach) == FUNCTION_CLASS)
                return true;
            else
                return false;
        };

        return sword;
});    //The modules for your project will be inlined above
    //this snippet. Ask almond to synchronously require the
    //module value for 'main' here and return it as the
    //value to use for the public API for the built file.
    return require('sword');
}));